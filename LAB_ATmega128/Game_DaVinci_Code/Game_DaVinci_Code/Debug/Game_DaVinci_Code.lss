
Game_DaVinci_Code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000037c  00800100  00001338  000013cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001338  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000d0  0080047c  0080047c  00001748  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001748  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001778  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  000017b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002335  00000000  00000000  00001844  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008b3  00000000  00000000  00003b79  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001169  00000000  00000000  0000442c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c4  00000000  00000000  00005598  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000583  00000000  00000000  0000575c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ce6  00000000  00000000  00005cdf  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  000069c5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	61 c0       	rjmp	.+194    	; 0xc8 <__bad_interrupt>
       6:	00 00       	nop
       8:	5f c0       	rjmp	.+190    	; 0xc8 <__bad_interrupt>
       a:	00 00       	nop
       c:	5d c0       	rjmp	.+186    	; 0xc8 <__bad_interrupt>
       e:	00 00       	nop
      10:	5b c0       	rjmp	.+182    	; 0xc8 <__bad_interrupt>
      12:	00 00       	nop
      14:	59 c0       	rjmp	.+178    	; 0xc8 <__bad_interrupt>
      16:	00 00       	nop
      18:	57 c0       	rjmp	.+174    	; 0xc8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	55 c0       	rjmp	.+170    	; 0xc8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	53 c0       	rjmp	.+166    	; 0xc8 <__bad_interrupt>
      22:	00 00       	nop
      24:	51 c0       	rjmp	.+162    	; 0xc8 <__bad_interrupt>
      26:	00 00       	nop
      28:	4f c0       	rjmp	.+158    	; 0xc8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4d c0       	rjmp	.+154    	; 0xc8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4b c0       	rjmp	.+150    	; 0xc8 <__bad_interrupt>
      32:	00 00       	nop
      34:	49 c0       	rjmp	.+146    	; 0xc8 <__bad_interrupt>
      36:	00 00       	nop
      38:	47 c0       	rjmp	.+142    	; 0xc8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	45 c0       	rjmp	.+138    	; 0xc8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	43 c0       	rjmp	.+134    	; 0xc8 <__bad_interrupt>
      42:	00 00       	nop
      44:	41 c0       	rjmp	.+130    	; 0xc8 <__bad_interrupt>
      46:	00 00       	nop
      48:	3f c0       	rjmp	.+126    	; 0xc8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3d c0       	rjmp	.+122    	; 0xc8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3b c0       	rjmp	.+118    	; 0xc8 <__bad_interrupt>
      52:	00 00       	nop
      54:	39 c0       	rjmp	.+114    	; 0xc8 <__bad_interrupt>
      56:	00 00       	nop
      58:	37 c0       	rjmp	.+110    	; 0xc8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	35 c0       	rjmp	.+106    	; 0xc8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	33 c0       	rjmp	.+102    	; 0xc8 <__bad_interrupt>
      62:	00 00       	nop
      64:	31 c0       	rjmp	.+98     	; 0xc8 <__bad_interrupt>
      66:	00 00       	nop
      68:	2f c0       	rjmp	.+94     	; 0xc8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2d c0       	rjmp	.+90     	; 0xc8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2b c0       	rjmp	.+86     	; 0xc8 <__bad_interrupt>
      72:	00 00       	nop
      74:	29 c0       	rjmp	.+82     	; 0xc8 <__bad_interrupt>
      76:	00 00       	nop
      78:	27 c0       	rjmp	.+78     	; 0xc8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	25 c0       	rjmp	.+74     	; 0xc8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	23 c0       	rjmp	.+70     	; 0xc8 <__bad_interrupt>
      82:	00 00       	nop
      84:	21 c0       	rjmp	.+66     	; 0xc8 <__bad_interrupt>
      86:	00 00       	nop
      88:	1f c0       	rjmp	.+62     	; 0xc8 <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e1       	ldi	r29, 0x10	; 16
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	14 e0       	ldi	r17, 0x04	; 4
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e8 e3       	ldi	r30, 0x38	; 56
      a0:	f3 e1       	ldi	r31, 0x13	; 19
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	ac 37       	cpi	r26, 0x7C	; 124
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	25 e0       	ldi	r18, 0x05	; 5
      b4:	ac e7       	ldi	r26, 0x7C	; 124
      b6:	b4 e0       	ldi	r27, 0x04	; 4
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	ac 34       	cpi	r26, 0x4C	; 76
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	a1 d3       	rcall	.+1858   	; 0x806 <main>
      c4:	0c 94 9a 09 	jmp	0x1334	; 0x1334 <_exit>

000000c8 <__bad_interrupt>:
      c8:	9b cf       	rjmp	.-202    	; 0x0 <__vectors>

000000ca <Timer_Init>:
/*******************************************************************/
/*                         Timer Functions                         */
/*******************************************************************/

void Timer_Init(){
	TCCR0 = (1<<CS0);
      ca:	81 e0       	ldi	r24, 0x01	; 1
      cc:	83 bf       	out	0x33, r24	; 51
	TIMSK = (1<<TOIE0);
      ce:	87 bf       	out	0x37, r24	; 55
	TCNT0 = 0;
      d0:	12 be       	out	0x32, r1	; 50
	TCCR2 = (1<<CS20)|(1<<CS21)|(0<<CS22); // prescale 64
      d2:	83 e0       	ldi	r24, 0x03	; 3
      d4:	85 bd       	out	0x25, r24	; 37
	TIMSK = (1<<TOIE2);
      d6:	80 e4       	ldi	r24, 0x40	; 64
      d8:	87 bf       	out	0x37, r24	; 55
	TCNT2 = 93;
      da:	8d e5       	ldi	r24, 0x5D	; 93
      dc:	84 bd       	out	0x24, r24	; 36
      de:	08 95       	ret

000000e0 <USART0_Init>:
/*******************************************************************/
/*                         USART Functions                         */
/*******************************************************************/

void USART0_Init(unsigned int ubrr){ // Set USART0 Registers
	UBRR0H = (unsigned char)(ubrr >> 8); // UBRR's High bits
      e0:	90 93 90 00 	sts	0x0090, r25	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	UBRR0L = (unsigned char)(ubrr);		 // UBRR;s Low bits -> UBRR : 103
      e4:	89 b9       	out	0x09, r24	; 9
	UCSR0B = (1<<RXEN0) | (1<<TXEN0); // Receive Enable, Transmit Enable
      e6:	88 e1       	ldi	r24, 0x18	; 24
      e8:	8a b9       	out	0x0a, r24	; 10
	UCSR0C = (1<<UCSZ00) | (1<<UCSZ01);			// Set Data bits to 8 bits
      ea:	86 e0       	ldi	r24, 0x06	; 6
      ec:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
      f0:	08 95       	ret

000000f2 <USART0_Transmit>:
}

void USART0_Transmit(char data){
	while(!((UCSR0A)  & (1<<UDRE0))); // Wait for Data Register empty
      f2:	5d 9b       	sbis	0x0b, 5	; 11
      f4:	fe cf       	rjmp	.-4      	; 0xf2 <USART0_Transmit>
	UDR0 = data;
      f6:	8c b9       	out	0x0c, r24	; 12
      f8:	08 95       	ret

000000fa <USART0_Transmit_String>:
}

void USART0_Transmit_String(char *str){
      fa:	cf 93       	push	r28
      fc:	df 93       	push	r29
      fe:	ec 01       	movw	r28, r24
	while(*str != '\0') USART0_Transmit(*str++);
     100:	88 81       	ld	r24, Y
     102:	88 23       	and	r24, r24
     104:	29 f0       	breq	.+10     	; 0x110 <USART0_Transmit_String+0x16>
     106:	21 96       	adiw	r28, 0x01	; 1
     108:	f4 df       	rcall	.-24     	; 0xf2 <USART0_Transmit>
     10a:	89 91       	ld	r24, Y+
     10c:	81 11       	cpse	r24, r1
     10e:	fc cf       	rjmp	.-8      	; 0x108 <USART0_Transmit_String+0xe>
}
     110:	df 91       	pop	r29
     112:	cf 91       	pop	r28
     114:	08 95       	ret

00000116 <USART0_Receive>:

char USART0_Receive(void){
	while(!(UCSR0A & (1<<RXC0))); // Wait for Receive Buffer is empty
     116:	5f 9b       	sbis	0x0b, 7	; 11
     118:	fe cf       	rjmp	.-4      	; 0x116 <USART0_Receive>
	return UDR0;
     11a:	8c b1       	in	r24, 0x0c	; 12
}
     11c:	08 95       	ret

0000011e <USART1_Init>:

void USART1_Init(unsigned int ubrr){ // Set USART0 Registers
	UBRR1H = (unsigned char)(ubrr >> 8); // UBRR's High bits
     11e:	90 93 98 00 	sts	0x0098, r25	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
	UBRR1L = (unsigned char)(ubrr);		 // UBRR;s Low bits -> UBRR : 103
     122:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
	UCSR1B = (1<<RXEN1) | (1<<TXEN1); // Receive Enable, Transmit Enable
     126:	88 e1       	ldi	r24, 0x18	; 24
     128:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
	UCSR1C = (1<<UCSZ10) | (1<<UCSZ11);			// Set Data bits to 8 bits
     12c:	86 e0       	ldi	r24, 0x06	; 6
     12e:	80 93 9d 00 	sts	0x009D, r24	; 0x80009d <__TEXT_REGION_LENGTH__+0x7e009d>
     132:	08 95       	ret

00000134 <USART1_Transmit>:
}

void USART1_Transmit(char data){
	while(!((UCSR1A)  & (1<<UDRE1))); // Wait for Data Register empty
     134:	eb e9       	ldi	r30, 0x9B	; 155
     136:	f0 e0       	ldi	r31, 0x00	; 0
     138:	90 81       	ld	r25, Z
     13a:	95 ff       	sbrs	r25, 5
     13c:	fd cf       	rjmp	.-6      	; 0x138 <USART1_Transmit+0x4>
	UDR1 = data;
     13e:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
     142:	08 95       	ret

00000144 <USART1_Transmit_String>:
}

void USART1_Transmit_String(char *str){
     144:	cf 93       	push	r28
     146:	df 93       	push	r29
     148:	ec 01       	movw	r28, r24
	while(*str != '\0') USART1_Transmit(*str++);
     14a:	88 81       	ld	r24, Y
     14c:	88 23       	and	r24, r24
     14e:	29 f0       	breq	.+10     	; 0x15a <USART1_Transmit_String+0x16>
     150:	21 96       	adiw	r28, 0x01	; 1
     152:	f0 df       	rcall	.-32     	; 0x134 <USART1_Transmit>
     154:	89 91       	ld	r24, Y+
     156:	81 11       	cpse	r24, r1
     158:	fc cf       	rjmp	.-8      	; 0x152 <USART1_Transmit_String+0xe>
}
     15a:	df 91       	pop	r29
     15c:	cf 91       	pop	r28
     15e:	08 95       	ret

00000160 <USART_Transmit_number>:

/*******************************************************************/
/*                          USER Functions                         */
/*******************************************************************/
void USART_Transmit_number(char USART_NUM,char num){
	if(num == 0){
     160:	61 11       	cpse	r22, r1
     162:	0d c0       	rjmp	.+26     	; 0x17e <USART_Transmit_number+0x1e>
		if(USART_NUM == 0) USART0_Transmit_String("00");
     164:	81 11       	cpse	r24, r1
     166:	04 c0       	rjmp	.+8      	; 0x170 <USART_Transmit_number+0x10>
     168:	80 e0       	ldi	r24, 0x00	; 0
     16a:	91 e0       	ldi	r25, 0x01	; 1
     16c:	c6 cf       	rjmp	.-116    	; 0xfa <USART0_Transmit_String>
     16e:	08 95       	ret
		else if(USART_NUM == 1) USART1_Transmit_String("00");
     170:	81 30       	cpi	r24, 0x01	; 1
     172:	09 f0       	breq	.+2      	; 0x176 <USART_Transmit_number+0x16>
     174:	b3 c0       	rjmp	.+358    	; 0x2dc <USART_Transmit_number+0x17c>
     176:	80 e0       	ldi	r24, 0x00	; 0
     178:	91 e0       	ldi	r25, 0x01	; 1
     17a:	e4 cf       	rjmp	.-56     	; 0x144 <USART1_Transmit_String>
     17c:	08 95       	ret
	}
	else if(num == 1){
     17e:	61 30       	cpi	r22, 0x01	; 1
     180:	69 f4       	brne	.+26     	; 0x19c <USART_Transmit_number+0x3c>
		if(USART_NUM == 0) USART0_Transmit_String("01");
     182:	81 11       	cpse	r24, r1
     184:	04 c0       	rjmp	.+8      	; 0x18e <USART_Transmit_number+0x2e>
     186:	83 e0       	ldi	r24, 0x03	; 3
     188:	91 e0       	ldi	r25, 0x01	; 1
     18a:	b7 cf       	rjmp	.-146    	; 0xfa <USART0_Transmit_String>
     18c:	08 95       	ret
		else if(USART_NUM == 1) USART1_Transmit_String("01");
     18e:	81 30       	cpi	r24, 0x01	; 1
     190:	09 f0       	breq	.+2      	; 0x194 <USART_Transmit_number+0x34>
     192:	a4 c0       	rjmp	.+328    	; 0x2dc <USART_Transmit_number+0x17c>
     194:	83 e0       	ldi	r24, 0x03	; 3
     196:	91 e0       	ldi	r25, 0x01	; 1
     198:	d5 cf       	rjmp	.-86     	; 0x144 <USART1_Transmit_String>
     19a:	08 95       	ret
	}
	else if(num == 2){
     19c:	62 30       	cpi	r22, 0x02	; 2
     19e:	69 f4       	brne	.+26     	; 0x1ba <USART_Transmit_number+0x5a>
		if(USART_NUM == 0) USART0_Transmit_String("02");
     1a0:	81 11       	cpse	r24, r1
     1a2:	04 c0       	rjmp	.+8      	; 0x1ac <USART_Transmit_number+0x4c>
     1a4:	86 e0       	ldi	r24, 0x06	; 6
     1a6:	91 e0       	ldi	r25, 0x01	; 1
     1a8:	a8 cf       	rjmp	.-176    	; 0xfa <USART0_Transmit_String>
     1aa:	08 95       	ret
		else if(USART_NUM == 1) USART1_Transmit_String("02");
     1ac:	81 30       	cpi	r24, 0x01	; 1
     1ae:	09 f0       	breq	.+2      	; 0x1b2 <USART_Transmit_number+0x52>
     1b0:	95 c0       	rjmp	.+298    	; 0x2dc <USART_Transmit_number+0x17c>
     1b2:	86 e0       	ldi	r24, 0x06	; 6
     1b4:	91 e0       	ldi	r25, 0x01	; 1
     1b6:	c6 cf       	rjmp	.-116    	; 0x144 <USART1_Transmit_String>
     1b8:	08 95       	ret
	}
	else if(num == 3){
     1ba:	63 30       	cpi	r22, 0x03	; 3
		if(USART_NUM == 0) USART0_Transmit_String("03");
     1bc:	69 f4       	brne	.+26     	; 0x1d8 <USART_Transmit_number+0x78>
     1be:	81 11       	cpse	r24, r1
     1c0:	04 c0       	rjmp	.+8      	; 0x1ca <USART_Transmit_number+0x6a>
     1c2:	89 e0       	ldi	r24, 0x09	; 9
     1c4:	91 e0       	ldi	r25, 0x01	; 1
     1c6:	99 cf       	rjmp	.-206    	; 0xfa <USART0_Transmit_String>
		else if(USART_NUM == 1) USART1_Transmit_String("03");
     1c8:	08 95       	ret
     1ca:	81 30       	cpi	r24, 0x01	; 1
     1cc:	09 f0       	breq	.+2      	; 0x1d0 <USART_Transmit_number+0x70>
     1ce:	86 c0       	rjmp	.+268    	; 0x2dc <USART_Transmit_number+0x17c>
     1d0:	89 e0       	ldi	r24, 0x09	; 9
     1d2:	91 e0       	ldi	r25, 0x01	; 1
     1d4:	b7 cf       	rjmp	.-146    	; 0x144 <USART1_Transmit_String>
	}
	else if(num == 4){
     1d6:	08 95       	ret
     1d8:	64 30       	cpi	r22, 0x04	; 4
		if(USART_NUM == 0) USART0_Transmit_String("04");
     1da:	69 f4       	brne	.+26     	; 0x1f6 <USART_Transmit_number+0x96>
     1dc:	81 11       	cpse	r24, r1
     1de:	04 c0       	rjmp	.+8      	; 0x1e8 <USART_Transmit_number+0x88>
     1e0:	8c e0       	ldi	r24, 0x0C	; 12
     1e2:	91 e0       	ldi	r25, 0x01	; 1
     1e4:	8a cf       	rjmp	.-236    	; 0xfa <USART0_Transmit_String>
		else if(USART_NUM == 1) USART1_Transmit_String("04");
     1e6:	08 95       	ret
     1e8:	81 30       	cpi	r24, 0x01	; 1
     1ea:	09 f0       	breq	.+2      	; 0x1ee <USART_Transmit_number+0x8e>
     1ec:	77 c0       	rjmp	.+238    	; 0x2dc <USART_Transmit_number+0x17c>
     1ee:	8c e0       	ldi	r24, 0x0C	; 12
     1f0:	91 e0       	ldi	r25, 0x01	; 1
     1f2:	a8 cf       	rjmp	.-176    	; 0x144 <USART1_Transmit_String>
	}
	else if(num == 5){
     1f4:	08 95       	ret
     1f6:	65 30       	cpi	r22, 0x05	; 5
		if(USART_NUM == 0) USART0_Transmit_String("05");
     1f8:	69 f4       	brne	.+26     	; 0x214 <USART_Transmit_number+0xb4>
     1fa:	81 11       	cpse	r24, r1
     1fc:	04 c0       	rjmp	.+8      	; 0x206 <USART_Transmit_number+0xa6>
     1fe:	8f e0       	ldi	r24, 0x0F	; 15
     200:	91 e0       	ldi	r25, 0x01	; 1
     202:	7b cf       	rjmp	.-266    	; 0xfa <USART0_Transmit_String>
		else if(USART_NUM == 1) USART1_Transmit_String("05");
     204:	08 95       	ret
     206:	81 30       	cpi	r24, 0x01	; 1
     208:	09 f0       	breq	.+2      	; 0x20c <USART_Transmit_number+0xac>
     20a:	68 c0       	rjmp	.+208    	; 0x2dc <USART_Transmit_number+0x17c>
     20c:	8f e0       	ldi	r24, 0x0F	; 15
     20e:	91 e0       	ldi	r25, 0x01	; 1
     210:	99 cf       	rjmp	.-206    	; 0x144 <USART1_Transmit_String>
	}
	else if(num == 6){
     212:	08 95       	ret
		if(USART_NUM == 0) USART0_Transmit_String("06");
     214:	66 30       	cpi	r22, 0x06	; 6
     216:	69 f4       	brne	.+26     	; 0x232 <USART_Transmit_number+0xd2>
     218:	81 11       	cpse	r24, r1
     21a:	04 c0       	rjmp	.+8      	; 0x224 <USART_Transmit_number+0xc4>
     21c:	82 e1       	ldi	r24, 0x12	; 18
     21e:	91 e0       	ldi	r25, 0x01	; 1
     220:	6c cf       	rjmp	.-296    	; 0xfa <USART0_Transmit_String>
		else if(USART_NUM == 1) USART1_Transmit_String("06");
     222:	08 95       	ret
     224:	81 30       	cpi	r24, 0x01	; 1
     226:	09 f0       	breq	.+2      	; 0x22a <USART_Transmit_number+0xca>
     228:	59 c0       	rjmp	.+178    	; 0x2dc <USART_Transmit_number+0x17c>
     22a:	82 e1       	ldi	r24, 0x12	; 18
     22c:	91 e0       	ldi	r25, 0x01	; 1
	}
	else if(num == 7){
     22e:	8a cf       	rjmp	.-236    	; 0x144 <USART1_Transmit_String>
     230:	08 95       	ret
		if(USART_NUM == 0) USART0_Transmit_String("07");
     232:	67 30       	cpi	r22, 0x07	; 7
     234:	69 f4       	brne	.+26     	; 0x250 <USART_Transmit_number+0xf0>
     236:	81 11       	cpse	r24, r1
     238:	04 c0       	rjmp	.+8      	; 0x242 <USART_Transmit_number+0xe2>
     23a:	85 e1       	ldi	r24, 0x15	; 21
     23c:	91 e0       	ldi	r25, 0x01	; 1
		else if(USART_NUM == 1) USART1_Transmit_String("07");
     23e:	5d cf       	rjmp	.-326    	; 0xfa <USART0_Transmit_String>
     240:	08 95       	ret
     242:	81 30       	cpi	r24, 0x01	; 1
     244:	09 f0       	breq	.+2      	; 0x248 <USART_Transmit_number+0xe8>
     246:	4a c0       	rjmp	.+148    	; 0x2dc <USART_Transmit_number+0x17c>
     248:	85 e1       	ldi	r24, 0x15	; 21
     24a:	91 e0       	ldi	r25, 0x01	; 1
	}
	else if(num == 8){
     24c:	7b cf       	rjmp	.-266    	; 0x144 <USART1_Transmit_String>
     24e:	08 95       	ret
		if(USART_NUM == 0) USART0_Transmit_String("08");
     250:	68 30       	cpi	r22, 0x08	; 8
     252:	69 f4       	brne	.+26     	; 0x26e <USART_Transmit_number+0x10e>
     254:	81 11       	cpse	r24, r1
     256:	04 c0       	rjmp	.+8      	; 0x260 <USART_Transmit_number+0x100>
     258:	88 e1       	ldi	r24, 0x18	; 24
     25a:	91 e0       	ldi	r25, 0x01	; 1
		else if(USART_NUM == 1) USART1_Transmit_String("08");
     25c:	4e cf       	rjmp	.-356    	; 0xfa <USART0_Transmit_String>
     25e:	08 95       	ret
     260:	81 30       	cpi	r24, 0x01	; 1
     262:	09 f0       	breq	.+2      	; 0x266 <USART_Transmit_number+0x106>
     264:	3b c0       	rjmp	.+118    	; 0x2dc <USART_Transmit_number+0x17c>
     266:	88 e1       	ldi	r24, 0x18	; 24
     268:	91 e0       	ldi	r25, 0x01	; 1
	}
	else if(num == 9){
     26a:	6c cf       	rjmp	.-296    	; 0x144 <USART1_Transmit_String>
     26c:	08 95       	ret
		if(USART_NUM == 0) USART0_Transmit_String("09");
     26e:	69 30       	cpi	r22, 0x09	; 9
     270:	61 f4       	brne	.+24     	; 0x28a <USART_Transmit_number+0x12a>
     272:	81 11       	cpse	r24, r1
     274:	04 c0       	rjmp	.+8      	; 0x27e <USART_Transmit_number+0x11e>
     276:	8b e1       	ldi	r24, 0x1B	; 27
		else if(USART_NUM == 1) USART1_Transmit_String("09");
     278:	91 e0       	ldi	r25, 0x01	; 1
     27a:	3f cf       	rjmp	.-386    	; 0xfa <USART0_Transmit_String>
     27c:	08 95       	ret
     27e:	81 30       	cpi	r24, 0x01	; 1
     280:	69 f5       	brne	.+90     	; 0x2dc <USART_Transmit_number+0x17c>
     282:	8b e1       	ldi	r24, 0x1B	; 27
     284:	91 e0       	ldi	r25, 0x01	; 1
	}
	else if(num == 10){
     286:	5e cf       	rjmp	.-324    	; 0x144 <USART1_Transmit_String>
		if(USART_NUM == 0) USART0_Transmit_String("10");
     288:	08 95       	ret
     28a:	6a 30       	cpi	r22, 0x0A	; 10
     28c:	61 f4       	brne	.+24     	; 0x2a6 <USART_Transmit_number+0x146>
     28e:	81 11       	cpse	r24, r1
     290:	04 c0       	rjmp	.+8      	; 0x29a <USART_Transmit_number+0x13a>
     292:	8e e1       	ldi	r24, 0x1E	; 30
		else if(USART_NUM == 1) USART1_Transmit_String("10");
     294:	91 e0       	ldi	r25, 0x01	; 1
     296:	31 cf       	rjmp	.-414    	; 0xfa <USART0_Transmit_String>
     298:	08 95       	ret
     29a:	81 30       	cpi	r24, 0x01	; 1
     29c:	f9 f4       	brne	.+62     	; 0x2dc <USART_Transmit_number+0x17c>
     29e:	8e e1       	ldi	r24, 0x1E	; 30
	}
	else if(num == 11){
     2a0:	91 e0       	ldi	r25, 0x01	; 1
     2a2:	50 cf       	rjmp	.-352    	; 0x144 <USART1_Transmit_String>
		if(USART_NUM == 0) USART0_Transmit_String("11");
     2a4:	08 95       	ret
     2a6:	6b 30       	cpi	r22, 0x0B	; 11
     2a8:	61 f4       	brne	.+24     	; 0x2c2 <USART_Transmit_number+0x162>
     2aa:	81 11       	cpse	r24, r1
     2ac:	04 c0       	rjmp	.+8      	; 0x2b6 <USART_Transmit_number+0x156>
     2ae:	81 e2       	ldi	r24, 0x21	; 33
		else if(USART_NUM == 1) USART1_Transmit_String("11");
     2b0:	91 e0       	ldi	r25, 0x01	; 1
     2b2:	23 cf       	rjmp	.-442    	; 0xfa <USART0_Transmit_String>
     2b4:	08 95       	ret
     2b6:	81 30       	cpi	r24, 0x01	; 1
     2b8:	89 f4       	brne	.+34     	; 0x2dc <USART_Transmit_number+0x17c>
     2ba:	81 e2       	ldi	r24, 0x21	; 33
     2bc:	91 e0       	ldi	r25, 0x01	; 1
	}
	else if(num == 12){
     2be:	42 cf       	rjmp	.-380    	; 0x144 <USART1_Transmit_String>
     2c0:	08 95       	ret
		if(USART_NUM == 0) USART0_Transmit_String("12");
     2c2:	6c 30       	cpi	r22, 0x0C	; 12
     2c4:	59 f4       	brne	.+22     	; 0x2dc <USART_Transmit_number+0x17c>
     2c6:	81 11       	cpse	r24, r1
     2c8:	04 c0       	rjmp	.+8      	; 0x2d2 <USART_Transmit_number+0x172>
     2ca:	84 e2       	ldi	r24, 0x24	; 36
     2cc:	91 e0       	ldi	r25, 0x01	; 1
     2ce:	15 cf       	rjmp	.-470    	; 0xfa <USART0_Transmit_String>
		else if(USART_NUM == 1) USART1_Transmit_String("12");
     2d0:	08 95       	ret
     2d2:	81 30       	cpi	r24, 0x01	; 1
     2d4:	19 f4       	brne	.+6      	; 0x2dc <USART_Transmit_number+0x17c>
     2d6:	84 e2       	ldi	r24, 0x24	; 36
     2d8:	91 e0       	ldi	r25, 0x01	; 1
     2da:	34 cf       	rjmp	.-408    	; 0x144 <USART1_Transmit_String>
     2dc:	08 95       	ret

000002de <showP1toP1>:
	}
}

void showP1toP1 (void){
     2de:	0f 93       	push	r16
     2e0:	1f 93       	push	r17
     2e2:	cf 93       	push	r28
     2e4:	df 93       	push	r29
	USART0_Transmit_String("P1 Deck :\r\n");
     2e6:	87 e2       	ldi	r24, 0x27	; 39
     2e8:	91 e0       	ldi	r25, 0x01	; 1
     2ea:	07 df       	rcall	.-498    	; 0xfa <USART0_Transmit_String>
	for(int jj=0; jj<p1_card_cnt;jj++){
     2ec:	80 91 80 04 	lds	r24, 0x0480	; 0x800480 <p1_card_cnt>
     2f0:	88 23       	and	r24, r24
     2f2:	99 f0       	breq	.+38     	; 0x31a <showP1toP1+0x3c>
     2f4:	c1 e0       	ldi	r28, 0x01	; 1
     2f6:	d0 e0       	ldi	r29, 0x00	; 0
		USART0_Transmit_String("   ");
     2f8:	83 e3       	ldi	r24, 0x33	; 51
     2fa:	91 e0       	ldi	r25, 0x01	; 1
     2fc:	fe de       	rcall	.-516    	; 0xfa <USART0_Transmit_String>
		USART_Transmit_number(0,(char)(jj+1));
     2fe:	6c 2f       	mov	r22, r28
     300:	80 e0       	ldi	r24, 0x00	; 0
     302:	2e df       	rcall	.-420    	; 0x160 <USART_Transmit_number>
		USART0_Transmit_String(" ");
     304:	85 e3       	ldi	r24, 0x35	; 53
     306:	91 e0       	ldi	r25, 0x01	; 1
     308:	f8 de       	rcall	.-528    	; 0xfa <USART0_Transmit_String>
     30a:	9e 01       	movw	r18, r28
	}
}

void showP1toP1 (void){
	USART0_Transmit_String("P1 Deck :\r\n");
	for(int jj=0; jj<p1_card_cnt;jj++){
     30c:	21 96       	adiw	r28, 0x01	; 1
     30e:	80 91 80 04 	lds	r24, 0x0480	; 0x800480 <p1_card_cnt>
     312:	90 e0       	ldi	r25, 0x00	; 0
     314:	28 17       	cp	r18, r24
     316:	39 07       	cpc	r19, r25
     318:	7c f3       	brlt	.-34     	; 0x2f8 <showP1toP1+0x1a>
		USART0_Transmit_String("   ");
		USART_Transmit_number(0,(char)(jj+1));
		USART0_Transmit_String(" ");
	}
	USART0_Transmit_String("\r\n");
     31a:	8b e7       	ldi	r24, 0x7B	; 123
     31c:	91 e0       	ldi	r25, 0x01	; 1
     31e:	ed de       	rcall	.-550    	; 0xfa <USART0_Transmit_String>
     320:	80 91 80 04 	lds	r24, 0x0480	; 0x800480 <p1_card_cnt>
	for(int jj=0; jj<p1_card_cnt;jj++) USART0_Transmit_String("|----|");
     324:	88 23       	and	r24, r24
     326:	61 f0       	breq	.+24     	; 0x340 <showP1toP1+0x62>
     328:	c0 e0       	ldi	r28, 0x00	; 0
     32a:	d0 e0       	ldi	r29, 0x00	; 0
     32c:	87 e3       	ldi	r24, 0x37	; 55
     32e:	91 e0       	ldi	r25, 0x01	; 1
     330:	e4 de       	rcall	.-568    	; 0xfa <USART0_Transmit_String>
     332:	21 96       	adiw	r28, 0x01	; 1
     334:	80 91 80 04 	lds	r24, 0x0480	; 0x800480 <p1_card_cnt>
     338:	90 e0       	ldi	r25, 0x00	; 0
     33a:	c8 17       	cp	r28, r24
     33c:	d9 07       	cpc	r29, r25
     33e:	b4 f3       	brlt	.-20     	; 0x32c <showP1toP1+0x4e>
	USART0_Transmit_String("\r\n");
     340:	8b e7       	ldi	r24, 0x7B	; 123
     342:	91 e0       	ldi	r25, 0x01	; 1
     344:	da de       	rcall	.-588    	; 0xfa <USART0_Transmit_String>
     346:	80 91 80 04 	lds	r24, 0x0480	; 0x800480 <p1_card_cnt>
	for(int jj=0; jj<p1_card_cnt;jj++){
     34a:	88 23       	and	r24, r24
     34c:	d9 f0       	breq	.+54     	; 0x384 <showP1toP1+0xa6>
     34e:	03 e8       	ldi	r16, 0x83	; 131
     350:	14 e0       	ldi	r17, 0x04	; 4
     352:	c0 e0       	ldi	r28, 0x00	; 0
     354:	d0 e0       	ldi	r29, 0x00	; 0
		USART0_Transmit_String("|  ");
     356:	8e e3       	ldi	r24, 0x3E	; 62
     358:	91 e0       	ldi	r25, 0x01	; 1
     35a:	cf de       	rcall	.-610    	; 0xfa <USART0_Transmit_String>
		if(p1_deck[jj].color == 0) USART0_Transmit_String("B |");
     35c:	f8 01       	movw	r30, r16
     35e:	80 81       	ld	r24, Z
     360:	81 11       	cpse	r24, r1
     362:	04 c0       	rjmp	.+8      	; 0x36c <showP1toP1+0x8e>
     364:	82 e4       	ldi	r24, 0x42	; 66
     366:	91 e0       	ldi	r25, 0x01	; 1
     368:	c8 de       	rcall	.-624    	; 0xfa <USART0_Transmit_String>
     36a:	03 c0       	rjmp	.+6      	; 0x372 <showP1toP1+0x94>
		else USART0_Transmit_String("W |");
     36c:	86 e4       	ldi	r24, 0x46	; 70
     36e:	91 e0       	ldi	r25, 0x01	; 1
     370:	c4 de       	rcall	.-632    	; 0xfa <USART0_Transmit_String>
     372:	21 96       	adiw	r28, 0x01	; 1
		USART0_Transmit_String(" ");
	}
	USART0_Transmit_String("\r\n");
	for(int jj=0; jj<p1_card_cnt;jj++) USART0_Transmit_String("|----|");
	USART0_Transmit_String("\r\n");
	for(int jj=0; jj<p1_card_cnt;jj++){
     374:	0c 5f       	subi	r16, 0xFC	; 252
     376:	1f 4f       	sbci	r17, 0xFF	; 255
     378:	80 91 80 04 	lds	r24, 0x0480	; 0x800480 <p1_card_cnt>
     37c:	90 e0       	ldi	r25, 0x00	; 0
     37e:	c8 17       	cp	r28, r24
     380:	d9 07       	cpc	r29, r25
     382:	4c f3       	brlt	.-46     	; 0x356 <showP1toP1+0x78>
		USART0_Transmit_String("|  ");
		if(p1_deck[jj].color == 0) USART0_Transmit_String("B |");
		else USART0_Transmit_String("W |");
	}
	USART0_Transmit_String("\r\n");
     384:	8b e7       	ldi	r24, 0x7B	; 123
     386:	91 e0       	ldi	r25, 0x01	; 1
     388:	b8 de       	rcall	.-656    	; 0xfa <USART0_Transmit_String>
	for(int jj=0; jj<p1_card_cnt;jj++){
     38a:	80 91 80 04 	lds	r24, 0x0480	; 0x800480 <p1_card_cnt>
     38e:	88 23       	and	r24, r24
     390:	b9 f0       	breq	.+46     	; 0x3c0 <showP1toP1+0xe2>
     392:	04 e8       	ldi	r16, 0x84	; 132
     394:	14 e0       	ldi	r17, 0x04	; 4
		USART0_Transmit_String("| ");
     396:	c0 e0       	ldi	r28, 0x00	; 0
     398:	d0 e0       	ldi	r29, 0x00	; 0
     39a:	8a e4       	ldi	r24, 0x4A	; 74
     39c:	91 e0       	ldi	r25, 0x01	; 1
		USART_Transmit_number(0,p1_deck[jj].number);
     39e:	ad de       	rcall	.-678    	; 0xfa <USART0_Transmit_String>
     3a0:	f8 01       	movw	r30, r16
     3a2:	60 81       	ld	r22, Z
     3a4:	80 e0       	ldi	r24, 0x00	; 0
     3a6:	dc de       	rcall	.-584    	; 0x160 <USART_Transmit_number>
		USART0_Transmit_String(" |");
     3a8:	83 e4       	ldi	r24, 0x43	; 67
     3aa:	91 e0       	ldi	r25, 0x01	; 1
     3ac:	a6 de       	rcall	.-692    	; 0xfa <USART0_Transmit_String>
		USART0_Transmit_String("|  ");
		if(p1_deck[jj].color == 0) USART0_Transmit_String("B |");
		else USART0_Transmit_String("W |");
	}
	USART0_Transmit_String("\r\n");
	for(int jj=0; jj<p1_card_cnt;jj++){
     3ae:	21 96       	adiw	r28, 0x01	; 1
     3b0:	0c 5f       	subi	r16, 0xFC	; 252
     3b2:	1f 4f       	sbci	r17, 0xFF	; 255
     3b4:	80 91 80 04 	lds	r24, 0x0480	; 0x800480 <p1_card_cnt>
     3b8:	90 e0       	ldi	r25, 0x00	; 0
     3ba:	c8 17       	cp	r28, r24
     3bc:	d9 07       	cpc	r29, r25
		USART0_Transmit_String("| ");
		USART_Transmit_number(0,p1_deck[jj].number);
		USART0_Transmit_String(" |");
	}
	USART0_Transmit_String("\r\n");
     3be:	6c f3       	brlt	.-38     	; 0x39a <showP1toP1+0xbc>
     3c0:	8b e7       	ldi	r24, 0x7B	; 123
     3c2:	91 e0       	ldi	r25, 0x01	; 1
     3c4:	9a de       	rcall	.-716    	; 0xfa <USART0_Transmit_String>
	for(int jj=0; jj<p1_card_cnt;jj++){
     3c6:	80 91 80 04 	lds	r24, 0x0480	; 0x800480 <p1_card_cnt>
     3ca:	88 23       	and	r24, r24
     3cc:	d9 f0       	breq	.+54     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
     3ce:	06 e8       	ldi	r16, 0x86	; 134
     3d0:	14 e0       	ldi	r17, 0x04	; 4
		USART0_Transmit_String("|  ");
     3d2:	c0 e0       	ldi	r28, 0x00	; 0
     3d4:	d0 e0       	ldi	r29, 0x00	; 0
     3d6:	8e e3       	ldi	r24, 0x3E	; 62
     3d8:	91 e0       	ldi	r25, 0x01	; 1
		if(p1_deck[jj].opened == 0) USART0_Transmit_String("O |");
     3da:	8f de       	rcall	.-738    	; 0xfa <USART0_Transmit_String>
     3dc:	f8 01       	movw	r30, r16
     3de:	80 81       	ld	r24, Z
     3e0:	81 11       	cpse	r24, r1
     3e2:	04 c0       	rjmp	.+8      	; 0x3ec <showP1toP1+0x10e>
     3e4:	8d e4       	ldi	r24, 0x4D	; 77
     3e6:	91 e0       	ldi	r25, 0x01	; 1
     3e8:	88 de       	rcall	.-752    	; 0xfa <USART0_Transmit_String>
		else USART0_Transmit_String("X |");
     3ea:	03 c0       	rjmp	.+6      	; 0x3f2 <showP1toP1+0x114>
     3ec:	81 e5       	ldi	r24, 0x51	; 81
     3ee:	91 e0       	ldi	r25, 0x01	; 1
     3f0:	84 de       	rcall	.-760    	; 0xfa <USART0_Transmit_String>
		USART0_Transmit_String("| ");
		USART_Transmit_number(0,p1_deck[jj].number);
		USART0_Transmit_String(" |");
	}
	USART0_Transmit_String("\r\n");
	for(int jj=0; jj<p1_card_cnt;jj++){
     3f2:	21 96       	adiw	r28, 0x01	; 1
     3f4:	0c 5f       	subi	r16, 0xFC	; 252
     3f6:	1f 4f       	sbci	r17, 0xFF	; 255
     3f8:	80 91 80 04 	lds	r24, 0x0480	; 0x800480 <p1_card_cnt>
     3fc:	90 e0       	ldi	r25, 0x00	; 0
     3fe:	c8 17       	cp	r28, r24
     400:	d9 07       	cpc	r29, r25
		USART0_Transmit_String("|  ");
		if(p1_deck[jj].opened == 0) USART0_Transmit_String("O |");
		else USART0_Transmit_String("X |");
	}
	USART0_Transmit_String("\r\n");
     402:	4c f3       	brlt	.-46     	; 0x3d6 <showP1toP1+0xf8>
     404:	8b e7       	ldi	r24, 0x7B	; 123
     406:	91 e0       	ldi	r25, 0x01	; 1
	for(int jj=0; jj<p1_card_cnt;jj++) USART0_Transmit_String("|----|");
     408:	78 de       	rcall	.-784    	; 0xfa <USART0_Transmit_String>
     40a:	80 91 80 04 	lds	r24, 0x0480	; 0x800480 <p1_card_cnt>
     40e:	88 23       	and	r24, r24
     410:	61 f0       	breq	.+24     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
     412:	c0 e0       	ldi	r28, 0x00	; 0
     414:	d0 e0       	ldi	r29, 0x00	; 0
     416:	87 e3       	ldi	r24, 0x37	; 55
     418:	91 e0       	ldi	r25, 0x01	; 1
     41a:	6f de       	rcall	.-802    	; 0xfa <USART0_Transmit_String>
     41c:	21 96       	adiw	r28, 0x01	; 1
     41e:	80 91 80 04 	lds	r24, 0x0480	; 0x800480 <p1_card_cnt>
     422:	90 e0       	ldi	r25, 0x00	; 0
     424:	c8 17       	cp	r28, r24
     426:	d9 07       	cpc	r29, r25
     428:	b4 f3       	brlt	.-20     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
	USART0_Transmit_String("\r\n");
     42a:	8b e7       	ldi	r24, 0x7B	; 123
     42c:	91 e0       	ldi	r25, 0x01	; 1
     42e:	65 de       	rcall	.-822    	; 0xfa <USART0_Transmit_String>
     430:	df 91       	pop	r29
}
     432:	cf 91       	pop	r28
     434:	1f 91       	pop	r17
     436:	0f 91       	pop	r16
     438:	08 95       	ret

0000043a <showP2toP1>:
     43a:	0f 93       	push	r16
	USART1_Transmit_String("\r\n");
	for(int jj=0; jj<p2_card_cnt;jj++) USART1_Transmit_String("|----|");
	USART1_Transmit_String("\r\n");
}

void showP2toP1 (void){
     43c:	1f 93       	push	r17
     43e:	cf 93       	push	r28
     440:	df 93       	push	r29
	USART0_Transmit_String("P2 Deck : \r\n"); // display P2 deck to P1
     442:	85 e5       	ldi	r24, 0x55	; 85
     444:	91 e0       	ldi	r25, 0x01	; 1
     446:	59 de       	rcall	.-846    	; 0xfa <USART0_Transmit_String>
	for(int jj=0; jj<p2_card_cnt;jj++){
     448:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <p2_card_cnt>
     44c:	88 23       	and	r24, r24
     44e:	99 f0       	breq	.+38     	; 0x476 <showP2toP1+0x3c>
     450:	c1 e0       	ldi	r28, 0x01	; 1
     452:	d0 e0       	ldi	r29, 0x00	; 0
		USART0_Transmit_String("   ");
     454:	83 e3       	ldi	r24, 0x33	; 51
     456:	91 e0       	ldi	r25, 0x01	; 1
     458:	50 de       	rcall	.-864    	; 0xfa <USART0_Transmit_String>
		USART_Transmit_number(0,(char)(jj+1));
     45a:	6c 2f       	mov	r22, r28
     45c:	80 e0       	ldi	r24, 0x00	; 0
     45e:	80 de       	rcall	.-768    	; 0x160 <USART_Transmit_number>
		USART0_Transmit_String(" ");
     460:	85 e3       	ldi	r24, 0x35	; 53
     462:	91 e0       	ldi	r25, 0x01	; 1
     464:	4a de       	rcall	.-876    	; 0xfa <USART0_Transmit_String>
     466:	9e 01       	movw	r18, r28
	USART1_Transmit_String("\r\n");
}

void showP2toP1 (void){
	USART0_Transmit_String("P2 Deck : \r\n"); // display P2 deck to P1
	for(int jj=0; jj<p2_card_cnt;jj++){
     468:	21 96       	adiw	r28, 0x01	; 1
     46a:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <p2_card_cnt>
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	28 17       	cp	r18, r24
     472:	39 07       	cpc	r19, r25
     474:	7c f3       	brlt	.-34     	; 0x454 <showP2toP1+0x1a>
		USART0_Transmit_String("   ");
		USART_Transmit_number(0,(char)(jj+1));
		USART0_Transmit_String(" ");
	}
	USART0_Transmit_String("\r\n");
     476:	8b e7       	ldi	r24, 0x7B	; 123
     478:	91 e0       	ldi	r25, 0x01	; 1
     47a:	3f de       	rcall	.-898    	; 0xfa <USART0_Transmit_String>
     47c:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <p2_card_cnt>
	for(int jj=0; jj<p2_card_cnt;jj++) USART0_Transmit_String("|----|");
     480:	88 23       	and	r24, r24
     482:	61 f0       	breq	.+24     	; 0x49c <showP2toP1+0x62>
     484:	c0 e0       	ldi	r28, 0x00	; 0
     486:	d0 e0       	ldi	r29, 0x00	; 0
     488:	87 e3       	ldi	r24, 0x37	; 55
     48a:	91 e0       	ldi	r25, 0x01	; 1
     48c:	36 de       	rcall	.-916    	; 0xfa <USART0_Transmit_String>
     48e:	21 96       	adiw	r28, 0x01	; 1
     490:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <p2_card_cnt>
     494:	90 e0       	ldi	r25, 0x00	; 0
     496:	c8 17       	cp	r28, r24
     498:	d9 07       	cpc	r29, r25
     49a:	b4 f3       	brlt	.-20     	; 0x488 <showP2toP1+0x4e>
	USART0_Transmit_String("\r\n");
     49c:	8b e7       	ldi	r24, 0x7B	; 123
     49e:	91 e0       	ldi	r25, 0x01	; 1
     4a0:	2c de       	rcall	.-936    	; 0xfa <USART0_Transmit_String>
     4a2:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <p2_card_cnt>
	for(int jj=0; jj<p2_card_cnt;jj++){
     4a6:	88 23       	and	r24, r24
     4a8:	09 f1       	breq	.+66     	; 0x4ec <showP2toP1+0xb2>
     4aa:	cc eb       	ldi	r28, 0xBC	; 188
     4ac:	d4 e0       	ldi	r29, 0x04	; 4
     4ae:	00 e0       	ldi	r16, 0x00	; 0
     4b0:	10 e0       	ldi	r17, 0x00	; 0
		USART0_Transmit_String("|  ");
     4b2:	8e e3       	ldi	r24, 0x3E	; 62
     4b4:	91 e0       	ldi	r25, 0x01	; 1
     4b6:	21 de       	rcall	.-958    	; 0xfa <USART0_Transmit_String>
		if(p2_deck[jj].opened == 0) USART0_Transmit_String("X |");
     4b8:	8b 81       	ldd	r24, Y+3	; 0x03
     4ba:	81 11       	cpse	r24, r1
     4bc:	04 c0       	rjmp	.+8      	; 0x4c6 <showP2toP1+0x8c>
     4be:	81 e5       	ldi	r24, 0x51	; 81
     4c0:	91 e0       	ldi	r25, 0x01	; 1
     4c2:	1b de       	rcall	.-970    	; 0xfa <USART0_Transmit_String>
     4c4:	0a c0       	rjmp	.+20     	; 0x4da <showP2toP1+0xa0>
		else{
			if(p2_deck[jj].color == 0) USART0_Transmit_String("B |");
     4c6:	88 81       	ld	r24, Y
     4c8:	81 11       	cpse	r24, r1
     4ca:	04 c0       	rjmp	.+8      	; 0x4d4 <showP2toP1+0x9a>
     4cc:	82 e4       	ldi	r24, 0x42	; 66
     4ce:	91 e0       	ldi	r25, 0x01	; 1
     4d0:	14 de       	rcall	.-984    	; 0xfa <USART0_Transmit_String>
     4d2:	03 c0       	rjmp	.+6      	; 0x4da <showP2toP1+0xa0>
			else USART0_Transmit_String("W |");
     4d4:	86 e4       	ldi	r24, 0x46	; 70
     4d6:	91 e0       	ldi	r25, 0x01	; 1
     4d8:	10 de       	rcall	.-992    	; 0xfa <USART0_Transmit_String>
     4da:	0f 5f       	subi	r16, 0xFF	; 255
		USART0_Transmit_String(" ");
	}
	USART0_Transmit_String("\r\n");
	for(int jj=0; jj<p2_card_cnt;jj++) USART0_Transmit_String("|----|");
	USART0_Transmit_String("\r\n");
	for(int jj=0; jj<p2_card_cnt;jj++){
     4dc:	1f 4f       	sbci	r17, 0xFF	; 255
     4de:	24 96       	adiw	r28, 0x04	; 4
     4e0:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <p2_card_cnt>
     4e4:	90 e0       	ldi	r25, 0x00	; 0
     4e6:	08 17       	cp	r16, r24
     4e8:	19 07       	cpc	r17, r25
     4ea:	1c f3       	brlt	.-58     	; 0x4b2 <showP2toP1+0x78>
		else{
			if(p2_deck[jj].color == 0) USART0_Transmit_String("B |");
			else USART0_Transmit_String("W |");
		}
	}
	USART0_Transmit_String("\r\n");
     4ec:	8b e7       	ldi	r24, 0x7B	; 123
     4ee:	91 e0       	ldi	r25, 0x01	; 1
     4f0:	04 de       	rcall	.-1016   	; 0xfa <USART0_Transmit_String>
	for(int jj=0; jj<p2_card_cnt;jj++){
     4f2:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <p2_card_cnt>
     4f6:	88 23       	and	r24, r24
     4f8:	e9 f0       	breq	.+58     	; 0x534 <showP2toP1+0xfa>
     4fa:	cd eb       	ldi	r28, 0xBD	; 189
     4fc:	d4 e0       	ldi	r29, 0x04	; 4
     4fe:	00 e0       	ldi	r16, 0x00	; 0
		USART0_Transmit_String("| ");
     500:	10 e0       	ldi	r17, 0x00	; 0
     502:	8a e4       	ldi	r24, 0x4A	; 74
     504:	91 e0       	ldi	r25, 0x01	; 1
		if(p2_deck[jj].opened == 0) USART0_Transmit_String("XX");
     506:	f9 dd       	rcall	.-1038   	; 0xfa <USART0_Transmit_String>
     508:	8a 81       	ldd	r24, Y+2	; 0x02
     50a:	81 11       	cpse	r24, r1
     50c:	04 c0       	rjmp	.+8      	; 0x516 <showP2toP1+0xdc>
     50e:	82 e6       	ldi	r24, 0x62	; 98
     510:	91 e0       	ldi	r25, 0x01	; 1
     512:	f3 dd       	rcall	.-1050   	; 0xfa <USART0_Transmit_String>
     514:	03 c0       	rjmp	.+6      	; 0x51c <showP2toP1+0xe2>
		else USART_Transmit_number(0,p2_deck[jj].number);
     516:	68 81       	ld	r22, Y
     518:	80 e0       	ldi	r24, 0x00	; 0
     51a:	22 de       	rcall	.-956    	; 0x160 <USART_Transmit_number>
		USART0_Transmit_String(" |");
     51c:	83 e4       	ldi	r24, 0x43	; 67
     51e:	91 e0       	ldi	r25, 0x01	; 1
     520:	ec dd       	rcall	.-1064   	; 0xfa <USART0_Transmit_String>
     522:	0f 5f       	subi	r16, 0xFF	; 255
			if(p2_deck[jj].color == 0) USART0_Transmit_String("B |");
			else USART0_Transmit_String("W |");
		}
	}
	USART0_Transmit_String("\r\n");
	for(int jj=0; jj<p2_card_cnt;jj++){
     524:	1f 4f       	sbci	r17, 0xFF	; 255
     526:	24 96       	adiw	r28, 0x04	; 4
     528:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <p2_card_cnt>
     52c:	90 e0       	ldi	r25, 0x00	; 0
     52e:	08 17       	cp	r16, r24
     530:	19 07       	cpc	r17, r25
     532:	3c f3       	brlt	.-50     	; 0x502 <showP2toP1+0xc8>
		if(p2_deck[jj].opened == 0) USART0_Transmit_String("XX");
		else USART_Transmit_number(0,p2_deck[jj].number);
		USART0_Transmit_String(" |");
		
	}
	USART0_Transmit_String("\r\n");
     534:	8b e7       	ldi	r24, 0x7B	; 123
     536:	91 e0       	ldi	r25, 0x01	; 1
     538:	e0 dd       	rcall	.-1088   	; 0xfa <USART0_Transmit_String>
     53a:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <p2_card_cnt>
	for(int jj=0; jj<p2_card_cnt;jj++) USART0_Transmit_String("|----|");
     53e:	88 23       	and	r24, r24
     540:	61 f0       	breq	.+24     	; 0x55a <showP2toP1+0x120>
     542:	c0 e0       	ldi	r28, 0x00	; 0
     544:	d0 e0       	ldi	r29, 0x00	; 0
     546:	87 e3       	ldi	r24, 0x37	; 55
     548:	91 e0       	ldi	r25, 0x01	; 1
     54a:	d7 dd       	rcall	.-1106   	; 0xfa <USART0_Transmit_String>
     54c:	21 96       	adiw	r28, 0x01	; 1
     54e:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <p2_card_cnt>
     552:	90 e0       	ldi	r25, 0x00	; 0
     554:	c8 17       	cp	r28, r24
     556:	d9 07       	cpc	r29, r25
     558:	b4 f3       	brlt	.-20     	; 0x546 <showP2toP1+0x10c>
     55a:	8b e7       	ldi	r24, 0x7B	; 123
	USART0_Transmit_String("\r\n");
     55c:	91 e0       	ldi	r25, 0x01	; 1
     55e:	cd dd       	rcall	.-1126   	; 0xfa <USART0_Transmit_String>
     560:	df 91       	pop	r29
     562:	cf 91       	pop	r28
}
     564:	1f 91       	pop	r17
     566:	0f 91       	pop	r16
     568:	08 95       	ret

0000056a <showP2toP2>:
     56a:	0f 93       	push	r16
     56c:	1f 93       	push	r17
	USART0_Transmit_String("\r\n");
	for(int jj=0; jj<p1_card_cnt;jj++) USART0_Transmit_String("|----|");
	USART0_Transmit_String("\r\n");
}

void showP2toP2 (void){
     56e:	cf 93       	push	r28
     570:	df 93       	push	r29
	USART1_Transmit_String("P2 Deck :\r\n");
     572:	85 e6       	ldi	r24, 0x65	; 101
     574:	91 e0       	ldi	r25, 0x01	; 1
     576:	e6 dd       	rcall	.-1076   	; 0x144 <USART1_Transmit_String>
	for(int jj=0; jj<p2_card_cnt;jj++){
     578:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <p2_card_cnt>
     57c:	88 23       	and	r24, r24
     57e:	99 f0       	breq	.+38     	; 0x5a6 <showP2toP2+0x3c>
     580:	c1 e0       	ldi	r28, 0x01	; 1
     582:	d0 e0       	ldi	r29, 0x00	; 0
		USART1_Transmit_String("   ");
     584:	83 e3       	ldi	r24, 0x33	; 51
     586:	91 e0       	ldi	r25, 0x01	; 1
     588:	dd dd       	rcall	.-1094   	; 0x144 <USART1_Transmit_String>
		USART_Transmit_number(1,(char)(jj+1));
     58a:	6c 2f       	mov	r22, r28
     58c:	81 e0       	ldi	r24, 0x01	; 1
     58e:	e8 dd       	rcall	.-1072   	; 0x160 <USART_Transmit_number>
		USART1_Transmit_String(" ");
     590:	85 e3       	ldi	r24, 0x35	; 53
     592:	91 e0       	ldi	r25, 0x01	; 1
     594:	d7 dd       	rcall	.-1106   	; 0x144 <USART1_Transmit_String>
     596:	9e 01       	movw	r18, r28
	USART0_Transmit_String("\r\n");
}

void showP2toP2 (void){
	USART1_Transmit_String("P2 Deck :\r\n");
	for(int jj=0; jj<p2_card_cnt;jj++){
     598:	21 96       	adiw	r28, 0x01	; 1
     59a:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <p2_card_cnt>
     59e:	90 e0       	ldi	r25, 0x00	; 0
     5a0:	28 17       	cp	r18, r24
     5a2:	39 07       	cpc	r19, r25
     5a4:	7c f3       	brlt	.-34     	; 0x584 <showP2toP2+0x1a>
		USART1_Transmit_String("   ");
		USART_Transmit_number(1,(char)(jj+1));
		USART1_Transmit_String(" ");
	}
	USART1_Transmit_String("\r\n");
     5a6:	8b e7       	ldi	r24, 0x7B	; 123
     5a8:	91 e0       	ldi	r25, 0x01	; 1
     5aa:	cc dd       	rcall	.-1128   	; 0x144 <USART1_Transmit_String>
     5ac:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <p2_card_cnt>
	for(int jj=0; jj<p2_card_cnt;jj++) USART1_Transmit_String("|----|");
     5b0:	88 23       	and	r24, r24
     5b2:	61 f0       	breq	.+24     	; 0x5cc <showP2toP2+0x62>
     5b4:	c0 e0       	ldi	r28, 0x00	; 0
     5b6:	d0 e0       	ldi	r29, 0x00	; 0
     5b8:	87 e3       	ldi	r24, 0x37	; 55
     5ba:	91 e0       	ldi	r25, 0x01	; 1
     5bc:	c3 dd       	rcall	.-1146   	; 0x144 <USART1_Transmit_String>
     5be:	21 96       	adiw	r28, 0x01	; 1
     5c0:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <p2_card_cnt>
     5c4:	90 e0       	ldi	r25, 0x00	; 0
     5c6:	c8 17       	cp	r28, r24
     5c8:	d9 07       	cpc	r29, r25
     5ca:	b4 f3       	brlt	.-20     	; 0x5b8 <showP2toP2+0x4e>
	USART1_Transmit_String("\r\n");
     5cc:	8b e7       	ldi	r24, 0x7B	; 123
     5ce:	91 e0       	ldi	r25, 0x01	; 1
     5d0:	b9 dd       	rcall	.-1166   	; 0x144 <USART1_Transmit_String>
     5d2:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <p2_card_cnt>
	for(int jj=0; jj<p2_card_cnt;jj++){
     5d6:	88 23       	and	r24, r24
     5d8:	d9 f0       	breq	.+54     	; 0x610 <showP2toP2+0xa6>
     5da:	0c eb       	ldi	r16, 0xBC	; 188
     5dc:	14 e0       	ldi	r17, 0x04	; 4
     5de:	c0 e0       	ldi	r28, 0x00	; 0
     5e0:	d0 e0       	ldi	r29, 0x00	; 0
		USART1_Transmit_String("|  ");
     5e2:	8e e3       	ldi	r24, 0x3E	; 62
     5e4:	91 e0       	ldi	r25, 0x01	; 1
     5e6:	ae dd       	rcall	.-1188   	; 0x144 <USART1_Transmit_String>
		if(p2_deck[jj].color == 0) USART1_Transmit_String("B |");
     5e8:	f8 01       	movw	r30, r16
     5ea:	80 81       	ld	r24, Z
     5ec:	81 11       	cpse	r24, r1
     5ee:	04 c0       	rjmp	.+8      	; 0x5f8 <showP2toP2+0x8e>
     5f0:	82 e4       	ldi	r24, 0x42	; 66
     5f2:	91 e0       	ldi	r25, 0x01	; 1
     5f4:	a7 dd       	rcall	.-1202   	; 0x144 <USART1_Transmit_String>
     5f6:	03 c0       	rjmp	.+6      	; 0x5fe <showP2toP2+0x94>
		else USART1_Transmit_String("W |");
     5f8:	86 e4       	ldi	r24, 0x46	; 70
     5fa:	91 e0       	ldi	r25, 0x01	; 1
     5fc:	a3 dd       	rcall	.-1210   	; 0x144 <USART1_Transmit_String>
     5fe:	21 96       	adiw	r28, 0x01	; 1
		USART1_Transmit_String(" ");
	}
	USART1_Transmit_String("\r\n");
	for(int jj=0; jj<p2_card_cnt;jj++) USART1_Transmit_String("|----|");
	USART1_Transmit_String("\r\n");
	for(int jj=0; jj<p2_card_cnt;jj++){
     600:	0c 5f       	subi	r16, 0xFC	; 252
     602:	1f 4f       	sbci	r17, 0xFF	; 255
     604:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <p2_card_cnt>
     608:	90 e0       	ldi	r25, 0x00	; 0
     60a:	c8 17       	cp	r28, r24
     60c:	d9 07       	cpc	r29, r25
     60e:	4c f3       	brlt	.-46     	; 0x5e2 <showP2toP2+0x78>
		USART1_Transmit_String("|  ");
		if(p2_deck[jj].color == 0) USART1_Transmit_String("B |");
		else USART1_Transmit_String("W |");
	}
	USART1_Transmit_String("\r\n");
     610:	8b e7       	ldi	r24, 0x7B	; 123
     612:	91 e0       	ldi	r25, 0x01	; 1
     614:	97 dd       	rcall	.-1234   	; 0x144 <USART1_Transmit_String>
	for(int jj=0; jj<p2_card_cnt;jj++){
     616:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <p2_card_cnt>
     61a:	88 23       	and	r24, r24
     61c:	b9 f0       	breq	.+46     	; 0x64c <showP2toP2+0xe2>
     61e:	0d eb       	ldi	r16, 0xBD	; 189
     620:	14 e0       	ldi	r17, 0x04	; 4
		USART1_Transmit_String("| ");
     622:	c0 e0       	ldi	r28, 0x00	; 0
     624:	d0 e0       	ldi	r29, 0x00	; 0
     626:	8a e4       	ldi	r24, 0x4A	; 74
     628:	91 e0       	ldi	r25, 0x01	; 1
		USART_Transmit_number(1,p2_deck[jj].number);
     62a:	8c dd       	rcall	.-1256   	; 0x144 <USART1_Transmit_String>
     62c:	f8 01       	movw	r30, r16
     62e:	60 81       	ld	r22, Z
     630:	81 e0       	ldi	r24, 0x01	; 1
     632:	96 dd       	rcall	.-1236   	; 0x160 <USART_Transmit_number>
		USART1_Transmit_String(" |");
     634:	83 e4       	ldi	r24, 0x43	; 67
     636:	91 e0       	ldi	r25, 0x01	; 1
     638:	85 dd       	rcall	.-1270   	; 0x144 <USART1_Transmit_String>
		USART1_Transmit_String("|  ");
		if(p2_deck[jj].color == 0) USART1_Transmit_String("B |");
		else USART1_Transmit_String("W |");
	}
	USART1_Transmit_String("\r\n");
	for(int jj=0; jj<p2_card_cnt;jj++){
     63a:	21 96       	adiw	r28, 0x01	; 1
     63c:	0c 5f       	subi	r16, 0xFC	; 252
     63e:	1f 4f       	sbci	r17, 0xFF	; 255
     640:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <p2_card_cnt>
     644:	90 e0       	ldi	r25, 0x00	; 0
     646:	c8 17       	cp	r28, r24
     648:	d9 07       	cpc	r29, r25
		USART1_Transmit_String("| ");
		USART_Transmit_number(1,p2_deck[jj].number);
		USART1_Transmit_String(" |");
	}
	USART1_Transmit_String("\r\n");
     64a:	6c f3       	brlt	.-38     	; 0x626 <showP2toP2+0xbc>
     64c:	8b e7       	ldi	r24, 0x7B	; 123
     64e:	91 e0       	ldi	r25, 0x01	; 1
     650:	79 dd       	rcall	.-1294   	; 0x144 <USART1_Transmit_String>
	for(int jj=0; jj<p2_card_cnt;jj++){
     652:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <p2_card_cnt>
     656:	88 23       	and	r24, r24
     658:	d9 f0       	breq	.+54     	; 0x690 <showP2toP2+0x126>
     65a:	0f eb       	ldi	r16, 0xBF	; 191
     65c:	14 e0       	ldi	r17, 0x04	; 4
		USART1_Transmit_String("|  ");
     65e:	c0 e0       	ldi	r28, 0x00	; 0
     660:	d0 e0       	ldi	r29, 0x00	; 0
     662:	8e e3       	ldi	r24, 0x3E	; 62
     664:	91 e0       	ldi	r25, 0x01	; 1
		if(p2_deck[jj].opened == 0) USART1_Transmit_String("O |");
     666:	6e dd       	rcall	.-1316   	; 0x144 <USART1_Transmit_String>
     668:	f8 01       	movw	r30, r16
     66a:	80 81       	ld	r24, Z
     66c:	81 11       	cpse	r24, r1
     66e:	04 c0       	rjmp	.+8      	; 0x678 <showP2toP2+0x10e>
     670:	8d e4       	ldi	r24, 0x4D	; 77
     672:	91 e0       	ldi	r25, 0x01	; 1
     674:	67 dd       	rcall	.-1330   	; 0x144 <USART1_Transmit_String>
		else USART1_Transmit_String("X |");
     676:	03 c0       	rjmp	.+6      	; 0x67e <showP2toP2+0x114>
     678:	81 e5       	ldi	r24, 0x51	; 81
     67a:	91 e0       	ldi	r25, 0x01	; 1
     67c:	63 dd       	rcall	.-1338   	; 0x144 <USART1_Transmit_String>
		USART1_Transmit_String("| ");
		USART_Transmit_number(1,p2_deck[jj].number);
		USART1_Transmit_String(" |");
	}
	USART1_Transmit_String("\r\n");
	for(int jj=0; jj<p2_card_cnt;jj++){
     67e:	21 96       	adiw	r28, 0x01	; 1
     680:	0c 5f       	subi	r16, 0xFC	; 252
     682:	1f 4f       	sbci	r17, 0xFF	; 255
     684:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <p2_card_cnt>
     688:	90 e0       	ldi	r25, 0x00	; 0
     68a:	c8 17       	cp	r28, r24
     68c:	d9 07       	cpc	r29, r25
		USART1_Transmit_String("|  ");
		if(p2_deck[jj].opened == 0) USART1_Transmit_String("O |");
		else USART1_Transmit_String("X |");
	}
	USART1_Transmit_String("\r\n");
     68e:	4c f3       	brlt	.-46     	; 0x662 <showP2toP2+0xf8>
     690:	8b e7       	ldi	r24, 0x7B	; 123
     692:	91 e0       	ldi	r25, 0x01	; 1
	for(int jj=0; jj<p2_card_cnt;jj++) USART1_Transmit_String("|----|");
     694:	57 dd       	rcall	.-1362   	; 0x144 <USART1_Transmit_String>
     696:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <p2_card_cnt>
     69a:	88 23       	and	r24, r24
     69c:	61 f0       	breq	.+24     	; 0x6b6 <showP2toP2+0x14c>
     69e:	c0 e0       	ldi	r28, 0x00	; 0
     6a0:	d0 e0       	ldi	r29, 0x00	; 0
     6a2:	87 e3       	ldi	r24, 0x37	; 55
     6a4:	91 e0       	ldi	r25, 0x01	; 1
     6a6:	4e dd       	rcall	.-1380   	; 0x144 <USART1_Transmit_String>
     6a8:	21 96       	adiw	r28, 0x01	; 1
     6aa:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <p2_card_cnt>
     6ae:	90 e0       	ldi	r25, 0x00	; 0
     6b0:	c8 17       	cp	r28, r24
     6b2:	d9 07       	cpc	r29, r25
     6b4:	b4 f3       	brlt	.-20     	; 0x6a2 <showP2toP2+0x138>
	USART1_Transmit_String("\r\n");
     6b6:	8b e7       	ldi	r24, 0x7B	; 123
     6b8:	91 e0       	ldi	r25, 0x01	; 1
     6ba:	44 dd       	rcall	.-1400   	; 0x144 <USART1_Transmit_String>
     6bc:	df 91       	pop	r29
}
     6be:	cf 91       	pop	r28
     6c0:	1f 91       	pop	r17
     6c2:	0f 91       	pop	r16
     6c4:	08 95       	ret

000006c6 <showP1toP2>:
     6c6:	0f 93       	push	r16
	USART0_Transmit_String("\r\n");
	for(int jj=0; jj<p2_card_cnt;jj++) USART0_Transmit_String("|----|");
	USART0_Transmit_String("\r\n");
}

void showP1toP2 (void){
     6c8:	1f 93       	push	r17
     6ca:	cf 93       	push	r28
     6cc:	df 93       	push	r29
	USART1_Transmit_String("P1 Deck : \r\n"); // display P2 deck to P1
     6ce:	81 e7       	ldi	r24, 0x71	; 113
     6d0:	91 e0       	ldi	r25, 0x01	; 1
     6d2:	38 dd       	rcall	.-1424   	; 0x144 <USART1_Transmit_String>
	for(int jj=0; jj<p1_card_cnt;jj++){
     6d4:	80 91 80 04 	lds	r24, 0x0480	; 0x800480 <p1_card_cnt>
     6d8:	88 23       	and	r24, r24
     6da:	99 f0       	breq	.+38     	; 0x702 <showP1toP2+0x3c>
     6dc:	c1 e0       	ldi	r28, 0x01	; 1
     6de:	d0 e0       	ldi	r29, 0x00	; 0
		USART1_Transmit_String("   ");
     6e0:	83 e3       	ldi	r24, 0x33	; 51
     6e2:	91 e0       	ldi	r25, 0x01	; 1
     6e4:	2f dd       	rcall	.-1442   	; 0x144 <USART1_Transmit_String>
		USART_Transmit_number(1,(char)(jj+1));
     6e6:	6c 2f       	mov	r22, r28
     6e8:	81 e0       	ldi	r24, 0x01	; 1
     6ea:	3a dd       	rcall	.-1420   	; 0x160 <USART_Transmit_number>
		USART1_Transmit_String(" ");
     6ec:	85 e3       	ldi	r24, 0x35	; 53
     6ee:	91 e0       	ldi	r25, 0x01	; 1
     6f0:	29 dd       	rcall	.-1454   	; 0x144 <USART1_Transmit_String>
     6f2:	9e 01       	movw	r18, r28
	USART0_Transmit_String("\r\n");
}

void showP1toP2 (void){
	USART1_Transmit_String("P1 Deck : \r\n"); // display P2 deck to P1
	for(int jj=0; jj<p1_card_cnt;jj++){
     6f4:	21 96       	adiw	r28, 0x01	; 1
     6f6:	80 91 80 04 	lds	r24, 0x0480	; 0x800480 <p1_card_cnt>
     6fa:	90 e0       	ldi	r25, 0x00	; 0
     6fc:	28 17       	cp	r18, r24
     6fe:	39 07       	cpc	r19, r25
     700:	7c f3       	brlt	.-34     	; 0x6e0 <showP1toP2+0x1a>
		USART1_Transmit_String("   ");
		USART_Transmit_number(1,(char)(jj+1));
		USART1_Transmit_String(" ");
	}
	USART1_Transmit_String("\r\n");
     702:	8b e7       	ldi	r24, 0x7B	; 123
     704:	91 e0       	ldi	r25, 0x01	; 1
     706:	1e dd       	rcall	.-1476   	; 0x144 <USART1_Transmit_String>
     708:	80 91 80 04 	lds	r24, 0x0480	; 0x800480 <p1_card_cnt>
	for(int jj=0; jj<p1_card_cnt;jj++) USART1_Transmit_String("|----|");
     70c:	88 23       	and	r24, r24
     70e:	61 f0       	breq	.+24     	; 0x728 <showP1toP2+0x62>
     710:	c0 e0       	ldi	r28, 0x00	; 0
     712:	d0 e0       	ldi	r29, 0x00	; 0
     714:	87 e3       	ldi	r24, 0x37	; 55
     716:	91 e0       	ldi	r25, 0x01	; 1
     718:	15 dd       	rcall	.-1494   	; 0x144 <USART1_Transmit_String>
     71a:	21 96       	adiw	r28, 0x01	; 1
     71c:	80 91 80 04 	lds	r24, 0x0480	; 0x800480 <p1_card_cnt>
     720:	90 e0       	ldi	r25, 0x00	; 0
     722:	c8 17       	cp	r28, r24
     724:	d9 07       	cpc	r29, r25
     726:	b4 f3       	brlt	.-20     	; 0x714 <showP1toP2+0x4e>
	USART1_Transmit_String("\r\n");
     728:	8b e7       	ldi	r24, 0x7B	; 123
     72a:	91 e0       	ldi	r25, 0x01	; 1
     72c:	0b dd       	rcall	.-1514   	; 0x144 <USART1_Transmit_String>
     72e:	80 91 80 04 	lds	r24, 0x0480	; 0x800480 <p1_card_cnt>
	for(int jj=0; jj<p1_card_cnt;jj++){
     732:	88 23       	and	r24, r24
     734:	09 f1       	breq	.+66     	; 0x778 <showP1toP2+0xb2>
     736:	c3 e8       	ldi	r28, 0x83	; 131
     738:	d4 e0       	ldi	r29, 0x04	; 4
     73a:	00 e0       	ldi	r16, 0x00	; 0
     73c:	10 e0       	ldi	r17, 0x00	; 0
		USART1_Transmit_String("|  ");
     73e:	8e e3       	ldi	r24, 0x3E	; 62
     740:	91 e0       	ldi	r25, 0x01	; 1
     742:	00 dd       	rcall	.-1536   	; 0x144 <USART1_Transmit_String>
		if(p1_deck[jj].opened == 0) USART1_Transmit_String("X |");
     744:	8b 81       	ldd	r24, Y+3	; 0x03
     746:	81 11       	cpse	r24, r1
     748:	04 c0       	rjmp	.+8      	; 0x752 <showP1toP2+0x8c>
     74a:	81 e5       	ldi	r24, 0x51	; 81
     74c:	91 e0       	ldi	r25, 0x01	; 1
     74e:	fa dc       	rcall	.-1548   	; 0x144 <USART1_Transmit_String>
     750:	0a c0       	rjmp	.+20     	; 0x766 <showP1toP2+0xa0>
		else{
			if(p1_deck[jj].color == 0) USART1_Transmit_String("B |");
     752:	88 81       	ld	r24, Y
     754:	81 11       	cpse	r24, r1
     756:	04 c0       	rjmp	.+8      	; 0x760 <showP1toP2+0x9a>
     758:	82 e4       	ldi	r24, 0x42	; 66
     75a:	91 e0       	ldi	r25, 0x01	; 1
     75c:	f3 dc       	rcall	.-1562   	; 0x144 <USART1_Transmit_String>
     75e:	03 c0       	rjmp	.+6      	; 0x766 <showP1toP2+0xa0>
			else USART1_Transmit_String("W |");
     760:	86 e4       	ldi	r24, 0x46	; 70
     762:	91 e0       	ldi	r25, 0x01	; 1
     764:	ef dc       	rcall	.-1570   	; 0x144 <USART1_Transmit_String>
     766:	0f 5f       	subi	r16, 0xFF	; 255
		USART1_Transmit_String(" ");
	}
	USART1_Transmit_String("\r\n");
	for(int jj=0; jj<p1_card_cnt;jj++) USART1_Transmit_String("|----|");
	USART1_Transmit_String("\r\n");
	for(int jj=0; jj<p1_card_cnt;jj++){
     768:	1f 4f       	sbci	r17, 0xFF	; 255
     76a:	24 96       	adiw	r28, 0x04	; 4
     76c:	80 91 80 04 	lds	r24, 0x0480	; 0x800480 <p1_card_cnt>
     770:	90 e0       	ldi	r25, 0x00	; 0
     772:	08 17       	cp	r16, r24
     774:	19 07       	cpc	r17, r25
     776:	1c f3       	brlt	.-58     	; 0x73e <showP1toP2+0x78>
		else{
			if(p1_deck[jj].color == 0) USART1_Transmit_String("B |");
			else USART1_Transmit_String("W |");
		}
	}
	USART1_Transmit_String("\r\n");
     778:	8b e7       	ldi	r24, 0x7B	; 123
     77a:	91 e0       	ldi	r25, 0x01	; 1
     77c:	e3 dc       	rcall	.-1594   	; 0x144 <USART1_Transmit_String>
	for(int jj=0; jj<p1_card_cnt;jj++){
     77e:	80 91 80 04 	lds	r24, 0x0480	; 0x800480 <p1_card_cnt>
     782:	88 23       	and	r24, r24
     784:	e9 f0       	breq	.+58     	; 0x7c0 <showP1toP2+0xfa>
     786:	c4 e8       	ldi	r28, 0x84	; 132
     788:	d4 e0       	ldi	r29, 0x04	; 4
     78a:	00 e0       	ldi	r16, 0x00	; 0
		USART1_Transmit_String("| ");
     78c:	10 e0       	ldi	r17, 0x00	; 0
     78e:	8a e4       	ldi	r24, 0x4A	; 74
     790:	91 e0       	ldi	r25, 0x01	; 1
		if(p1_deck[jj].opened == 0) USART1_Transmit_String("XX");
     792:	d8 dc       	rcall	.-1616   	; 0x144 <USART1_Transmit_String>
     794:	8a 81       	ldd	r24, Y+2	; 0x02
     796:	81 11       	cpse	r24, r1
     798:	04 c0       	rjmp	.+8      	; 0x7a2 <showP1toP2+0xdc>
     79a:	82 e6       	ldi	r24, 0x62	; 98
     79c:	91 e0       	ldi	r25, 0x01	; 1
     79e:	d2 dc       	rcall	.-1628   	; 0x144 <USART1_Transmit_String>
     7a0:	03 c0       	rjmp	.+6      	; 0x7a8 <showP1toP2+0xe2>
		else USART_Transmit_number(1,p1_deck[jj].number);
     7a2:	68 81       	ld	r22, Y
     7a4:	81 e0       	ldi	r24, 0x01	; 1
     7a6:	dc dc       	rcall	.-1608   	; 0x160 <USART_Transmit_number>
		USART1_Transmit_String(" |");
     7a8:	83 e4       	ldi	r24, 0x43	; 67
     7aa:	91 e0       	ldi	r25, 0x01	; 1
     7ac:	cb dc       	rcall	.-1642   	; 0x144 <USART1_Transmit_String>
     7ae:	0f 5f       	subi	r16, 0xFF	; 255
			if(p1_deck[jj].color == 0) USART1_Transmit_String("B |");
			else USART1_Transmit_String("W |");
		}
	}
	USART1_Transmit_String("\r\n");
	for(int jj=0; jj<p1_card_cnt;jj++){
     7b0:	1f 4f       	sbci	r17, 0xFF	; 255
     7b2:	24 96       	adiw	r28, 0x04	; 4
     7b4:	80 91 80 04 	lds	r24, 0x0480	; 0x800480 <p1_card_cnt>
     7b8:	90 e0       	ldi	r25, 0x00	; 0
     7ba:	08 17       	cp	r16, r24
     7bc:	19 07       	cpc	r17, r25
     7be:	3c f3       	brlt	.-50     	; 0x78e <showP1toP2+0xc8>
		if(p1_deck[jj].opened == 0) USART1_Transmit_String("XX");
		else USART_Transmit_number(1,p1_deck[jj].number);
		USART1_Transmit_String(" |");
		
	}
	USART1_Transmit_String("\r\n");
     7c0:	8b e7       	ldi	r24, 0x7B	; 123
     7c2:	91 e0       	ldi	r25, 0x01	; 1
     7c4:	bf dc       	rcall	.-1666   	; 0x144 <USART1_Transmit_String>
     7c6:	80 91 80 04 	lds	r24, 0x0480	; 0x800480 <p1_card_cnt>
	for(int jj=0; jj<p1_card_cnt;jj++) USART1_Transmit_String("|----|");
     7ca:	88 23       	and	r24, r24
     7cc:	61 f0       	breq	.+24     	; 0x7e6 <showP1toP2+0x120>
     7ce:	c0 e0       	ldi	r28, 0x00	; 0
     7d0:	d0 e0       	ldi	r29, 0x00	; 0
     7d2:	87 e3       	ldi	r24, 0x37	; 55
     7d4:	91 e0       	ldi	r25, 0x01	; 1
     7d6:	b6 dc       	rcall	.-1684   	; 0x144 <USART1_Transmit_String>
     7d8:	21 96       	adiw	r28, 0x01	; 1
     7da:	80 91 80 04 	lds	r24, 0x0480	; 0x800480 <p1_card_cnt>
     7de:	90 e0       	ldi	r25, 0x00	; 0
     7e0:	c8 17       	cp	r28, r24
     7e2:	d9 07       	cpc	r29, r25
     7e4:	b4 f3       	brlt	.-20     	; 0x7d2 <showP1toP2+0x10c>
     7e6:	8b e7       	ldi	r24, 0x7B	; 123
	USART1_Transmit_String("\r\n");
     7e8:	91 e0       	ldi	r25, 0x01	; 1
     7ea:	ac dc       	rcall	.-1704   	; 0x144 <USART1_Transmit_String>
     7ec:	df 91       	pop	r29
     7ee:	cf 91       	pop	r28
}
     7f0:	1f 91       	pop	r17
     7f2:	0f 91       	pop	r16
     7f4:	08 95       	ret

000007f6 <USART1_Receive>:
     7f6:	eb e9       	ldi	r30, 0x9B	; 155
     7f8:	f0 e0       	ldi	r31, 0x00	; 0
void USART1_Transmit_String(char *str){
	while(*str != '\0') USART1_Transmit(*str++);
}

char USART1_Receive(void){
	while(!(UCSR1A & (1<<RXC1))); // Wait for Receive Buffer is empty
     7fa:	80 81       	ld	r24, Z
     7fc:	88 23       	and	r24, r24
     7fe:	ec f7       	brge	.-6      	; 0x7fa <USART1_Receive+0x4>
	return UDR1;
     800:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
}
     804:	08 95       	ret

00000806 <main>:
struct card_deck deck[NUM_CARD];
struct card_deck p1_deck[NUM_CARD/2];
struct card_deck p2_deck[NUM_CARD/2];

int main(void)
{
     806:	2f 92       	push	r2
     808:	3f 92       	push	r3
     80a:	4f 92       	push	r4
     80c:	5f 92       	push	r5
     80e:	7f 92       	push	r7
     810:	8f 92       	push	r8
     812:	9f 92       	push	r9
     814:	af 92       	push	r10
     816:	bf 92       	push	r11
     818:	cf 92       	push	r12
     81a:	df 92       	push	r13
     81c:	ef 92       	push	r14
     81e:	ff 92       	push	r15
     820:	0f 93       	push	r16
     822:	1f 93       	push	r17
     824:	cf 93       	push	r28
     826:	df 93       	push	r29
	USART0_Init(103);
     828:	87 e6       	ldi	r24, 0x67	; 103
     82a:	90 e0       	ldi	r25, 0x00	; 0
     82c:	59 dc       	rcall	.-1870   	; 0xe0 <USART0_Init>
	USART1_Init(103);
     82e:	87 e6       	ldi	r24, 0x67	; 103
     830:	90 e0       	ldi	r25, 0x00	; 0
	Timer_Init();
     832:	75 dc       	rcall	.-1814   	; 0x11e <USART1_Init>
     834:	4a dc       	rcall	.-1900   	; 0xca <Timer_Init>
     836:	0f 2e       	mov	r0, r31
     838:	fc ee       	ldi	r31, 0xEC	; 236
     83a:	ef 2e       	mov	r14, r31
     83c:	f4 e0       	ldi	r31, 0x04	; 4
     83e:	ff 2e       	mov	r15, r31
     840:	f0 2d       	mov	r31, r0
     842:	f7 01       	movw	r30, r14
	
	for(int i=0;i<NUM_CARD;i++){				// 카드 덱 초기화
     844:	80 e0       	ldi	r24, 0x00	; 0
     846:	90 e0       	ldi	r25, 0x00	; 0
		if(i%2 == 0){
			deck[i].color = 0;
			deck[i].number = i/2;
		}
		else if(i%2 == 1){
			deck[i].color = 1;
     848:	41 e0       	ldi	r20, 0x01	; 1
	USART0_Init(103);
	USART1_Init(103);
	Timer_Init();
	
	for(int i=0;i<NUM_CARD;i++){				// 카드 덱 초기화
		if(i%2 == 0){
     84a:	80 fd       	sbrc	r24, 0
     84c:	0c c0       	rjmp	.+24     	; 0x866 <main+0x60>
     84e:	df 01       	movw	r26, r30
			deck[i].color = 0;
     850:	10 82       	st	Z, r1
			deck[i].number = i/2;
     852:	9c 01       	movw	r18, r24
     854:	99 23       	and	r25, r25
     856:	14 f4       	brge	.+4      	; 0x85c <main+0x56>
     858:	2f 5f       	subi	r18, 0xFF	; 255
     85a:	3f 4f       	sbci	r19, 0xFF	; 255
     85c:	35 95       	asr	r19
     85e:	27 95       	ror	r18
     860:	11 96       	adiw	r26, 0x01	; 1
     862:	2c 93       	st	X, r18
     864:	19 c0       	rjmp	.+50     	; 0x898 <main+0x92>
		}
		else if(i%2 == 1){
     866:	9c 01       	movw	r18, r24
     868:	21 70       	andi	r18, 0x01	; 1
     86a:	30 78       	andi	r19, 0x80	; 128
     86c:	33 23       	and	r19, r19
     86e:	34 f4       	brge	.+12     	; 0x87c <main+0x76>
     870:	21 50       	subi	r18, 0x01	; 1
     872:	31 09       	sbc	r19, r1
     874:	2e 6f       	ori	r18, 0xFE	; 254
     876:	3f 6f       	ori	r19, 0xFF	; 255
     878:	2f 5f       	subi	r18, 0xFF	; 255
     87a:	3f 4f       	sbci	r19, 0xFF	; 255
     87c:	21 30       	cpi	r18, 0x01	; 1
     87e:	31 05       	cpc	r19, r1
     880:	59 f4       	brne	.+22     	; 0x898 <main+0x92>
     882:	df 01       	movw	r26, r30
			deck[i].color = 1;
     884:	40 83       	st	Z, r20
			deck[i].number = i/2;
     886:	9c 01       	movw	r18, r24
     888:	99 23       	and	r25, r25
     88a:	14 f4       	brge	.+4      	; 0x890 <main+0x8a>
     88c:	2f 5f       	subi	r18, 0xFF	; 255
     88e:	3f 4f       	sbci	r19, 0xFF	; 255
     890:	35 95       	asr	r19
     892:	27 95       	ror	r18
     894:	11 96       	adiw	r26, 0x01	; 1
     896:	2c 93       	st	X, r18
		}
		deck[i].owner = 0;
     898:	12 82       	std	Z+2, r1	; 0x02
		deck[i].opened = 0;
     89a:	13 82       	std	Z+3, r1	; 0x03
{
	USART0_Init(103);
	USART1_Init(103);
	Timer_Init();
	
	for(int i=0;i<NUM_CARD;i++){				// 카드 덱 초기화
     89c:	01 96       	adiw	r24, 0x01	; 1
     89e:	34 96       	adiw	r30, 0x04	; 4
     8a0:	88 31       	cpi	r24, 0x18	; 24
     8a2:	91 05       	cpc	r25, r1
     8a4:	91 f6       	brne	.-92     	; 0x84a <main+0x44>
     8a6:	e3 e8       	ldi	r30, 0x83	; 131
     8a8:	f4 e0       	ldi	r31, 0x04	; 4
     8aa:	8f ef       	ldi	r24, 0xFF	; 255
     8ac:	84 83       	std	Z+4, r24	; 0x04
     8ae:	85 83       	std	Z+5, r24	; 0x05
     8b0:	91 e0       	ldi	r25, 0x01	; 1
     8b2:	96 83       	std	Z+6, r25	; 0x06
     8b4:	17 82       	std	Z+7, r1	; 0x07
     8b6:	ec eb       	ldi	r30, 0xBC	; 188
     8b8:	f4 e0       	ldi	r31, 0x04	; 4
     8ba:	84 83       	std	Z+4, r24	; 0x04
     8bc:	85 83       	std	Z+5, r24	; 0x05
     8be:	82 e0       	ldi	r24, 0x02	; 2
     8c0:	86 83       	std	Z+6, r24	; 0x06
     8c2:	17 82       	std	Z+7, r1	; 0x07
    {
		if(state == 0){ // state 0 : checking player 1 connected
			USART0_Transmit_String("Press 0 to start\r\n");
			USART1_Transmit_String("Waiting for Player 1\r\n");
			rx = USART0_Receive();
			if(rx == '0') state = 1;
     8c4:	aa 24       	eor	r10, r10
     8c6:	a3 94       	inc	r10
     8c8:	b1 2c       	mov	r11, r1
			USART0_Transmit_String("-------------------------------------------\r\n");
			USART1_Transmit_String("-------------------------------------------\r\n");
		} // state 1 end
		if(state == 2){ // state 2 : give card to players
			while(p1_card_cnt < 4){	// give Player 1 Cards
				random_value = (TCNT0*TCNT2)%NUM_CARD;
     8ca:	08 e1       	ldi	r16, 0x18	; 24
     8cc:	10 e0       	ldi	r17, 0x00	; 0
				if(deck[random_value].owner == 0){
					deck[random_value].owner = 1;
     8ce:	55 24       	eor	r5, r5
     8d0:	53 94       	inc	r5
				}
			}
			while(p2_card_cnt < 4){	// give Player 2 Cards
				random_value = (TCNT0*TCNT2)%NUM_CARD;
				if(deck[random_value].owner == 0){
					deck[random_value].owner = 2;
     8d2:	68 94       	set
     8d4:	44 24       	eor	r4, r4
     8d6:	41 f8       	bld	r4, 1
     8d8:	cc e4       	ldi	r28, 0x4C	; 76
     8da:	d5 e0       	ldi	r29, 0x05	; 5
			}
			showP2toP2();
			USART1_Transmit_String("\r\n");
			showP2toP1();
			showP1toP2();
			state = 15;
     8dc:	0f 2e       	mov	r0, r31
     8de:	ff e0       	ldi	r31, 0x0F	; 15
     8e0:	cf 2e       	mov	r12, r31
     8e2:	d1 2c       	mov	r13, r1
     8e4:	f0 2d       	mov	r31, r0
		} // state 1 end
		if(state == 2){ // state 2 : give card to players
			while(p1_card_cnt < 4){	// give Player 1 Cards
				random_value = (TCNT0*TCNT2)%NUM_CARD;
				if(deck[random_value].owner == 0){
					deck[random_value].owner = 1;
     8e6:	75 2c       	mov	r7, r5
			USART0_Transmit_String("--------------------------------------------------------------------\r\n");
			USART1_Transmit_String("--------------------------------------------------------------------\r\n");
			USART0_Transmit_String("Press 0 to start your turn\r\n");
			USART1_Transmit_String("Player 1's turn\r\n");
			rx = USART0_Receive();
			if(rx == '0') state = 3;
     8e8:	0f 2e       	mov	r0, r31
     8ea:	f3 e0       	ldi	r31, 0x03	; 3
     8ec:	2f 2e       	mov	r2, r31
     8ee:	31 2c       	mov	r3, r1
     8f0:	f0 2d       	mov	r31, r0
		p2_deck[1].owner = 2;
		p2_deck[1].opened = 0;
	}
    while (1) 
    {
		if(state == 0){ // state 0 : checking player 1 connected
     8f2:	80 91 81 04 	lds	r24, 0x0481	; 0x800481 <state>
     8f6:	90 91 82 04 	lds	r25, 0x0482	; 0x800482 <state+0x1>
     8fa:	89 2b       	or	r24, r25
			USART0_Transmit_String("Press 0 to start\r\n");
     8fc:	81 f4       	brne	.+32     	; 0x91e <main+0x118>
     8fe:	8e e7       	ldi	r24, 0x7E	; 126
     900:	91 e0       	ldi	r25, 0x01	; 1
			USART1_Transmit_String("Waiting for Player 1\r\n");
     902:	fb db       	rcall	.-2058   	; 0xfa <USART0_Transmit_String>
     904:	81 e9       	ldi	r24, 0x91	; 145
     906:	91 e0       	ldi	r25, 0x01	; 1
     908:	1d dc       	rcall	.-1990   	; 0x144 <USART1_Transmit_String>
			rx = USART0_Receive();
     90a:	05 dc       	rcall	.-2038   	; 0x116 <USART0_Receive>
     90c:	80 93 b3 04 	sts	0x04B3, r24	; 0x8004b3 <rx>
     910:	80 33       	cpi	r24, 0x30	; 48
			if(rx == '0') state = 1;
     912:	29 f4       	brne	.+10     	; 0x91e <main+0x118>
     914:	b0 92 82 04 	sts	0x0482, r11	; 0x800482 <state+0x1>
     918:	a0 92 81 04 	sts	0x0481, r10	; 0x800481 <state>
     91c:	06 c0       	rjmp	.+12     	; 0x92a <main+0x124>
     91e:	80 91 81 04 	lds	r24, 0x0481	; 0x800481 <state>
		} // state 0 end
		if(state == 1){ // state 1 : checking player 1 connected
     922:	90 91 82 04 	lds	r25, 0x0482	; 0x800482 <state+0x1>
     926:	01 97       	sbiw	r24, 0x01	; 1
     928:	b9 f4       	brne	.+46     	; 0x958 <main+0x152>
			USART0_Transmit_String("Waiting for Player 2\r\n");
     92a:	88 ea       	ldi	r24, 0xA8	; 168
     92c:	91 e0       	ldi	r25, 0x01	; 1
     92e:	e5 db       	rcall	.-2102   	; 0xfa <USART0_Transmit_String>
			USART1_Transmit_String("Press 0 to start\r\n");
     930:	8e e7       	ldi	r24, 0x7E	; 126
     932:	91 e0       	ldi	r25, 0x01	; 1
     934:	07 dc       	rcall	.-2034   	; 0x144 <USART1_Transmit_String>
     936:	5f df       	rcall	.-322    	; 0x7f6 <USART1_Receive>
			rx = USART1_Receive();
     938:	80 93 b3 04 	sts	0x04B3, r24	; 0x8004b3 <rx>
     93c:	80 33       	cpi	r24, 0x30	; 48
     93e:	31 f4       	brne	.+12     	; 0x94c <main+0x146>
			if(rx == '0') state = 2;
     940:	82 e0       	ldi	r24, 0x02	; 2
     942:	90 e0       	ldi	r25, 0x00	; 0
     944:	90 93 82 04 	sts	0x0482, r25	; 0x800482 <state+0x1>
     948:	80 93 81 04 	sts	0x0481, r24	; 0x800481 <state>
			USART0_Transmit_String("-------------------------------------------\r\n");
     94c:	88 ed       	ldi	r24, 0xD8	; 216
     94e:	91 e0       	ldi	r25, 0x01	; 1
     950:	d4 db       	rcall	.-2136   	; 0xfa <USART0_Transmit_String>
     952:	88 ed       	ldi	r24, 0xD8	; 216
			USART1_Transmit_String("-------------------------------------------\r\n");
     954:	91 e0       	ldi	r25, 0x01	; 1
     956:	f6 db       	rcall	.-2068   	; 0x144 <USART1_Transmit_String>
     958:	80 91 81 04 	lds	r24, 0x0481	; 0x800481 <state>
		} // state 1 end
		if(state == 2){ // state 2 : give card to players
     95c:	90 91 82 04 	lds	r25, 0x0482	; 0x800482 <state+0x1>
     960:	82 30       	cpi	r24, 0x02	; 2
     962:	91 05       	cpc	r25, r1
     964:	09 f0       	breq	.+2      	; 0x968 <main+0x162>
     966:	97 c0       	rjmp	.+302    	; 0xa96 <main+0x290>
     968:	1f c0       	rjmp	.+62     	; 0x9a8 <main+0x1a2>
     96a:	82 b7       	in	r24, 0x32	; 50
			while(p1_card_cnt < 4){	// give Player 1 Cards
				random_value = (TCNT0*TCNT2)%NUM_CARD;
     96c:	94 b5       	in	r25, 0x24	; 36
     96e:	89 9f       	mul	r24, r25
     970:	c0 01       	movw	r24, r0
     972:	11 24       	eor	r1, r1
     974:	b8 01       	movw	r22, r16
     976:	b7 d4       	rcall	.+2414   	; 0x12e6 <__divmodhi4>
     978:	80 93 bb 04 	sts	0x04BB, r24	; 0x8004bb <random_value>
     97c:	99 27       	eor	r25, r25
     97e:	fc 01       	movw	r30, r24
     980:	ee 0f       	add	r30, r30
				if(deck[random_value].owner == 0){
     982:	ff 1f       	adc	r31, r31
     984:	ee 0f       	add	r30, r30
     986:	ff 1f       	adc	r31, r31
     988:	e4 51       	subi	r30, 0x14	; 20
     98a:	fb 4f       	sbci	r31, 0xFB	; 251
     98c:	32 81       	ldd	r19, Z+2	; 0x02
     98e:	31 11       	cpse	r19, r1
     990:	0d c0       	rjmp	.+26     	; 0x9ac <main+0x1a6>
     992:	88 0f       	add	r24, r24
     994:	99 1f       	adc	r25, r25
					deck[random_value].owner = 1;
     996:	88 0f       	add	r24, r24
     998:	99 1f       	adc	r25, r25
     99a:	fc 01       	movw	r30, r24
     99c:	e4 51       	subi	r30, 0x14	; 20
     99e:	fb 4f       	sbci	r31, 0xFB	; 251
     9a0:	52 82       	std	Z+2, r5	; 0x02
     9a2:	2f 5f       	subi	r18, 0xFF	; 255
     9a4:	20 93 80 04 	sts	0x0480, r18	; 0x800480 <p1_card_cnt>
					p1_card_cnt++;
     9a8:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <p1_card_cnt>
			if(rx == '0') state = 2;
			USART0_Transmit_String("-------------------------------------------\r\n");
			USART1_Transmit_String("-------------------------------------------\r\n");
		} // state 1 end
		if(state == 2){ // state 2 : give card to players
			while(p1_card_cnt < 4){	// give Player 1 Cards
     9ac:	24 30       	cpi	r18, 0x04	; 4
     9ae:	e8 f2       	brcs	.-70     	; 0x96a <main+0x164>
     9b0:	1f c0       	rjmp	.+62     	; 0x9f0 <main+0x1ea>
     9b2:	82 b7       	in	r24, 0x32	; 50
					deck[random_value].owner = 1;
					p1_card_cnt++;
				}
			}
			while(p2_card_cnt < 4){	// give Player 2 Cards
				random_value = (TCNT0*TCNT2)%NUM_CARD;
     9b4:	94 b5       	in	r25, 0x24	; 36
     9b6:	89 9f       	mul	r24, r25
     9b8:	c0 01       	movw	r24, r0
     9ba:	11 24       	eor	r1, r1
     9bc:	b8 01       	movw	r22, r16
     9be:	93 d4       	rcall	.+2342   	; 0x12e6 <__divmodhi4>
     9c0:	80 93 bb 04 	sts	0x04BB, r24	; 0x8004bb <random_value>
     9c4:	99 27       	eor	r25, r25
     9c6:	fc 01       	movw	r30, r24
     9c8:	ee 0f       	add	r30, r30
				if(deck[random_value].owner == 0){
     9ca:	ff 1f       	adc	r31, r31
     9cc:	ee 0f       	add	r30, r30
     9ce:	ff 1f       	adc	r31, r31
     9d0:	e4 51       	subi	r30, 0x14	; 20
     9d2:	fb 4f       	sbci	r31, 0xFB	; 251
     9d4:	32 81       	ldd	r19, Z+2	; 0x02
     9d6:	31 11       	cpse	r19, r1
     9d8:	0d c0       	rjmp	.+26     	; 0x9f4 <main+0x1ee>
     9da:	88 0f       	add	r24, r24
     9dc:	99 1f       	adc	r25, r25
					deck[random_value].owner = 2;
     9de:	88 0f       	add	r24, r24
     9e0:	99 1f       	adc	r25, r25
     9e2:	fc 01       	movw	r30, r24
     9e4:	e4 51       	subi	r30, 0x14	; 20
     9e6:	fb 4f       	sbci	r31, 0xFB	; 251
     9e8:	42 82       	std	Z+2, r4	; 0x02
     9ea:	2f 5f       	subi	r18, 0xFF	; 255
     9ec:	20 93 7f 04 	sts	0x047F, r18	; 0x80047f <p2_card_cnt>
					p2_card_cnt++;
     9f0:	20 91 7f 04 	lds	r18, 0x047F	; 0x80047f <p2_card_cnt>
				if(deck[random_value].owner == 0){
					deck[random_value].owner = 1;
					p1_card_cnt++;
				}
			}
			while(p2_card_cnt < 4){	// give Player 2 Cards
     9f4:	24 30       	cpi	r18, 0x04	; 4
     9f6:	e8 f2       	brcs	.-70     	; 0x9b2 <main+0x1ac>
     9f8:	10 92 7e 04 	sts	0x047E, r1	; 0x80047e <temp>
				if(deck[random_value].owner == 0){
					deck[random_value].owner = 2;
					p2_card_cnt++;
				}
			}
			temp = 0;
     9fc:	f7 01       	movw	r30, r14
     9fe:	82 81       	ldd	r24, Z+2	; 0x02
     a00:	81 30       	cpi	r24, 0x01	; 1
			for(int i=0; i<NUM_CARD; i++){
				if(deck[i].owner == 1){
     a02:	b1 f4       	brne	.+44     	; 0xa30 <main+0x22a>
     a04:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <temp>
					p1_deck[temp] = deck[i];
     a08:	a8 2f       	mov	r26, r24
     a0a:	b0 e0       	ldi	r27, 0x00	; 0
     a0c:	aa 0f       	add	r26, r26
     a0e:	bb 1f       	adc	r27, r27
     a10:	aa 0f       	add	r26, r26
     a12:	bb 1f       	adc	r27, r27
     a14:	ad 57       	subi	r26, 0x7D	; 125
     a16:	bb 4f       	sbci	r27, 0xFB	; 251
     a18:	40 81       	ld	r20, Z
     a1a:	51 81       	ldd	r21, Z+1	; 0x01
     a1c:	62 81       	ldd	r22, Z+2	; 0x02
     a1e:	73 81       	ldd	r23, Z+3	; 0x03
     a20:	4d 93       	st	X+, r20
     a22:	5d 93       	st	X+, r21
     a24:	6d 93       	st	X+, r22
     a26:	7c 93       	st	X, r23
     a28:	13 97       	sbiw	r26, 0x03	; 3
					//USART_Transmit_number(0, p1_deck[temp].color);
					//USART_Transmit_number(0, p1_deck[temp].number); 
					//USART0_Transmit_String("   ");
					temp++;
     a2a:	8f 5f       	subi	r24, 0xFF	; 255
     a2c:	80 93 7e 04 	sts	0x047E, r24	; 0x80047e <temp>
     a30:	34 96       	adiw	r30, 0x04	; 4
					deck[random_value].owner = 2;
					p2_card_cnt++;
				}
			}
			temp = 0;
			for(int i=0; i<NUM_CARD; i++){
     a32:	ec 17       	cp	r30, r28
     a34:	fd 07       	cpc	r31, r29
     a36:	19 f7       	brne	.-58     	; 0x9fe <main+0x1f8>
					//USART_Transmit_number(0, p1_deck[temp].number); 
					//USART0_Transmit_String("   ");
					temp++;
				}
			}
			showP1toP1();
     a38:	52 dc       	rcall	.-1884   	; 0x2de <showP1toP1>
     a3a:	8b e7       	ldi	r24, 0x7B	; 123
			USART0_Transmit_String("\r\n");
     a3c:	91 e0       	ldi	r25, 0x01	; 1
     a3e:	5d db       	rcall	.-2374   	; 0xfa <USART0_Transmit_String>
     a40:	10 92 7e 04 	sts	0x047E, r1	; 0x80047e <temp>
			temp = 0;
     a44:	f7 01       	movw	r30, r14
     a46:	82 81       	ldd	r24, Z+2	; 0x02
     a48:	82 30       	cpi	r24, 0x02	; 2
			for(int i=0; i<NUM_CARD; i++){
				if(deck[i].owner == 2){
     a4a:	b1 f4       	brne	.+44     	; 0xa78 <main+0x272>
     a4c:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <temp>
					p2_deck[temp] = deck[i];
     a50:	a8 2f       	mov	r26, r24
     a52:	b0 e0       	ldi	r27, 0x00	; 0
     a54:	aa 0f       	add	r26, r26
     a56:	bb 1f       	adc	r27, r27
     a58:	aa 0f       	add	r26, r26
     a5a:	bb 1f       	adc	r27, r27
     a5c:	a4 54       	subi	r26, 0x44	; 68
     a5e:	bb 4f       	sbci	r27, 0xFB	; 251
     a60:	40 81       	ld	r20, Z
     a62:	51 81       	ldd	r21, Z+1	; 0x01
     a64:	62 81       	ldd	r22, Z+2	; 0x02
     a66:	73 81       	ldd	r23, Z+3	; 0x03
     a68:	4d 93       	st	X+, r20
     a6a:	5d 93       	st	X+, r21
     a6c:	6d 93       	st	X+, r22
     a6e:	7c 93       	st	X, r23
					//USART_Transmit_number(1, p2_deck[temp].color);
					//USART_Transmit_number(1, p2_deck[temp].number); 
					//USART1_Transmit_String("   ");
					temp++;
     a70:	13 97       	sbiw	r26, 0x03	; 3
     a72:	8f 5f       	subi	r24, 0xFF	; 255
     a74:	80 93 7e 04 	sts	0x047E, r24	; 0x80047e <temp>
				}
			}
			showP1toP1();
			USART0_Transmit_String("\r\n");
			temp = 0;
			for(int i=0; i<NUM_CARD; i++){
     a78:	34 96       	adiw	r30, 0x04	; 4
     a7a:	ec 17       	cp	r30, r28
     a7c:	fd 07       	cpc	r31, r29
					//USART_Transmit_number(1, p2_deck[temp].number); 
					//USART1_Transmit_String("   ");
					temp++;
				}
			}
			showP2toP2();
     a7e:	19 f7       	brne	.-58     	; 0xa46 <main+0x240>
			USART1_Transmit_String("\r\n");
     a80:	74 dd       	rcall	.-1304   	; 0x56a <showP2toP2>
     a82:	8b e7       	ldi	r24, 0x7B	; 123
     a84:	91 e0       	ldi	r25, 0x01	; 1
			showP2toP1();
     a86:	5e db       	rcall	.-2372   	; 0x144 <USART1_Transmit_String>
			showP1toP2();
     a88:	d8 dc       	rcall	.-1616   	; 0x43a <showP2toP1>
			state = 15;
     a8a:	1d de       	rcall	.-966    	; 0x6c6 <showP1toP2>
     a8c:	d0 92 82 04 	sts	0x0482, r13	; 0x800482 <state+0x1>
     a90:	c0 92 81 04 	sts	0x0481, r12	; 0x800481 <state>
		} // state 2 end
		if(state == 15){
     a94:	02 c0       	rjmp	.+4      	; 0xa9a <main+0x294>
			USART0_Transmit_String("--------------------------------------------------------------------\r\n");
     a96:	0f 97       	sbiw	r24, 0x0f	; 15
     a98:	c9 f4       	brne	.+50     	; 0xacc <main+0x2c6>
     a9a:	8f eb       	ldi	r24, 0xBF	; 191
     a9c:	91 e0       	ldi	r25, 0x01	; 1
			USART1_Transmit_String("--------------------------------------------------------------------\r\n");
     a9e:	2d db       	rcall	.-2470   	; 0xfa <USART0_Transmit_String>
     aa0:	8f eb       	ldi	r24, 0xBF	; 191
     aa2:	91 e0       	ldi	r25, 0x01	; 1
     aa4:	4f db       	rcall	.-2402   	; 0x144 <USART1_Transmit_String>
			USART0_Transmit_String("Press 0 to start your turn\r\n");
     aa6:	86 e0       	ldi	r24, 0x06	; 6
     aa8:	92 e0       	ldi	r25, 0x02	; 2
     aaa:	27 db       	rcall	.-2482   	; 0xfa <USART0_Transmit_String>
     aac:	83 e2       	ldi	r24, 0x23	; 35
			USART1_Transmit_String("Player 1's turn\r\n");
     aae:	92 e0       	ldi	r25, 0x02	; 2
     ab0:	49 db       	rcall	.-2414   	; 0x144 <USART1_Transmit_String>
     ab2:	31 db       	rcall	.-2462   	; 0x116 <USART0_Receive>
			rx = USART0_Receive();
     ab4:	80 93 b3 04 	sts	0x04B3, r24	; 0x8004b3 <rx>
     ab8:	80 33       	cpi	r24, 0x30	; 48
			if(rx == '0') state = 3;
     aba:	21 f4       	brne	.+8      	; 0xac4 <main+0x2be>
     abc:	30 92 82 04 	sts	0x0482, r3	; 0x800482 <state+0x1>
			p1_corr_flag = 0;
     ac0:	20 92 81 04 	sts	0x0481, r2	; 0x800481 <state>
			p2_corr_flag = 0;
     ac4:	10 92 7d 04 	sts	0x047D, r1	; 0x80047d <p1_corr_flag>
		}
		if(state == 16){
     ac8:	10 92 7c 04 	sts	0x047C, r1	; 0x80047c <__data_end>
     acc:	80 91 81 04 	lds	r24, 0x0481	; 0x800481 <state>
     ad0:	90 91 82 04 	lds	r25, 0x0482	; 0x800482 <state+0x1>
			USART0_Transmit_String("--------------------------------------------------------------------\r\n");
     ad4:	40 97       	sbiw	r24, 0x10	; 16
     ad6:	d9 f4       	brne	.+54     	; 0xb0e <main+0x308>
     ad8:	8f eb       	ldi	r24, 0xBF	; 191
     ada:	91 e0       	ldi	r25, 0x01	; 1
			USART1_Transmit_String("--------------------------------------------------------------------\r\n");
     adc:	0e db       	rcall	.-2532   	; 0xfa <USART0_Transmit_String>
     ade:	8f eb       	ldi	r24, 0xBF	; 191
     ae0:	91 e0       	ldi	r25, 0x01	; 1
     ae2:	30 db       	rcall	.-2464   	; 0x144 <USART1_Transmit_String>
			USART1_Transmit_String("Press 0 to start your turn\r\n");
     ae4:	86 e0       	ldi	r24, 0x06	; 6
     ae6:	92 e0       	ldi	r25, 0x02	; 2
     ae8:	2d db       	rcall	.-2470   	; 0x144 <USART1_Transmit_String>
     aea:	85 e3       	ldi	r24, 0x35	; 53
			USART0_Transmit_String("Player 2's turn\r\n");
     aec:	92 e0       	ldi	r25, 0x02	; 2
     aee:	05 db       	rcall	.-2550   	; 0xfa <USART0_Transmit_String>
     af0:	82 de       	rcall	.-764    	; 0x7f6 <USART1_Receive>
     af2:	80 93 b3 04 	sts	0x04B3, r24	; 0x8004b3 <rx>
			rx = USART1_Receive();
     af6:	80 33       	cpi	r24, 0x30	; 48
     af8:	31 f4       	brne	.+12     	; 0xb06 <main+0x300>
     afa:	a4 e0       	ldi	r26, 0x04	; 4
			if(rx == '0') state = 4;
     afc:	b0 e0       	ldi	r27, 0x00	; 0
     afe:	b0 93 82 04 	sts	0x0482, r27	; 0x800482 <state+0x1>
     b02:	a0 93 81 04 	sts	0x0481, r26	; 0x800481 <state>
     b06:	10 92 7d 04 	sts	0x047D, r1	; 0x80047d <p1_corr_flag>
     b0a:	10 92 7c 04 	sts	0x047C, r1	; 0x80047c <__data_end>
			p1_corr_flag = 0;
     b0e:	80 91 81 04 	lds	r24, 0x0481	; 0x800481 <state>
			p2_corr_flag = 0;
     b12:	90 91 82 04 	lds	r25, 0x0482	; 0x800482 <state+0x1>
		}
		if(state == 3){ // state : give 1 card to player 1
     b16:	83 30       	cpi	r24, 0x03	; 3
     b18:	91 05       	cpc	r25, r1
     b1a:	09 f0       	breq	.+2      	; 0xb1e <main+0x318>
     b1c:	90 c0       	rjmp	.+288    	; 0xc3e <main+0x438>
     b1e:	ee ee       	ldi	r30, 0xEE	; 238
     b20:	f4 e0       	ldi	r31, 0x04	; 4
     b22:	2e e4       	ldi	r18, 0x4E	; 78
     b24:	35 e0       	ldi	r19, 0x05	; 5
     b26:	90 e0       	ldi	r25, 0x00	; 0
     b28:	80 81       	ld	r24, Z
     b2a:	81 11       	cpse	r24, r1
			temp = 0;
			for(int i=0;i<NUM_CARD;i++){
				if(deck[i].owner == 0) temp++;
     b2c:	01 c0       	rjmp	.+2      	; 0xb30 <main+0x32a>
     b2e:	9f 5f       	subi	r25, 0xFF	; 255
     b30:	34 96       	adiw	r30, 0x04	; 4
     b32:	e2 17       	cp	r30, r18
     b34:	f3 07       	cpc	r31, r19
			p1_corr_flag = 0;
			p2_corr_flag = 0;
		}
		if(state == 3){ // state : give 1 card to player 1
			temp = 0;
			for(int i=0;i<NUM_CARD;i++){
     b36:	c1 f7       	brne	.-16     	; 0xb28 <main+0x322>
     b38:	90 93 7e 04 	sts	0x047E, r25	; 0x80047e <temp>
     b3c:	99 23       	and	r25, r25
     b3e:	09 f4       	brne	.+2      	; 0xb42 <main+0x33c>
				if(deck[i].owner == 0) temp++;
			}
			if(temp != 0){
     b40:	52 c0       	rjmp	.+164    	; 0xbe6 <main+0x3e0>
     b42:	80 91 80 04 	lds	r24, 0x0480	; 0x800480 <p1_card_cnt>
				temp = p1_card_cnt + 1;
     b46:	8f 5f       	subi	r24, 0xFF	; 255
     b48:	80 93 7e 04 	sts	0x047E, r24	; 0x80047e <temp>
     b4c:	44 c0       	rjmp	.+136    	; 0xbd6 <main+0x3d0>
     b4e:	82 b7       	in	r24, 0x32	; 50
				while(p1_card_cnt < temp){
     b50:	94 b5       	in	r25, 0x24	; 36
					random_value = (TCNT0*TCNT2)%NUM_CARD;
     b52:	89 9f       	mul	r24, r25
     b54:	c0 01       	movw	r24, r0
     b56:	11 24       	eor	r1, r1
     b58:	b8 01       	movw	r22, r16
     b5a:	c5 d3       	rcall	.+1930   	; 0x12e6 <__divmodhi4>
     b5c:	80 93 bb 04 	sts	0x04BB, r24	; 0x8004bb <random_value>
     b60:	99 27       	eor	r25, r25
     b62:	fc 01       	movw	r30, r24
     b64:	ee 0f       	add	r30, r30
					if(deck[random_value].owner == 0){
     b66:	ff 1f       	adc	r31, r31
     b68:	ee 0f       	add	r30, r30
     b6a:	ff 1f       	adc	r31, r31
     b6c:	e4 51       	subi	r30, 0x14	; 20
     b6e:	fb 4f       	sbci	r31, 0xFB	; 251
     b70:	42 81       	ldd	r20, Z+2	; 0x02
     b72:	41 11       	cpse	r20, r1
     b74:	34 c0       	rjmp	.+104    	; 0xbde <main+0x3d8>
     b76:	88 0f       	add	r24, r24
						deck[random_value].owner = 1;
     b78:	99 1f       	adc	r25, r25
     b7a:	88 0f       	add	r24, r24
     b7c:	99 1f       	adc	r25, r25
     b7e:	fc 01       	movw	r30, r24
     b80:	e4 51       	subi	r30, 0x14	; 20
     b82:	fb 4f       	sbci	r31, 0xFB	; 251
     b84:	52 82       	std	Z+2, r5	; 0x02
						p1_card_cnt++;
     b86:	2f 5f       	subi	r18, 0xFF	; 255
     b88:	20 93 80 04 	sts	0x0480, r18	; 0x800480 <p1_card_cnt>
						USART0_Transmit_String("You get ");
     b8c:	87 e4       	ldi	r24, 0x47	; 71
     b8e:	92 e0       	ldi	r25, 0x02	; 2
     b90:	b4 da       	rcall	.-2712   	; 0xfa <USART0_Transmit_String>
						if(deck[random_value].color == 0) USART0_Transmit_String("Black ");
     b92:	e0 91 bb 04 	lds	r30, 0x04BB	; 0x8004bb <random_value>
     b96:	f0 e0       	ldi	r31, 0x00	; 0
     b98:	ee 0f       	add	r30, r30
     b9a:	ff 1f       	adc	r31, r31
     b9c:	ee 0f       	add	r30, r30
     b9e:	ff 1f       	adc	r31, r31
     ba0:	e4 51       	subi	r30, 0x14	; 20
     ba2:	fb 4f       	sbci	r31, 0xFB	; 251
     ba4:	80 81       	ld	r24, Z
     ba6:	81 11       	cpse	r24, r1
     ba8:	04 c0       	rjmp	.+8      	; 0xbb2 <main+0x3ac>
     baa:	80 e5       	ldi	r24, 0x50	; 80
     bac:	92 e0       	ldi	r25, 0x02	; 2
     bae:	a5 da       	rcall	.-2742   	; 0xfa <USART0_Transmit_String>
						else USART0_Transmit_String("White ");
     bb0:	03 c0       	rjmp	.+6      	; 0xbb8 <main+0x3b2>
     bb2:	87 e5       	ldi	r24, 0x57	; 87
     bb4:	92 e0       	ldi	r25, 0x02	; 2
     bb6:	a1 da       	rcall	.-2750   	; 0xfa <USART0_Transmit_String>
						USART_Transmit_number(0,deck[random_value].number);
     bb8:	e0 91 bb 04 	lds	r30, 0x04BB	; 0x8004bb <random_value>
     bbc:	f0 e0       	ldi	r31, 0x00	; 0
     bbe:	ee 0f       	add	r30, r30
     bc0:	ff 1f       	adc	r31, r31
     bc2:	ee 0f       	add	r30, r30
     bc4:	ff 1f       	adc	r31, r31
     bc6:	e4 51       	subi	r30, 0x14	; 20
     bc8:	fb 4f       	sbci	r31, 0xFB	; 251
     bca:	61 81       	ldd	r22, Z+1	; 0x01
     bcc:	80 e0       	ldi	r24, 0x00	; 0
     bce:	c8 da       	rcall	.-2672   	; 0x160 <USART_Transmit_number>
     bd0:	8b e7       	ldi	r24, 0x7B	; 123
						USART0_Transmit_String("\r\n");
     bd2:	91 e0       	ldi	r25, 0x01	; 1
     bd4:	92 da       	rcall	.-2780   	; 0xfa <USART0_Transmit_String>
     bd6:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <p1_card_cnt>
			for(int i=0;i<NUM_CARD;i++){
				if(deck[i].owner == 0) temp++;
			}
			if(temp != 0){
				temp = p1_card_cnt + 1;
				while(p1_card_cnt < temp){
     bda:	30 91 7e 04 	lds	r19, 0x047E	; 0x80047e <temp>
     bde:	23 17       	cp	r18, r19
     be0:	08 f4       	brcc	.+2      	; 0xbe4 <main+0x3de>
     be2:	b5 cf       	rjmp	.-150    	; 0xb4e <main+0x348>
     be4:	03 c0       	rjmp	.+6      	; 0xbec <main+0x3e6>
     be6:	8e e5       	ldi	r24, 0x5E	; 94
     be8:	92 e0       	ldi	r25, 0x02	; 2
						USART_Transmit_number(0,deck[random_value].number);
						USART0_Transmit_String("\r\n");
					}
				}
			}
			else USART0_Transmit_String("There is no card on field\r\n");
     bea:	87 da       	rcall	.-2802   	; 0xfa <USART0_Transmit_String>
     bec:	10 92 7e 04 	sts	0x047E, r1	; 0x80047e <temp>
			temp = 0;
     bf0:	f7 01       	movw	r30, r14
     bf2:	82 81       	ldd	r24, Z+2	; 0x02
			for(int i=0; i<NUM_CARD; i++){
				if(deck[i].owner == 1){
     bf4:	81 30       	cpi	r24, 0x01	; 1
     bf6:	b1 f4       	brne	.+44     	; 0xc24 <main+0x41e>
     bf8:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <temp>
					p1_deck[temp] = deck[i];
     bfc:	a8 2f       	mov	r26, r24
     bfe:	b0 e0       	ldi	r27, 0x00	; 0
     c00:	aa 0f       	add	r26, r26
     c02:	bb 1f       	adc	r27, r27
     c04:	aa 0f       	add	r26, r26
     c06:	bb 1f       	adc	r27, r27
     c08:	ad 57       	subi	r26, 0x7D	; 125
     c0a:	bb 4f       	sbci	r27, 0xFB	; 251
     c0c:	40 81       	ld	r20, Z
     c0e:	51 81       	ldd	r21, Z+1	; 0x01
     c10:	62 81       	ldd	r22, Z+2	; 0x02
     c12:	73 81       	ldd	r23, Z+3	; 0x03
     c14:	4d 93       	st	X+, r20
     c16:	5d 93       	st	X+, r21
     c18:	6d 93       	st	X+, r22
     c1a:	7c 93       	st	X, r23
     c1c:	13 97       	sbiw	r26, 0x03	; 3
     c1e:	8f 5f       	subi	r24, 0xFF	; 255
					temp++;
     c20:	80 93 7e 04 	sts	0x047E, r24	; 0x80047e <temp>
     c24:	34 96       	adiw	r30, 0x04	; 4
     c26:	ec 17       	cp	r30, r28
					}
				}
			}
			else USART0_Transmit_String("There is no card on field\r\n");
			temp = 0;
			for(int i=0; i<NUM_CARD; i++){
     c28:	fd 07       	cpc	r31, r29
     c2a:	19 f7       	brne	.-58     	; 0xbf2 <main+0x3ec>
     c2c:	58 db       	rcall	.-2384   	; 0x2de <showP1toP1>
				if(deck[i].owner == 1){
					p1_deck[temp] = deck[i];
					temp++;
				}
			}
			showP1toP1();
     c2e:	05 dc       	rcall	.-2038   	; 0x43a <showP2toP1>
     c30:	85 e0       	ldi	r24, 0x05	; 5
			showP2toP1();
     c32:	90 e0       	ldi	r25, 0x00	; 0
     c34:	90 93 82 04 	sts	0x0482, r25	; 0x800482 <state+0x1>
			state = 5;
     c38:	80 93 81 04 	sts	0x0481, r24	; 0x800481 <state>
     c3c:	9a c0       	rjmp	.+308    	; 0xd72 <main+0x56c>
     c3e:	04 97       	sbiw	r24, 0x04	; 4
     c40:	09 f0       	breq	.+2      	; 0xc44 <main+0x43e>
		}
		
		if(state == 4){ // state : give 1 card to player 2
     c42:	90 c0       	rjmp	.+288    	; 0xd64 <main+0x55e>
     c44:	ee ee       	ldi	r30, 0xEE	; 238
     c46:	f4 e0       	ldi	r31, 0x04	; 4
     c48:	2e e4       	ldi	r18, 0x4E	; 78
     c4a:	35 e0       	ldi	r19, 0x05	; 5
     c4c:	90 e0       	ldi	r25, 0x00	; 0
     c4e:	80 81       	ld	r24, Z
     c50:	81 11       	cpse	r24, r1
			temp = 0;
			for(int i=0;i<NUM_CARD;i++){
				if(deck[i].owner == 0) temp++;
     c52:	01 c0       	rjmp	.+2      	; 0xc56 <main+0x450>
     c54:	9f 5f       	subi	r25, 0xFF	; 255
     c56:	34 96       	adiw	r30, 0x04	; 4
     c58:	2e 17       	cp	r18, r30
     c5a:	3f 07       	cpc	r19, r31
			state = 5;
		}
		
		if(state == 4){ // state : give 1 card to player 2
			temp = 0;
			for(int i=0;i<NUM_CARD;i++){
     c5c:	c1 f7       	brne	.-16     	; 0xc4e <main+0x448>
     c5e:	90 93 7e 04 	sts	0x047E, r25	; 0x80047e <temp>
     c62:	99 23       	and	r25, r25
     c64:	09 f4       	brne	.+2      	; 0xc68 <main+0x462>
				if(deck[i].owner == 0) temp++;
			}
			if(temp != 0){
     c66:	52 c0       	rjmp	.+164    	; 0xd0c <main+0x506>
     c68:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <p2_card_cnt>
				temp = p2_card_cnt + 1;
     c6c:	8f 5f       	subi	r24, 0xFF	; 255
     c6e:	80 93 7e 04 	sts	0x047E, r24	; 0x80047e <temp>
     c72:	44 c0       	rjmp	.+136    	; 0xcfc <main+0x4f6>
				while(p2_card_cnt < temp){
     c74:	82 b7       	in	r24, 0x32	; 50
					random_value = (TCNT0*TCNT2)%NUM_CARD;
     c76:	94 b5       	in	r25, 0x24	; 36
     c78:	89 9f       	mul	r24, r25
     c7a:	c0 01       	movw	r24, r0
     c7c:	11 24       	eor	r1, r1
     c7e:	b8 01       	movw	r22, r16
     c80:	32 d3       	rcall	.+1636   	; 0x12e6 <__divmodhi4>
     c82:	80 93 bb 04 	sts	0x04BB, r24	; 0x8004bb <random_value>
     c86:	99 27       	eor	r25, r25
     c88:	fc 01       	movw	r30, r24
					if(deck[random_value].owner == 0){
     c8a:	ee 0f       	add	r30, r30
     c8c:	ff 1f       	adc	r31, r31
     c8e:	ee 0f       	add	r30, r30
     c90:	ff 1f       	adc	r31, r31
     c92:	e4 51       	subi	r30, 0x14	; 20
     c94:	fb 4f       	sbci	r31, 0xFB	; 251
     c96:	42 81       	ldd	r20, Z+2	; 0x02
     c98:	41 11       	cpse	r20, r1
     c9a:	34 c0       	rjmp	.+104    	; 0xd04 <main+0x4fe>
						deck[random_value].owner = 2;
     c9c:	88 0f       	add	r24, r24
     c9e:	99 1f       	adc	r25, r25
     ca0:	88 0f       	add	r24, r24
     ca2:	99 1f       	adc	r25, r25
     ca4:	fc 01       	movw	r30, r24
     ca6:	e4 51       	subi	r30, 0x14	; 20
     ca8:	fb 4f       	sbci	r31, 0xFB	; 251
						p2_card_cnt++;
     caa:	42 82       	std	Z+2, r4	; 0x02
     cac:	2f 5f       	subi	r18, 0xFF	; 255
						USART1_Transmit_String("You get ");
     cae:	20 93 7f 04 	sts	0x047F, r18	; 0x80047f <p2_card_cnt>
     cb2:	87 e4       	ldi	r24, 0x47	; 71
     cb4:	92 e0       	ldi	r25, 0x02	; 2
						if(deck[random_value].color == 0) USART1_Transmit_String("Black ");
     cb6:	46 da       	rcall	.-2932   	; 0x144 <USART1_Transmit_String>
     cb8:	e0 91 bb 04 	lds	r30, 0x04BB	; 0x8004bb <random_value>
     cbc:	f0 e0       	ldi	r31, 0x00	; 0
     cbe:	ee 0f       	add	r30, r30
     cc0:	ff 1f       	adc	r31, r31
     cc2:	ee 0f       	add	r30, r30
     cc4:	ff 1f       	adc	r31, r31
     cc6:	e4 51       	subi	r30, 0x14	; 20
     cc8:	fb 4f       	sbci	r31, 0xFB	; 251
     cca:	80 81       	ld	r24, Z
     ccc:	81 11       	cpse	r24, r1
     cce:	04 c0       	rjmp	.+8      	; 0xcd8 <main+0x4d2>
     cd0:	80 e5       	ldi	r24, 0x50	; 80
     cd2:	92 e0       	ldi	r25, 0x02	; 2
     cd4:	37 da       	rcall	.-2962   	; 0x144 <USART1_Transmit_String>
						else USART1_Transmit_String("White ");
     cd6:	03 c0       	rjmp	.+6      	; 0xcde <main+0x4d8>
     cd8:	87 e5       	ldi	r24, 0x57	; 87
     cda:	92 e0       	ldi	r25, 0x02	; 2
     cdc:	33 da       	rcall	.-2970   	; 0x144 <USART1_Transmit_String>
						USART_Transmit_number(1,deck[random_value].number);
     cde:	e0 91 bb 04 	lds	r30, 0x04BB	; 0x8004bb <random_value>
     ce2:	f0 e0       	ldi	r31, 0x00	; 0
     ce4:	ee 0f       	add	r30, r30
     ce6:	ff 1f       	adc	r31, r31
     ce8:	ee 0f       	add	r30, r30
     cea:	ff 1f       	adc	r31, r31
     cec:	e4 51       	subi	r30, 0x14	; 20
     cee:	fb 4f       	sbci	r31, 0xFB	; 251
     cf0:	61 81       	ldd	r22, Z+1	; 0x01
     cf2:	85 2d       	mov	r24, r5
     cf4:	35 da       	rcall	.-2966   	; 0x160 <USART_Transmit_number>
     cf6:	8b e7       	ldi	r24, 0x7B	; 123
						USART1_Transmit_String("\r\n");
     cf8:	91 e0       	ldi	r25, 0x01	; 1
     cfa:	24 da       	rcall	.-3000   	; 0x144 <USART1_Transmit_String>
     cfc:	20 91 7f 04 	lds	r18, 0x047F	; 0x80047f <p2_card_cnt>
			for(int i=0;i<NUM_CARD;i++){
				if(deck[i].owner == 0) temp++;
			}
			if(temp != 0){
				temp = p2_card_cnt + 1;
				while(p2_card_cnt < temp){
     d00:	30 91 7e 04 	lds	r19, 0x047E	; 0x80047e <temp>
     d04:	23 17       	cp	r18, r19
     d06:	08 f4       	brcc	.+2      	; 0xd0a <main+0x504>
     d08:	b5 cf       	rjmp	.-150    	; 0xc74 <main+0x46e>
     d0a:	03 c0       	rjmp	.+6      	; 0xd12 <main+0x50c>
						USART1_Transmit_String("\r\n");
						
					}
				}
			}
			else USART1_Transmit_String("There is no card on field\r\n");
     d0c:	8e e5       	ldi	r24, 0x5E	; 94
     d0e:	92 e0       	ldi	r25, 0x02	; 2
     d10:	19 da       	rcall	.-3022   	; 0x144 <USART1_Transmit_String>
     d12:	10 92 7e 04 	sts	0x047E, r1	; 0x80047e <temp>
			temp = 0;
     d16:	f7 01       	movw	r30, r14
     d18:	82 81       	ldd	r24, Z+2	; 0x02
			for(int i=0; i<NUM_CARD; i++){
				if(deck[i].owner == 2){
     d1a:	82 30       	cpi	r24, 0x02	; 2
     d1c:	b1 f4       	brne	.+44     	; 0xd4a <main+0x544>
     d1e:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <temp>
					p2_deck[temp] = deck[i];
     d22:	a8 2f       	mov	r26, r24
     d24:	b0 e0       	ldi	r27, 0x00	; 0
     d26:	aa 0f       	add	r26, r26
     d28:	bb 1f       	adc	r27, r27
     d2a:	aa 0f       	add	r26, r26
     d2c:	bb 1f       	adc	r27, r27
     d2e:	a4 54       	subi	r26, 0x44	; 68
     d30:	bb 4f       	sbci	r27, 0xFB	; 251
     d32:	40 81       	ld	r20, Z
     d34:	51 81       	ldd	r21, Z+1	; 0x01
     d36:	62 81       	ldd	r22, Z+2	; 0x02
     d38:	73 81       	ldd	r23, Z+3	; 0x03
     d3a:	4d 93       	st	X+, r20
     d3c:	5d 93       	st	X+, r21
					temp++;
     d3e:	6d 93       	st	X+, r22
     d40:	7c 93       	st	X, r23
     d42:	13 97       	sbiw	r26, 0x03	; 3
     d44:	8f 5f       	subi	r24, 0xFF	; 255
					}
				}
			}
			else USART1_Transmit_String("There is no card on field\r\n");
			temp = 0;
			for(int i=0; i<NUM_CARD; i++){
     d46:	80 93 7e 04 	sts	0x047E, r24	; 0x80047e <temp>
     d4a:	34 96       	adiw	r30, 0x04	; 4
				if(deck[i].owner == 2){
					p2_deck[temp] = deck[i];
					temp++;
				}
			}
			showP2toP2();
     d4c:	ec 17       	cp	r30, r28
     d4e:	fd 07       	cpc	r31, r29
			showP1toP2();
     d50:	19 f7       	brne	.-58     	; 0xd18 <main+0x512>
     d52:	0b dc       	rcall	.-2026   	; 0x56a <showP2toP2>
			state = 10;
     d54:	b8 dc       	rcall	.-1680   	; 0x6c6 <showP1toP2>
     d56:	8a e0       	ldi	r24, 0x0A	; 10
     d58:	90 e0       	ldi	r25, 0x00	; 0
     d5a:	90 93 82 04 	sts	0x0482, r25	; 0x800482 <state+0x1>
     d5e:	80 93 81 04 	sts	0x0481, r24	; 0x800481 <state>
		}
		if(state == 5){ // state 5 
     d62:	6b c0       	rjmp	.+214    	; 0xe3a <main+0x634>
     d64:	80 91 81 04 	lds	r24, 0x0481	; 0x800481 <state>
     d68:	90 91 82 04 	lds	r25, 0x0482	; 0x800482 <state+0x1>
     d6c:	05 97       	sbiw	r24, 0x05	; 5
     d6e:	09 f0       	breq	.+2      	; 0xd72 <main+0x56c>
			//_delay_ms(1);
			if(p1_corr_flag == 0) USART0_Transmit_String("Choose card to open : ");
     d70:	3d c0       	rjmp	.+122    	; 0xdec <main+0x5e6>
     d72:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <p1_corr_flag>
     d76:	81 11       	cpse	r24, r1
     d78:	04 c0       	rjmp	.+8      	; 0xd82 <main+0x57c>
     d7a:	8a e7       	ldi	r24, 0x7A	; 122
     d7c:	92 e0       	ldi	r25, 0x02	; 2
			else if(p1_corr_flag == 1) USART0_Transmit_String("Choose card to open, Press p to pass : "); // 몇 번째에 있는 카드 선택인지
     d7e:	bd d9       	rcall	.-3206   	; 0xfa <USART0_Transmit_String>
     d80:	05 c0       	rjmp	.+10     	; 0xd8c <main+0x586>
     d82:	81 30       	cpi	r24, 0x01	; 1
     d84:	19 f4       	brne	.+6      	; 0xd8c <main+0x586>
     d86:	81 e9       	ldi	r24, 0x91	; 145
     d88:	92 e0       	ldi	r25, 0x02	; 2
			USART1_Transmit_String("Player 1 is checking your card\r\n");
     d8a:	b7 d9       	rcall	.-3218   	; 0xfa <USART0_Transmit_String>
     d8c:	89 eb       	ldi	r24, 0xB9	; 185
     d8e:	92 e0       	ldi	r25, 0x02	; 2
     d90:	d9 d9       	rcall	.-3150   	; 0x144 <USART1_Transmit_String>
			rx = USART0_Receive();
     d92:	c1 d9       	rcall	.-3198   	; 0x116 <USART0_Receive>
     d94:	80 93 b3 04 	sts	0x04B3, r24	; 0x8004b3 <rx>
			USART0_Transmit(rx);
     d98:	ac d9       	rcall	.-3240   	; 0xf2 <USART0_Transmit>
     d9a:	90 91 b3 04 	lds	r25, 0x04B3	; 0x8004b3 <rx>
			if((rx >= '0')&&(rx <= '9')){
     d9e:	80 ed       	ldi	r24, 0xD0	; 208
     da0:	89 0f       	add	r24, r25
     da2:	8a 30       	cpi	r24, 0x0A	; 10
				get_number_1[0] = rx-48;
     da4:	68 f4       	brcc	.+26     	; 0xdc0 <main+0x5ba>
     da6:	80 93 b4 04 	sts	0x04B4, r24	; 0x8004b4 <get_number_1>
				state = 6;	
     daa:	26 e0       	ldi	r18, 0x06	; 6
     dac:	30 e0       	ldi	r19, 0x00	; 0
     dae:	30 93 82 04 	sts	0x0482, r19	; 0x800482 <state+0x1>
     db2:	20 93 81 04 	sts	0x0481, r18	; 0x800481 <state>
			}
			if(p1_corr_flag == 1 && rx == 'p'){
     db6:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <p1_corr_flag>
     dba:	81 30       	cpi	r24, 0x01	; 1
     dbc:	e9 f4       	brne	.+58     	; 0xdf8 <main+0x5f2>
     dbe:	7b c2       	rjmp	.+1270   	; 0x12b6 <__stack+0x1b7>
     dc0:	80 91 7d 04 	lds	r24, 0x047D	; 0x80047d <p1_corr_flag>
     dc4:	81 30       	cpi	r24, 0x01	; 1
     dc6:	91 f4       	brne	.+36     	; 0xdec <main+0x5e6>
     dc8:	90 37       	cpi	r25, 0x70	; 112
				USART0_Transmit_String("\r\n");
     dca:	81 f4       	brne	.+32     	; 0xdec <main+0x5e6>
     dcc:	8b e7       	ldi	r24, 0x7B	; 123
     dce:	91 e0       	ldi	r25, 0x01	; 1
     dd0:	94 d9       	rcall	.-3288   	; 0xfa <USART0_Transmit_String>
				USART0_Transmit_String("Passed\r\n");
     dd2:	8a ed       	ldi	r24, 0xDA	; 218
     dd4:	92 e0       	ldi	r25, 0x02	; 2
     dd6:	91 d9       	rcall	.-3294   	; 0xfa <USART0_Transmit_String>
     dd8:	83 ee       	ldi	r24, 0xE3	; 227
				USART1_Transmit_String("Player 1 passed, It's your turn\r\n");
     dda:	92 e0       	ldi	r25, 0x02	; 2
     ddc:	b3 d9       	rcall	.-3226   	; 0x144 <USART1_Transmit_String>
     dde:	80 e1       	ldi	r24, 0x10	; 16
				state = 16;
     de0:	90 e0       	ldi	r25, 0x00	; 0
     de2:	90 93 82 04 	sts	0x0482, r25	; 0x800482 <state+0x1>
     de6:	80 93 81 04 	sts	0x0481, r24	; 0x800481 <state>
			}
		} // state 3 end
		if(state == 6){ // state 4
     dea:	42 c0       	rjmp	.+132    	; 0xe70 <main+0x66a>
     dec:	80 91 81 04 	lds	r24, 0x0481	; 0x800481 <state>
     df0:	90 91 82 04 	lds	r25, 0x0482	; 0x800482 <state+0x1>
     df4:	06 97       	sbiw	r24, 0x06	; 6
			p1_corr_flag = 0;
     df6:	09 f5       	brne	.+66     	; 0xe3a <main+0x634>
     df8:	10 92 7d 04 	sts	0x047D, r1	; 0x80047d <p1_corr_flag>
			rx = USART0_Receive();
     dfc:	8c d9       	rcall	.-3304   	; 0x116 <USART0_Receive>
     dfe:	80 93 b3 04 	sts	0x04B3, r24	; 0x8004b3 <rx>
			USART0_Transmit(rx);
     e02:	77 d9       	rcall	.-3346   	; 0xf2 <USART0_Transmit>
     e04:	8b e7       	ldi	r24, 0x7B	; 123
			USART0_Transmit_String("\r\n");
     e06:	91 e0       	ldi	r25, 0x01	; 1
     e08:	78 d9       	rcall	.-3344   	; 0xfa <USART0_Transmit_String>
     e0a:	80 91 b3 04 	lds	r24, 0x04B3	; 0x8004b3 <rx>
			if((rx >= '0')&&(rx <= '9')){
     e0e:	80 53       	subi	r24, 0x30	; 48
     e10:	8a 30       	cpi	r24, 0x0A	; 10
     e12:	98 f4       	brcc	.+38     	; 0xe3a <main+0x634>
				get_number_1[1] = rx-48;
     e14:	e4 eb       	ldi	r30, 0xB4	; 180
     e16:	f4 e0       	ldi	r31, 0x04	; 4
				get_number_1[2] = get_number_1[0]*10 + get_number_1[1] - 1;
     e18:	81 83       	std	Z+1, r24	; 0x01
     e1a:	90 81       	ld	r25, Z
     e1c:	99 0f       	add	r25, r25
     e1e:	29 2f       	mov	r18, r25
     e20:	22 0f       	add	r18, r18
     e22:	22 0f       	add	r18, r18
     e24:	92 0f       	add	r25, r18
     e26:	89 0f       	add	r24, r25
     e28:	81 50       	subi	r24, 0x01	; 1
				//_delay_ms(1);
				state = 7;
     e2a:	82 83       	std	Z+2, r24	; 0x02
     e2c:	87 e0       	ldi	r24, 0x07	; 7
     e2e:	90 e0       	ldi	r25, 0x00	; 0
     e30:	90 93 82 04 	sts	0x0482, r25	; 0x800482 <state+0x1>
     e34:	80 93 81 04 	sts	0x0481, r24	; 0x800481 <state>
			}			
		} // state 4 end
		if(state == 7){ // state 5
     e38:	06 c0       	rjmp	.+12     	; 0xe46 <main+0x640>
     e3a:	80 91 81 04 	lds	r24, 0x0481	; 0x800481 <state>
     e3e:	90 91 82 04 	lds	r25, 0x0482	; 0x800482 <state+0x1>
     e42:	07 97       	sbiw	r24, 0x07	; 7
			USART0_Transmit_String("Number? : "); // 카드가 무엇인지
     e44:	a9 f4       	brne	.+42     	; 0xe70 <main+0x66a>
     e46:	85 e0       	ldi	r24, 0x05	; 5
     e48:	93 e0       	ldi	r25, 0x03	; 3
     e4a:	57 d9       	rcall	.-3410   	; 0xfa <USART0_Transmit_String>
			rx = USART0_Receive();
     e4c:	64 d9       	rcall	.-3384   	; 0x116 <USART0_Receive>
     e4e:	80 93 b3 04 	sts	0x04B3, r24	; 0x8004b3 <rx>
     e52:	4f d9       	rcall	.-3426   	; 0xf2 <USART0_Transmit>
			USART0_Transmit(rx);
     e54:	80 91 b3 04 	lds	r24, 0x04B3	; 0x8004b3 <rx>
			if((rx >= '0')&&(rx <= '9')){
     e58:	80 53       	subi	r24, 0x30	; 48
     e5a:	8a 30       	cpi	r24, 0x0A	; 10
     e5c:	48 f4       	brcc	.+18     	; 0xe70 <main+0x66a>
     e5e:	80 93 b7 04 	sts	0x04B7, r24	; 0x8004b7 <get_number_2>
				get_number_2[0] = rx-48;
     e62:	88 e0       	ldi	r24, 0x08	; 8
     e64:	90 e0       	ldi	r25, 0x00	; 0
				state = 8;
     e66:	90 93 82 04 	sts	0x0482, r25	; 0x800482 <state+0x1>
     e6a:	80 93 81 04 	sts	0x0481, r24	; 0x800481 <state>
     e6e:	06 c0       	rjmp	.+12     	; 0xe7c <main+0x676>
     e70:	80 91 81 04 	lds	r24, 0x0481	; 0x800481 <state>
			}
		} // state 5 end
		if(state == 8){ // state 8
     e74:	90 91 82 04 	lds	r25, 0x0482	; 0x800482 <state+0x1>
     e78:	08 97       	sbiw	r24, 0x08	; 8
     e7a:	f1 f4       	brne	.+60     	; 0xeb8 <main+0x6b2>
			rx = USART0_Receive();
     e7c:	4c d9       	rcall	.-3432   	; 0x116 <USART0_Receive>
     e7e:	80 93 b3 04 	sts	0x04B3, r24	; 0x8004b3 <rx>
     e82:	37 d9       	rcall	.-3474   	; 0xf2 <USART0_Transmit>
			USART0_Transmit(rx);
     e84:	8b e7       	ldi	r24, 0x7B	; 123
     e86:	91 e0       	ldi	r25, 0x01	; 1
			USART0_Transmit_String("\r\n");
     e88:	38 d9       	rcall	.-3472   	; 0xfa <USART0_Transmit_String>
     e8a:	80 91 b3 04 	lds	r24, 0x04B3	; 0x8004b3 <rx>
     e8e:	80 53       	subi	r24, 0x30	; 48
			if((rx >= '0')&&(rx <= '9')){
     e90:	8a 30       	cpi	r24, 0x0A	; 10
     e92:	90 f4       	brcc	.+36     	; 0xeb8 <main+0x6b2>
     e94:	e7 eb       	ldi	r30, 0xB7	; 183
     e96:	f4 e0       	ldi	r31, 0x04	; 4
				get_number_2[1] = rx-48;
     e98:	81 83       	std	Z+1, r24	; 0x01
     e9a:	90 81       	ld	r25, Z
				get_number_2[2] = get_number_2[0]*10 + get_number_2[1];
     e9c:	99 0f       	add	r25, r25
     e9e:	29 2f       	mov	r18, r25
     ea0:	22 0f       	add	r18, r18
     ea2:	22 0f       	add	r18, r18
     ea4:	92 0f       	add	r25, r18
     ea6:	89 0f       	add	r24, r25
     ea8:	82 83       	std	Z+2, r24	; 0x02
     eaa:	89 e0       	ldi	r24, 0x09	; 9
				state = 9;
     eac:	90 e0       	ldi	r25, 0x00	; 0
     eae:	90 93 82 04 	sts	0x0482, r25	; 0x800482 <state+0x1>
     eb2:	80 93 81 04 	sts	0x0481, r24	; 0x800481 <state>
     eb6:	07 c0       	rjmp	.+14     	; 0xec6 <main+0x6c0>
     eb8:	80 91 81 04 	lds	r24, 0x0481	; 0x800481 <state>
			}
		} // state 8 end
		if(state == 9){ // state 5
     ebc:	90 91 82 04 	lds	r25, 0x0482	; 0x800482 <state+0x1>
     ec0:	09 97       	sbiw	r24, 0x09	; 9
     ec2:	09 f0       	breq	.+2      	; 0xec6 <main+0x6c0>
			temp = p2_deck[(int)get_number_1[2]].number;
     ec4:	90 c0       	rjmp	.+288    	; 0xfe6 <main+0x7e0>
     ec6:	e0 91 b6 04 	lds	r30, 0x04B6	; 0x8004b6 <get_number_1+0x2>
     eca:	f0 e0       	ldi	r31, 0x00	; 0
     ecc:	ee 0f       	add	r30, r30
     ece:	ff 1f       	adc	r31, r31
     ed0:	ee 0f       	add	r30, r30
     ed2:	ff 1f       	adc	r31, r31
     ed4:	e4 54       	subi	r30, 0x44	; 68
     ed6:	fb 4f       	sbci	r31, 0xFB	; 251
     ed8:	81 81       	ldd	r24, Z+1	; 0x01
     eda:	80 93 7e 04 	sts	0x047E, r24	; 0x80047e <temp>
			if(temp == get_number_2[2]){
     ede:	90 91 b9 04 	lds	r25, 0x04B9	; 0x8004b9 <get_number_2+0x2>
     ee2:	89 13       	cpse	r24, r25
				USART0_Transmit_String("Correct\r\n");
     ee4:	73 c0       	rjmp	.+230    	; 0xfcc <main+0x7c6>
     ee6:	80 e1       	ldi	r24, 0x10	; 16
     ee8:	93 e0       	ldi	r25, 0x03	; 3
     eea:	07 d9       	rcall	.-3570   	; 0xfa <USART0_Transmit_String>
				USART1_Transmit_String("Player 1 get your ");
     eec:	8a e1       	ldi	r24, 0x1A	; 26
     eee:	93 e0       	ldi	r25, 0x03	; 3
     ef0:	29 d9       	rcall	.-3502   	; 0x144 <USART1_Transmit_String>
     ef2:	e0 91 b6 04 	lds	r30, 0x04B6	; 0x8004b6 <get_number_1+0x2>
				if(p2_deck[(int)get_number_1[2]].color == 0) USART1_Transmit_String("Black ");
     ef6:	f0 e0       	ldi	r31, 0x00	; 0
     ef8:	ee 0f       	add	r30, r30
     efa:	ff 1f       	adc	r31, r31
     efc:	ee 0f       	add	r30, r30
     efe:	ff 1f       	adc	r31, r31
     f00:	e4 54       	subi	r30, 0x44	; 68
     f02:	fb 4f       	sbci	r31, 0xFB	; 251
     f04:	80 81       	ld	r24, Z
     f06:	81 11       	cpse	r24, r1
     f08:	04 c0       	rjmp	.+8      	; 0xf12 <main+0x70c>
     f0a:	80 e5       	ldi	r24, 0x50	; 80
     f0c:	92 e0       	ldi	r25, 0x02	; 2
     f0e:	1a d9       	rcall	.-3532   	; 0x144 <USART1_Transmit_String>
     f10:	03 c0       	rjmp	.+6      	; 0xf18 <main+0x712>
     f12:	87 e5       	ldi	r24, 0x57	; 87
     f14:	92 e0       	ldi	r25, 0x02	; 2
				else USART1_Transmit_String("White ");
     f16:	16 d9       	rcall	.-3540   	; 0x144 <USART1_Transmit_String>
     f18:	0f 2e       	mov	r0, r31
     f1a:	f4 eb       	ldi	r31, 0xB4	; 180
     f1c:	8f 2e       	mov	r8, r31
				USART_Transmit_number(1,p2_deck[(int)get_number_1[2]].number);
     f1e:	f4 e0       	ldi	r31, 0x04	; 4
     f20:	9f 2e       	mov	r9, r31
     f22:	f0 2d       	mov	r31, r0
     f24:	d4 01       	movw	r26, r8
     f26:	12 96       	adiw	r26, 0x02	; 2
     f28:	ec 91       	ld	r30, X
     f2a:	f0 e0       	ldi	r31, 0x00	; 0
     f2c:	ee 0f       	add	r30, r30
     f2e:	ff 1f       	adc	r31, r31
     f30:	ee 0f       	add	r30, r30
     f32:	ff 1f       	adc	r31, r31
     f34:	e4 54       	subi	r30, 0x44	; 68
     f36:	fb 4f       	sbci	r31, 0xFB	; 251
     f38:	61 81       	ldd	r22, Z+1	; 0x01
     f3a:	85 2d       	mov	r24, r5
     f3c:	11 d9       	rcall	.-3550   	; 0x160 <USART_Transmit_number>
     f3e:	8b e7       	ldi	r24, 0x7B	; 123
     f40:	91 e0       	ldi	r25, 0x01	; 1
     f42:	00 d9       	rcall	.-3584   	; 0x144 <USART1_Transmit_String>
     f44:	f4 01       	movw	r30, r8
				USART1_Transmit_String("\r\n");
     f46:	22 81       	ldd	r18, Z+2	; 0x02
     f48:	30 e0       	ldi	r19, 0x00	; 0
     f4a:	f9 01       	movw	r30, r18
				p2_deck[(int)get_number_1[2]].opened = 1;
     f4c:	ee 0f       	add	r30, r30
     f4e:	ff 1f       	adc	r31, r31
     f50:	ee 0f       	add	r30, r30
     f52:	ff 1f       	adc	r31, r31
     f54:	e4 54       	subi	r30, 0x44	; 68
     f56:	fb 4f       	sbci	r31, 0xFB	; 251
     f58:	53 82       	std	Z+3, r5	; 0x03
     f5a:	91 81       	ldd	r25, Z+1	; 0x01
     f5c:	f7 01       	movw	r30, r14
				for(int i=0;i<NUM_CARD;i++){
					if(deck[i].number == p2_deck[(int)get_number_1[2]].number){
     f5e:	22 0f       	add	r18, r18
     f60:	33 1f       	adc	r19, r19
						if(deck[i].color == p2_deck[(int)get_number_1[2]].color){
     f62:	22 0f       	add	r18, r18
     f64:	33 1f       	adc	r19, r19
     f66:	24 54       	subi	r18, 0x44	; 68
     f68:	3b 4f       	sbci	r19, 0xFB	; 251
     f6a:	81 81       	ldd	r24, Z+1	; 0x01
     f6c:	89 13       	cpse	r24, r25
				else USART1_Transmit_String("White ");
				USART_Transmit_number(1,p2_deck[(int)get_number_1[2]].number);
				USART1_Transmit_String("\r\n");
				p2_deck[(int)get_number_1[2]].opened = 1;
				for(int i=0;i<NUM_CARD;i++){
					if(deck[i].number == p2_deck[(int)get_number_1[2]].number){
     f6e:	06 c0       	rjmp	.+12     	; 0xf7c <main+0x776>
     f70:	40 81       	ld	r20, Z
     f72:	d9 01       	movw	r26, r18
						if(deck[i].color == p2_deck[(int)get_number_1[2]].color){
     f74:	8c 91       	ld	r24, X
     f76:	48 13       	cpse	r20, r24
     f78:	01 c0       	rjmp	.+2      	; 0xf7c <main+0x776>
     f7a:	53 82       	std	Z+3, r5	; 0x03
							deck[i].opened = 1;
     f7c:	34 96       	adiw	r30, 0x04	; 4
     f7e:	ec 17       	cp	r30, r28
				if(p2_deck[(int)get_number_1[2]].color == 0) USART1_Transmit_String("Black ");
				else USART1_Transmit_String("White ");
				USART_Transmit_number(1,p2_deck[(int)get_number_1[2]].number);
				USART1_Transmit_String("\r\n");
				p2_deck[(int)get_number_1[2]].opened = 1;
				for(int i=0;i<NUM_CARD;i++){
     f80:	fd 07       	cpc	r31, r29
     f82:	99 f7       	brne	.-26     	; 0xf6a <main+0x764>
						if(deck[i].color == p2_deck[(int)get_number_1[2]].color){
							deck[i].opened = 1;
						}
					}
				}		
				p1_corr_flag = 1;
     f84:	70 92 7d 04 	sts	0x047D, r7	; 0x80047d <p1_corr_flag>
     f88:	ef eb       	ldi	r30, 0xBF	; 191
     f8a:	f4 e0       	ldi	r31, 0x04	; 4
     f8c:	2f ee       	ldi	r18, 0xEF	; 239
				temp = 0;
				for(int i=0;i<NUM_CARD/2;i++) if(p2_deck[i].opened == 1) temp++;
     f8e:	34 e0       	ldi	r19, 0x04	; 4
     f90:	90 e0       	ldi	r25, 0x00	; 0
     f92:	80 81       	ld	r24, Z
     f94:	81 30       	cpi	r24, 0x01	; 1
     f96:	09 f4       	brne	.+2      	; 0xf9a <main+0x794>
     f98:	9f 5f       	subi	r25, 0xFF	; 255
     f9a:	34 96       	adiw	r30, 0x04	; 4
     f9c:	e2 17       	cp	r30, r18
     f9e:	f3 07       	cpc	r31, r19
     fa0:	c1 f7       	brne	.-16     	; 0xf92 <main+0x78c>
				if(p2_card_cnt == temp) state = 30;
     fa2:	90 93 7e 04 	sts	0x047E, r25	; 0x80047e <temp>
     fa6:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <p2_card_cnt>
     faa:	98 13       	cpse	r25, r24
     fac:	07 c0       	rjmp	.+14     	; 0xfbc <main+0x7b6>
     fae:	8e e1       	ldi	r24, 0x1E	; 30
     fb0:	90 e0       	ldi	r25, 0x00	; 0
     fb2:	90 93 82 04 	sts	0x0482, r25	; 0x800482 <state+0x1>
     fb6:	80 93 81 04 	sts	0x0481, r24	; 0x800481 <state>
				else{
					state = 5;
     fba:	78 c0       	rjmp	.+240    	; 0x10ac <main+0x8a6>
     fbc:	85 e0       	ldi	r24, 0x05	; 5
     fbe:	90 e0       	ldi	r25, 0x00	; 0
					showP2toP1();
     fc0:	90 93 82 04 	sts	0x0482, r25	; 0x800482 <state+0x1>
				}
			}
			else{
				USART0_Transmit_String("Wrong\r\n");
     fc4:	80 93 81 04 	sts	0x0481, r24	; 0x800481 <state>
     fc8:	38 da       	rcall	.-2960   	; 0x43a <showP2toP1>
     fca:	0d c0       	rjmp	.+26     	; 0xfe6 <main+0x7e0>
				USART1_Transmit_String("Player 1 get wrong card, It's your turn\r\n");
     fcc:	8d e2       	ldi	r24, 0x2D	; 45
     fce:	93 e0       	ldi	r25, 0x03	; 3
     fd0:	94 d8       	rcall	.-3800   	; 0xfa <USART0_Transmit_String>
     fd2:	85 e3       	ldi	r24, 0x35	; 53
				state = 16;
     fd4:	93 e0       	ldi	r25, 0x03	; 3
     fd6:	b6 d8       	rcall	.-3732   	; 0x144 <USART1_Transmit_String>
     fd8:	80 e1       	ldi	r24, 0x10	; 16
     fda:	90 e0       	ldi	r25, 0x00	; 0
     fdc:	90 93 82 04 	sts	0x0482, r25	; 0x800482 <state+0x1>
			}
			
		}
		if(state == 10){ // state 10
     fe0:	80 93 81 04 	sts	0x0481, r24	; 0x800481 <state>
     fe4:	63 c0       	rjmp	.+198    	; 0x10ac <main+0x8a6>
     fe6:	80 91 81 04 	lds	r24, 0x0481	; 0x800481 <state>
			//_delay_ms(1);
			if(p2_corr_flag == 0) USART1_Transmit_String("Choose card to open : ");
     fea:	90 91 82 04 	lds	r25, 0x0482	; 0x800482 <state+0x1>
     fee:	0a 97       	sbiw	r24, 0x0a	; 10
     ff0:	09 f0       	breq	.+2      	; 0xff4 <main+0x7ee>
     ff2:	37 c0       	rjmp	.+110    	; 0x1062 <main+0x85c>
     ff4:	80 91 7c 04 	lds	r24, 0x047C	; 0x80047c <__data_end>
     ff8:	81 11       	cpse	r24, r1
     ffa:	04 c0       	rjmp	.+8      	; 0x1004 <main+0x7fe>
			else if(p2_corr_flag == 1) USART1_Transmit_String("Choose card to open, Press p to pass : "); // 몇 번째에 있는 카드 선택인지
     ffc:	8a e7       	ldi	r24, 0x7A	; 122
     ffe:	92 e0       	ldi	r25, 0x02	; 2
    1000:	a1 d8       	rcall	.-3774   	; 0x144 <USART1_Transmit_String>
    1002:	05 c0       	rjmp	.+10     	; 0x100e <main+0x808>
    1004:	81 30       	cpi	r24, 0x01	; 1
    1006:	19 f4       	brne	.+6      	; 0x100e <main+0x808>
			USART0_Transmit_String("Player 2 is checking your card\r\n");
    1008:	81 e9       	ldi	r24, 0x91	; 145
    100a:	92 e0       	ldi	r25, 0x02	; 2
    100c:	9b d8       	rcall	.-3786   	; 0x144 <USART1_Transmit_String>
    100e:	8f e5       	ldi	r24, 0x5F	; 95
			rx = USART1_Receive();
    1010:	93 e0       	ldi	r25, 0x03	; 3
    1012:	73 d8       	rcall	.-3866   	; 0xfa <USART0_Transmit_String>
    1014:	f0 db       	rcall	.-2080   	; 0x7f6 <USART1_Receive>
    1016:	80 93 b3 04 	sts	0x04B3, r24	; 0x8004b3 <rx>
			USART1_Transmit(rx);
    101a:	8c d8       	rcall	.-3816   	; 0x134 <USART1_Transmit>
			if((rx >= '0')&&(rx <= '9')){
    101c:	90 91 b3 04 	lds	r25, 0x04B3	; 0x8004b3 <rx>
    1020:	80 ed       	ldi	r24, 0xD0	; 208
    1022:	89 0f       	add	r24, r25
    1024:	8a 30       	cpi	r24, 0x0A	; 10
				get_number_1[0] = rx-48;
				state = 11;
    1026:	40 f4       	brcc	.+16     	; 0x1038 <main+0x832>
    1028:	80 93 b4 04 	sts	0x04B4, r24	; 0x8004b4 <get_number_1>
    102c:	2b e0       	ldi	r18, 0x0B	; 11
    102e:	30 e0       	ldi	r19, 0x00	; 0
    1030:	30 93 82 04 	sts	0x0482, r19	; 0x800482 <state+0x1>
			}
			if(p2_corr_flag == 1 && rx == 'p'){
    1034:	20 93 81 04 	sts	0x0481, r18	; 0x800481 <state>
    1038:	80 91 7c 04 	lds	r24, 0x047C	; 0x80047c <__data_end>
    103c:	81 30       	cpi	r24, 0x01	; 1
				USART1_Transmit_String("\r\n");
    103e:	79 f4       	brne	.+30     	; 0x105e <main+0x858>
    1040:	90 37       	cpi	r25, 0x70	; 112
    1042:	69 f4       	brne	.+26     	; 0x105e <main+0x858>
    1044:	8b e7       	ldi	r24, 0x7B	; 123
				USART1_Transmit_String("Passed\r\n");
    1046:	91 e0       	ldi	r25, 0x01	; 1
    1048:	7d d8       	rcall	.-3846   	; 0x144 <USART1_Transmit_String>
    104a:	8a ed       	ldi	r24, 0xDA	; 218
    104c:	92 e0       	ldi	r25, 0x02	; 2
				USART0_Transmit_String("Player 2 passed, It's your turn\r\n");
    104e:	7a d8       	rcall	.-3852   	; 0x144 <USART1_Transmit_String>
    1050:	80 e8       	ldi	r24, 0x80	; 128
    1052:	93 e0       	ldi	r25, 0x03	; 3
				state = 15;
    1054:	52 d8       	rcall	.-3932   	; 0xfa <USART0_Transmit_String>
    1056:	d0 92 82 04 	sts	0x0482, r13	; 0x800482 <state+0x1>
			}
			p2_corr_flag = 0;
    105a:	c0 92 81 04 	sts	0x0481, r12	; 0x800481 <state>
		} // state 10 end
		if(state == 11){ // state 11
    105e:	10 92 7c 04 	sts	0x047C, r1	; 0x80047c <__data_end>
    1062:	80 91 81 04 	lds	r24, 0x0481	; 0x800481 <state>
    1066:	90 91 82 04 	lds	r25, 0x0482	; 0x800482 <state+0x1>
			rx = USART1_Receive();
    106a:	0b 97       	sbiw	r24, 0x0b	; 11
    106c:	f9 f4       	brne	.+62     	; 0x10ac <main+0x8a6>
    106e:	c3 db       	rcall	.-2170   	; 0x7f6 <USART1_Receive>
			USART1_Transmit(rx);
    1070:	80 93 b3 04 	sts	0x04B3, r24	; 0x8004b3 <rx>
			USART1_Transmit_String("\r\n");
    1074:	5f d8       	rcall	.-3906   	; 0x134 <USART1_Transmit>
    1076:	8b e7       	ldi	r24, 0x7B	; 123
    1078:	91 e0       	ldi	r25, 0x01	; 1
    107a:	64 d8       	rcall	.-3896   	; 0x144 <USART1_Transmit_String>
			if((rx >= '0')&&(rx <= '9')){
    107c:	80 91 b3 04 	lds	r24, 0x04B3	; 0x8004b3 <rx>
    1080:	80 53       	subi	r24, 0x30	; 48
    1082:	8a 30       	cpi	r24, 0x0A	; 10
    1084:	98 f4       	brcc	.+38     	; 0x10ac <main+0x8a6>
				get_number_1[1] = rx-48;
    1086:	e4 eb       	ldi	r30, 0xB4	; 180
    1088:	f4 e0       	ldi	r31, 0x04	; 4
    108a:	81 83       	std	Z+1, r24	; 0x01
				get_number_1[2] = get_number_1[0]*10 + get_number_1[1] - 1;
    108c:	90 81       	ld	r25, Z
    108e:	99 0f       	add	r25, r25
    1090:	29 2f       	mov	r18, r25
    1092:	22 0f       	add	r18, r18
    1094:	22 0f       	add	r18, r18
    1096:	92 0f       	add	r25, r18
    1098:	89 0f       	add	r24, r25
    109a:	81 50       	subi	r24, 0x01	; 1
    109c:	82 83       	std	Z+2, r24	; 0x02
				//_delay_ms(1);
				state = 12;
    109e:	8c e0       	ldi	r24, 0x0C	; 12
    10a0:	90 e0       	ldi	r25, 0x00	; 0
    10a2:	90 93 82 04 	sts	0x0482, r25	; 0x800482 <state+0x1>
    10a6:	80 93 81 04 	sts	0x0481, r24	; 0x800481 <state>
    10aa:	06 c0       	rjmp	.+12     	; 0x10b8 <main+0x8b2>
			}
		} // state 11 end
		if(state == 12){ // state 12
    10ac:	80 91 81 04 	lds	r24, 0x0481	; 0x800481 <state>
    10b0:	90 91 82 04 	lds	r25, 0x0482	; 0x800482 <state+0x1>
    10b4:	0c 97       	sbiw	r24, 0x0c	; 12
    10b6:	a9 f4       	brne	.+42     	; 0x10e2 <main+0x8dc>
			USART1_Transmit_String("Number? : "); // 카드가 무엇인지
    10b8:	85 e0       	ldi	r24, 0x05	; 5
    10ba:	93 e0       	ldi	r25, 0x03	; 3
    10bc:	43 d8       	rcall	.-3962   	; 0x144 <USART1_Transmit_String>
    10be:	9b db       	rcall	.-2250   	; 0x7f6 <USART1_Receive>
			rx = USART1_Receive();
    10c0:	80 93 b3 04 	sts	0x04B3, r24	; 0x8004b3 <rx>
    10c4:	37 d8       	rcall	.-3986   	; 0x134 <USART1_Transmit>
    10c6:	80 91 b3 04 	lds	r24, 0x04B3	; 0x8004b3 <rx>
			USART1_Transmit(rx);
    10ca:	80 53       	subi	r24, 0x30	; 48
			if((rx >= '0')&&(rx <= '9')){
    10cc:	8a 30       	cpi	r24, 0x0A	; 10
    10ce:	48 f4       	brcc	.+18     	; 0x10e2 <main+0x8dc>
    10d0:	80 93 b7 04 	sts	0x04B7, r24	; 0x8004b7 <get_number_2>
    10d4:	8d e0       	ldi	r24, 0x0D	; 13
				get_number_2[0] = rx-48;
    10d6:	90 e0       	ldi	r25, 0x00	; 0
    10d8:	90 93 82 04 	sts	0x0482, r25	; 0x800482 <state+0x1>
				state = 13;
    10dc:	80 93 81 04 	sts	0x0481, r24	; 0x800481 <state>
    10e0:	06 c0       	rjmp	.+12     	; 0x10ee <main+0x8e8>
    10e2:	80 91 81 04 	lds	r24, 0x0481	; 0x800481 <state>
    10e6:	90 91 82 04 	lds	r25, 0x0482	; 0x800482 <state+0x1>
			}
		} // state 12 end
		if(state == 13){ // state 13
    10ea:	0d 97       	sbiw	r24, 0x0d	; 13
    10ec:	f1 f4       	brne	.+60     	; 0x112a <__stack+0x2b>
    10ee:	83 db       	rcall	.-2298   	; 0x7f6 <USART1_Receive>
    10f0:	80 93 b3 04 	sts	0x04B3, r24	; 0x8004b3 <rx>
			rx = USART1_Receive();
    10f4:	1f d8       	rcall	.-4034   	; 0x134 <USART1_Transmit>
    10f6:	8b e7       	ldi	r24, 0x7B	; 123
    10f8:	91 e0       	ldi	r25, 0x01	; 1
    10fa:	24 d8       	rcall	.-4024   	; 0x144 <USART1_Transmit_String>
			USART1_Transmit(rx);
    10fc:	80 91 b3 04 	lds	r24, 0x04B3	; 0x8004b3 <rx>
			USART1_Transmit_String("\r\n");
    1100:	80 53       	subi	r24, 0x30	; 48
    1102:	8a 30       	cpi	r24, 0x0A	; 10
    1104:	90 f4       	brcc	.+36     	; 0x112a <__stack+0x2b>
    1106:	e7 eb       	ldi	r30, 0xB7	; 183
			if((rx >= '0')&&(rx <= '9')){
    1108:	f4 e0       	ldi	r31, 0x04	; 4
    110a:	81 83       	std	Z+1, r24	; 0x01
    110c:	90 81       	ld	r25, Z
    110e:	99 0f       	add	r25, r25
    1110:	29 2f       	mov	r18, r25
				get_number_2[1] = rx-48;
    1112:	22 0f       	add	r18, r18
    1114:	22 0f       	add	r18, r18
    1116:	92 0f       	add	r25, r18
				get_number_2[2] = get_number_2[0]*10 + get_number_2[1];
    1118:	89 0f       	add	r24, r25
    111a:	82 83       	std	Z+2, r24	; 0x02
    111c:	8e e0       	ldi	r24, 0x0E	; 14
    111e:	90 e0       	ldi	r25, 0x00	; 0
    1120:	90 93 82 04 	sts	0x0482, r25	; 0x800482 <state+0x1>
    1124:	80 93 81 04 	sts	0x0481, r24	; 0x800481 <state>
				state = 14;
    1128:	08 c0       	rjmp	.+16     	; 0x113a <__stack+0x3b>
    112a:	80 91 81 04 	lds	r24, 0x0481	; 0x800481 <state>
    112e:	90 91 82 04 	lds	r25, 0x0482	; 0x800482 <state+0x1>
    1132:	8e 30       	cpi	r24, 0x0E	; 14
    1134:	91 05       	cpc	r25, r1
			}
		} // state 13 end
		if(state == 14){ // state 14
    1136:	09 f0       	breq	.+2      	; 0x113a <__stack+0x3b>
    1138:	96 c0       	rjmp	.+300    	; 0x1266 <__stack+0x167>
    113a:	e0 91 b6 04 	lds	r30, 0x04B6	; 0x8004b6 <get_number_1+0x2>
    113e:	f0 e0       	ldi	r31, 0x00	; 0
    1140:	ee 0f       	add	r30, r30
    1142:	ff 1f       	adc	r31, r31
    1144:	ee 0f       	add	r30, r30
			temp = p1_deck[(int)get_number_1[2]].number;
    1146:	ff 1f       	adc	r31, r31
    1148:	ed 57       	subi	r30, 0x7D	; 125
    114a:	fb 4f       	sbci	r31, 0xFB	; 251
    114c:	81 81       	ldd	r24, Z+1	; 0x01
    114e:	80 93 7e 04 	sts	0x047E, r24	; 0x80047e <temp>
    1152:	90 91 b9 04 	lds	r25, 0x04B9	; 0x8004b9 <get_number_2+0x2>
    1156:	89 13       	cpse	r24, r25
    1158:	79 c0       	rjmp	.+242    	; 0x124c <__stack+0x14d>
    115a:	80 e1       	ldi	r24, 0x10	; 16
    115c:	93 e0       	ldi	r25, 0x03	; 3
			if(temp == get_number_2[2]){
    115e:	0e 94 a2 00 	call	0x144	; 0x144 <USART1_Transmit_String>
    1162:	82 ea       	ldi	r24, 0xA2	; 162
    1164:	93 e0       	ldi	r25, 0x03	; 3
				USART1_Transmit_String("Correct\r\n");
    1166:	0e 94 7d 00 	call	0xfa	; 0xfa <USART0_Transmit_String>
    116a:	e0 91 b6 04 	lds	r30, 0x04B6	; 0x8004b6 <get_number_1+0x2>
				USART0_Transmit_String("Player 2 get your ");
    116e:	f0 e0       	ldi	r31, 0x00	; 0
    1170:	ee 0f       	add	r30, r30
    1172:	ff 1f       	adc	r31, r31
    1174:	ee 0f       	add	r30, r30
				if(p1_deck[(int)get_number_1[2]].color == 0) USART0_Transmit_String("Black ");
    1176:	ff 1f       	adc	r31, r31
    1178:	ed 57       	subi	r30, 0x7D	; 125
    117a:	fb 4f       	sbci	r31, 0xFB	; 251
    117c:	80 81       	ld	r24, Z
    117e:	81 11       	cpse	r24, r1
    1180:	05 c0       	rjmp	.+10     	; 0x118c <__stack+0x8d>
    1182:	80 e5       	ldi	r24, 0x50	; 80
    1184:	92 e0       	ldi	r25, 0x02	; 2
    1186:	0e 94 7d 00 	call	0xfa	; 0xfa <USART0_Transmit_String>
    118a:	04 c0       	rjmp	.+8      	; 0x1194 <__stack+0x95>
    118c:	87 e5       	ldi	r24, 0x57	; 87
    118e:	92 e0       	ldi	r25, 0x02	; 2
    1190:	0e 94 7d 00 	call	0xfa	; 0xfa <USART0_Transmit_String>
    1194:	0f 2e       	mov	r0, r31
    1196:	f4 eb       	ldi	r31, 0xB4	; 180
				else USART0_Transmit_String("White ");
    1198:	8f 2e       	mov	r8, r31
    119a:	f4 e0       	ldi	r31, 0x04	; 4
    119c:	9f 2e       	mov	r9, r31
    119e:	f0 2d       	mov	r31, r0
				USART_Transmit_number(0,p1_deck[(int)get_number_1[2]].number);
    11a0:	d4 01       	movw	r26, r8
    11a2:	12 96       	adiw	r26, 0x02	; 2
    11a4:	ec 91       	ld	r30, X
    11a6:	f0 e0       	ldi	r31, 0x00	; 0
    11a8:	ee 0f       	add	r30, r30
    11aa:	ff 1f       	adc	r31, r31
    11ac:	ee 0f       	add	r30, r30
    11ae:	ff 1f       	adc	r31, r31
    11b0:	ed 57       	subi	r30, 0x7D	; 125
    11b2:	fb 4f       	sbci	r31, 0xFB	; 251
    11b4:	61 81       	ldd	r22, Z+1	; 0x01
    11b6:	80 e0       	ldi	r24, 0x00	; 0
    11b8:	0e 94 b0 00 	call	0x160	; 0x160 <USART_Transmit_number>
    11bc:	8b e7       	ldi	r24, 0x7B	; 123
    11be:	91 e0       	ldi	r25, 0x01	; 1
    11c0:	0e 94 7d 00 	call	0xfa	; 0xfa <USART0_Transmit_String>
    11c4:	f4 01       	movw	r30, r8
				USART0_Transmit_String("\r\n");
    11c6:	22 81       	ldd	r18, Z+2	; 0x02
    11c8:	30 e0       	ldi	r19, 0x00	; 0
    11ca:	f9 01       	movw	r30, r18
    11cc:	ee 0f       	add	r30, r30
				p1_deck[(int)get_number_1[2]].opened = 1;
    11ce:	ff 1f       	adc	r31, r31
    11d0:	ee 0f       	add	r30, r30
    11d2:	ff 1f       	adc	r31, r31
    11d4:	ed 57       	subi	r30, 0x7D	; 125
    11d6:	fb 4f       	sbci	r31, 0xFB	; 251
    11d8:	53 82       	std	Z+3, r5	; 0x03
    11da:	91 81       	ldd	r25, Z+1	; 0x01
    11dc:	f7 01       	movw	r30, r14
    11de:	22 0f       	add	r18, r18
    11e0:	33 1f       	adc	r19, r19
    11e2:	22 0f       	add	r18, r18
				for(int i=0;i<NUM_CARD;i++){
					if(deck[i].number == p1_deck[(int)get_number_1[2]].number){
    11e4:	33 1f       	adc	r19, r19
    11e6:	2d 57       	subi	r18, 0x7D	; 125
						if(deck[i].color == p1_deck[(int)get_number_1[2]].color){
    11e8:	3b 4f       	sbci	r19, 0xFB	; 251
    11ea:	81 81       	ldd	r24, Z+1	; 0x01
    11ec:	89 13       	cpse	r24, r25
    11ee:	06 c0       	rjmp	.+12     	; 0x11fc <__stack+0xfd>
    11f0:	40 81       	ld	r20, Z
    11f2:	d9 01       	movw	r26, r18
				else USART0_Transmit_String("White ");
				USART_Transmit_number(0,p1_deck[(int)get_number_1[2]].number);
				USART0_Transmit_String("\r\n");
				p1_deck[(int)get_number_1[2]].opened = 1;
				for(int i=0;i<NUM_CARD;i++){
					if(deck[i].number == p1_deck[(int)get_number_1[2]].number){
    11f4:	8c 91       	ld	r24, X
    11f6:	48 13       	cpse	r20, r24
    11f8:	01 c0       	rjmp	.+2      	; 0x11fc <__stack+0xfd>
						if(deck[i].color == p1_deck[(int)get_number_1[2]].color){
    11fa:	53 82       	std	Z+3, r5	; 0x03
    11fc:	34 96       	adiw	r30, 0x04	; 4
    11fe:	ec 17       	cp	r30, r28
    1200:	fd 07       	cpc	r31, r29
    1202:	99 f7       	brne	.-26     	; 0x11ea <__stack+0xeb>
							deck[i].opened = 1;
    1204:	70 92 7c 04 	sts	0x047C, r7	; 0x80047c <__data_end>
				if(p1_deck[(int)get_number_1[2]].color == 0) USART0_Transmit_String("Black ");
				else USART0_Transmit_String("White ");
				USART_Transmit_number(0,p1_deck[(int)get_number_1[2]].number);
				USART0_Transmit_String("\r\n");
				p1_deck[(int)get_number_1[2]].opened = 1;
				for(int i=0;i<NUM_CARD;i++){
    1208:	e6 e8       	ldi	r30, 0x86	; 134
    120a:	f4 e0       	ldi	r31, 0x04	; 4
    120c:	26 eb       	ldi	r18, 0xB6	; 182
						if(deck[i].color == p1_deck[(int)get_number_1[2]].color){
							deck[i].opened = 1;
						}
					}
				}
				p2_corr_flag = 1;
    120e:	34 e0       	ldi	r19, 0x04	; 4
    1210:	90 e0       	ldi	r25, 0x00	; 0
    1212:	80 81       	ld	r24, Z
    1214:	81 30       	cpi	r24, 0x01	; 1
    1216:	09 f4       	brne	.+2      	; 0x121a <__stack+0x11b>
    1218:	9f 5f       	subi	r25, 0xFF	; 255
    121a:	34 96       	adiw	r30, 0x04	; 4
				temp = 0;
				for(int i=0;i<NUM_CARD/2;i++) if(p1_deck[i].opened == 1) temp++;
    121c:	e2 17       	cp	r30, r18
    121e:	f3 07       	cpc	r31, r19
    1220:	c1 f7       	brne	.-16     	; 0x1212 <__stack+0x113>
    1222:	90 93 7e 04 	sts	0x047E, r25	; 0x80047e <temp>
    1226:	80 91 80 04 	lds	r24, 0x0480	; 0x800480 <p1_card_cnt>
    122a:	98 13       	cpse	r25, r24
    122c:	07 c0       	rjmp	.+14     	; 0x123c <__stack+0x13d>
    122e:	8f e1       	ldi	r24, 0x1F	; 31
				if(p1_card_cnt == temp) state = 31;
    1230:	90 e0       	ldi	r25, 0x00	; 0
    1232:	90 93 82 04 	sts	0x0482, r25	; 0x800482 <state+0x1>
    1236:	80 93 81 04 	sts	0x0481, r24	; 0x800481 <state>
    123a:	2c c0       	rjmp	.+88     	; 0x1294 <__stack+0x195>
    123c:	44 da       	rcall	.-2936   	; 0x6c6 <showP1toP2>
    123e:	8a e0       	ldi	r24, 0x0A	; 10
    1240:	90 e0       	ldi	r25, 0x00	; 0
    1242:	90 93 82 04 	sts	0x0482, r25	; 0x800482 <state+0x1>
				else{
					showP1toP2();
    1246:	80 93 81 04 	sts	0x0481, r24	; 0x800481 <state>
					state = 10;
    124a:	53 cb       	rjmp	.-2394   	; 0x8f2 <main+0xec>
    124c:	8d e2       	ldi	r24, 0x2D	; 45
    124e:	93 e0       	ldi	r25, 0x03	; 3
    1250:	0e 94 a2 00 	call	0x144	; 0x144 <USART1_Transmit_String>
    1254:	85 eb       	ldi	r24, 0xB5	; 181
    1256:	93 e0       	ldi	r25, 0x03	; 3
				}
			}
			else{
				USART1_Transmit_String("Wrong\r\n");
    1258:	0e 94 7d 00 	call	0xfa	; 0xfa <USART0_Transmit_String>
    125c:	d0 92 82 04 	sts	0x0482, r13	; 0x800482 <state+0x1>
				USART0_Transmit_String("Player 2 get wrong card, It's your turn\r\n");
    1260:	c0 92 81 04 	sts	0x0481, r12	; 0x800481 <state>
    1264:	46 cb       	rjmp	.-2420   	; 0x8f2 <main+0xec>
    1266:	8e 31       	cpi	r24, 0x1E	; 30
				state = 15;
    1268:	91 05       	cpc	r25, r1
    126a:	89 f4       	brne	.+34     	; 0x128e <__stack+0x18f>
    126c:	8f eb       	ldi	r24, 0xBF	; 191
    126e:	91 e0       	ldi	r25, 0x01	; 1
    1270:	0e 94 7d 00 	call	0xfa	; 0xfa <USART0_Transmit_String>
			}
			
		}
		if(state == 30){
    1274:	8f eb       	ldi	r24, 0xBF	; 191
    1276:	91 e0       	ldi	r25, 0x01	; 1
			USART0_Transmit_String("--------------------------------------------------------------------\r\n");
    1278:	0e 94 a2 00 	call	0x144	; 0x144 <USART1_Transmit_String>
    127c:	8f ed       	ldi	r24, 0xDF	; 223
    127e:	93 e0       	ldi	r25, 0x03	; 3
			USART1_Transmit_String("--------------------------------------------------------------------\r\n");
    1280:	0e 94 7d 00 	call	0xfa	; 0xfa <USART0_Transmit_String>
    1284:	8f ed       	ldi	r24, 0xDF	; 223
    1286:	93 e0       	ldi	r25, 0x03	; 3
			USART0_Transmit_String("************** P1 Win **************\r\n************** P2 Lose **************\r\n");
    1288:	0e 94 a2 00 	call	0x144	; 0x144 <USART1_Transmit_String>
    128c:	18 c0       	rjmp	.+48     	; 0x12be <__stack+0x1bf>
    128e:	4f 97       	sbiw	r24, 0x1f	; 31
			USART1_Transmit_String("************** P1 Win **************\r\n************** P2 Lose **************\r\n");
    1290:	09 f0       	breq	.+2      	; 0x1294 <__stack+0x195>
    1292:	2f cb       	rjmp	.-2466   	; 0x8f2 <main+0xec>
    1294:	8f eb       	ldi	r24, 0xBF	; 191
    1296:	91 e0       	ldi	r25, 0x01	; 1
			break;
    1298:	0e 94 7d 00 	call	0xfa	; 0xfa <USART0_Transmit_String>
		}
		if(state == 31){
    129c:	8f eb       	ldi	r24, 0xBF	; 191
    129e:	91 e0       	ldi	r25, 0x01	; 1
			USART0_Transmit_String("--------------------------------------------------------------------\r\n");
    12a0:	0e 94 a2 00 	call	0x144	; 0x144 <USART1_Transmit_String>
    12a4:	8d e2       	ldi	r24, 0x2D	; 45
    12a6:	94 e0       	ldi	r25, 0x04	; 4
			USART1_Transmit_String("--------------------------------------------------------------------\r\n");
    12a8:	0e 94 7d 00 	call	0xfa	; 0xfa <USART0_Transmit_String>
    12ac:	8d e2       	ldi	r24, 0x2D	; 45
    12ae:	94 e0       	ldi	r25, 0x04	; 4
			USART0_Transmit_String("************** P2 Win **************\r\n************** P1 Lose **************\r\n");
    12b0:	0e 94 a2 00 	call	0x144	; 0x144 <USART1_Transmit_String>
    12b4:	04 c0       	rjmp	.+8      	; 0x12be <__stack+0x1bf>
    12b6:	90 37       	cpi	r25, 0x70	; 112
			USART1_Transmit_String("************** P2 Win **************\r\n************** P1 Lose **************\r\n");
    12b8:	09 f0       	breq	.+2      	; 0x12bc <__stack+0x1bd>
    12ba:	9e cd       	rjmp	.-1220   	; 0xdf8 <main+0x5f2>
    12bc:	87 cd       	rjmp	.-1266   	; 0xdcc <main+0x5c6>
    12be:	80 e0       	ldi	r24, 0x00	; 0
    12c0:	90 e0       	ldi	r25, 0x00	; 0
			USART0_Transmit(rx);
			if((rx >= '0')&&(rx <= '9')){
				get_number_1[0] = rx-48;
				state = 6;	
			}
			if(p1_corr_flag == 1 && rx == 'p'){
    12c2:	df 91       	pop	r29
    12c4:	cf 91       	pop	r28
    12c6:	1f 91       	pop	r17
    12c8:	0f 91       	pop	r16
			USART0_Transmit_String("************** P2 Win **************\r\n************** P1 Lose **************\r\n");
			USART1_Transmit_String("************** P2 Win **************\r\n************** P1 Lose **************\r\n");
			break;
		}
    } // while end
} // main end
    12ca:	ff 90       	pop	r15
    12cc:	ef 90       	pop	r14
    12ce:	df 90       	pop	r13
    12d0:	cf 90       	pop	r12
    12d2:	bf 90       	pop	r11
    12d4:	af 90       	pop	r10
    12d6:	9f 90       	pop	r9
    12d8:	8f 90       	pop	r8
    12da:	7f 90       	pop	r7
    12dc:	5f 90       	pop	r5
    12de:	4f 90       	pop	r4
    12e0:	3f 90       	pop	r3
    12e2:	2f 90       	pop	r2
    12e4:	08 95       	ret

000012e6 <__divmodhi4>:
    12e6:	97 fb       	bst	r25, 7
    12e8:	07 2e       	mov	r0, r23
    12ea:	16 f4       	brtc	.+4      	; 0x12f0 <__divmodhi4+0xa>
    12ec:	00 94       	com	r0
    12ee:	06 d0       	rcall	.+12     	; 0x12fc <__divmodhi4_neg1>
    12f0:	77 fd       	sbrc	r23, 7
    12f2:	08 d0       	rcall	.+16     	; 0x1304 <__divmodhi4_neg2>
    12f4:	0b d0       	rcall	.+22     	; 0x130c <__udivmodhi4>
    12f6:	07 fc       	sbrc	r0, 7
    12f8:	05 d0       	rcall	.+10     	; 0x1304 <__divmodhi4_neg2>
    12fa:	3e f4       	brtc	.+14     	; 0x130a <__divmodhi4_exit>

000012fc <__divmodhi4_neg1>:
    12fc:	90 95       	com	r25
    12fe:	81 95       	neg	r24
    1300:	9f 4f       	sbci	r25, 0xFF	; 255
    1302:	08 95       	ret

00001304 <__divmodhi4_neg2>:
    1304:	70 95       	com	r23
    1306:	61 95       	neg	r22
    1308:	7f 4f       	sbci	r23, 0xFF	; 255

0000130a <__divmodhi4_exit>:
    130a:	08 95       	ret

0000130c <__udivmodhi4>:
    130c:	aa 1b       	sub	r26, r26
    130e:	bb 1b       	sub	r27, r27
    1310:	51 e1       	ldi	r21, 0x11	; 17
    1312:	07 c0       	rjmp	.+14     	; 0x1322 <__udivmodhi4_ep>

00001314 <__udivmodhi4_loop>:
    1314:	aa 1f       	adc	r26, r26
    1316:	bb 1f       	adc	r27, r27
    1318:	a6 17       	cp	r26, r22
    131a:	b7 07       	cpc	r27, r23
    131c:	10 f0       	brcs	.+4      	; 0x1322 <__udivmodhi4_ep>
    131e:	a6 1b       	sub	r26, r22
    1320:	b7 0b       	sbc	r27, r23

00001322 <__udivmodhi4_ep>:
    1322:	88 1f       	adc	r24, r24
    1324:	99 1f       	adc	r25, r25
    1326:	5a 95       	dec	r21
    1328:	a9 f7       	brne	.-22     	; 0x1314 <__udivmodhi4_loop>
    132a:	80 95       	com	r24
    132c:	90 95       	com	r25
    132e:	bc 01       	movw	r22, r24
    1330:	cd 01       	movw	r24, r26
    1332:	08 95       	ret

00001334 <_exit>:
    1334:	f8 94       	cli

00001336 <__stop_program>:
    1336:	ff cf       	rjmp	.-2      	; 0x1336 <__stop_program>
