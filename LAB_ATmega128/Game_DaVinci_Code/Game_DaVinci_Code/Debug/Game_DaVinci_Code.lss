
Game_DaVinci_Code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000382  00800100  00001332  000013c6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001332  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000d0  00800482  00800482  00001748  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001748  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001778  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  000017b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002311  00000000  00000000  00001844  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008b3  00000000  00000000  00003b55  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001151  00000000  00000000  00004408  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001cc  00000000  00000000  0000555c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000583  00000000  00000000  00005728  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d0c  00000000  00000000  00005cab  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  000069b7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	61 c0       	rjmp	.+194    	; 0xc8 <__bad_interrupt>
       6:	00 00       	nop
       8:	5f c0       	rjmp	.+190    	; 0xc8 <__bad_interrupt>
       a:	00 00       	nop
       c:	5d c0       	rjmp	.+186    	; 0xc8 <__bad_interrupt>
       e:	00 00       	nop
      10:	5b c0       	rjmp	.+182    	; 0xc8 <__bad_interrupt>
      12:	00 00       	nop
      14:	59 c0       	rjmp	.+178    	; 0xc8 <__bad_interrupt>
      16:	00 00       	nop
      18:	57 c0       	rjmp	.+174    	; 0xc8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	55 c0       	rjmp	.+170    	; 0xc8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	53 c0       	rjmp	.+166    	; 0xc8 <__bad_interrupt>
      22:	00 00       	nop
      24:	51 c0       	rjmp	.+162    	; 0xc8 <__bad_interrupt>
      26:	00 00       	nop
      28:	4f c0       	rjmp	.+158    	; 0xc8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4d c0       	rjmp	.+154    	; 0xc8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4b c0       	rjmp	.+150    	; 0xc8 <__bad_interrupt>
      32:	00 00       	nop
      34:	49 c0       	rjmp	.+146    	; 0xc8 <__bad_interrupt>
      36:	00 00       	nop
      38:	47 c0       	rjmp	.+142    	; 0xc8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	45 c0       	rjmp	.+138    	; 0xc8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	43 c0       	rjmp	.+134    	; 0xc8 <__bad_interrupt>
      42:	00 00       	nop
      44:	41 c0       	rjmp	.+130    	; 0xc8 <__bad_interrupt>
      46:	00 00       	nop
      48:	3f c0       	rjmp	.+126    	; 0xc8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3d c0       	rjmp	.+122    	; 0xc8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3b c0       	rjmp	.+118    	; 0xc8 <__bad_interrupt>
      52:	00 00       	nop
      54:	39 c0       	rjmp	.+114    	; 0xc8 <__bad_interrupt>
      56:	00 00       	nop
      58:	37 c0       	rjmp	.+110    	; 0xc8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	35 c0       	rjmp	.+106    	; 0xc8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	33 c0       	rjmp	.+102    	; 0xc8 <__bad_interrupt>
      62:	00 00       	nop
      64:	31 c0       	rjmp	.+98     	; 0xc8 <__bad_interrupt>
      66:	00 00       	nop
      68:	2f c0       	rjmp	.+94     	; 0xc8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2d c0       	rjmp	.+90     	; 0xc8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2b c0       	rjmp	.+86     	; 0xc8 <__bad_interrupt>
      72:	00 00       	nop
      74:	29 c0       	rjmp	.+82     	; 0xc8 <__bad_interrupt>
      76:	00 00       	nop
      78:	27 c0       	rjmp	.+78     	; 0xc8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	25 c0       	rjmp	.+74     	; 0xc8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	23 c0       	rjmp	.+70     	; 0xc8 <__bad_interrupt>
      82:	00 00       	nop
      84:	21 c0       	rjmp	.+66     	; 0xc8 <__bad_interrupt>
      86:	00 00       	nop
      88:	1f c0       	rjmp	.+62     	; 0xc8 <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e1       	ldi	r29, 0x10	; 16
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	14 e0       	ldi	r17, 0x04	; 4
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e2 e3       	ldi	r30, 0x32	; 50
      a0:	f3 e1       	ldi	r31, 0x13	; 19
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a2 38       	cpi	r26, 0x82	; 130
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	25 e0       	ldi	r18, 0x05	; 5
      b4:	a2 e8       	ldi	r26, 0x82	; 130
      b6:	b4 e0       	ldi	r27, 0x04	; 4
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a2 35       	cpi	r26, 0x52	; 82
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	95 d3       	rcall	.+1834   	; 0x7ee <main>
      c4:	0c 94 97 09 	jmp	0x132e	; 0x132e <_exit>

000000c8 <__bad_interrupt>:
      c8:	9b cf       	rjmp	.-202    	; 0x0 <__vectors>

000000ca <Timer_Init>:
/*******************************************************************/
/*                         Timer Functions                         */
/*******************************************************************/

void Timer_Init(){
	TCCR0 = (1<<CS0);
      ca:	81 e0       	ldi	r24, 0x01	; 1
      cc:	83 bf       	out	0x33, r24	; 51
	TIMSK = (1<<TOIE0);
      ce:	87 bf       	out	0x37, r24	; 55
	TCNT0 = 0;
      d0:	12 be       	out	0x32, r1	; 50
	TCCR2 = (1<<CS20)|(1<<CS21)|(0<<CS22); // prescale 64
      d2:	83 e0       	ldi	r24, 0x03	; 3
      d4:	85 bd       	out	0x25, r24	; 37
	TIMSK = (1<<TOIE2);
      d6:	80 e4       	ldi	r24, 0x40	; 64
      d8:	87 bf       	out	0x37, r24	; 55
	TCNT2 = 93;
      da:	8d e5       	ldi	r24, 0x5D	; 93
      dc:	84 bd       	out	0x24, r24	; 36
      de:	08 95       	ret

000000e0 <USART0_Init>:
/*******************************************************************/
/*                         USART Functions                         */
/*******************************************************************/

void USART0_Init(unsigned int ubrr){ // Set USART0 Registers
	UBRR0H = (unsigned char)(ubrr >> 8); // UBRR's High bits
      e0:	90 93 90 00 	sts	0x0090, r25	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	UBRR0L = (unsigned char)(ubrr);		 // UBRR;s Low bits -> UBRR : 103
      e4:	89 b9       	out	0x09, r24	; 9
	UCSR0B = (1<<RXEN0) | (1<<TXEN0); // Receive Enable, Transmit Enable
      e6:	88 e1       	ldi	r24, 0x18	; 24
      e8:	8a b9       	out	0x0a, r24	; 10
	UCSR0C = (1<<UCSZ00) | (1<<UCSZ01);			// Set Data bits to 8 bits
      ea:	86 e0       	ldi	r24, 0x06	; 6
      ec:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
      f0:	08 95       	ret

000000f2 <USART0_Transmit>:
}

void USART0_Transmit(char data){
	while(!((UCSR0A)  & (1<<UDRE0))); // Wait for Data Register empty
      f2:	5d 9b       	sbis	0x0b, 5	; 11
      f4:	fe cf       	rjmp	.-4      	; 0xf2 <USART0_Transmit>
	UDR0 = data;
      f6:	8c b9       	out	0x0c, r24	; 12
      f8:	08 95       	ret

000000fa <USART0_Transmit_String>:
}

void USART0_Transmit_String(char *str){
      fa:	cf 93       	push	r28
      fc:	df 93       	push	r29
      fe:	ec 01       	movw	r28, r24
	while(*str != '\0') USART0_Transmit(*str++);
     100:	88 81       	ld	r24, Y
     102:	88 23       	and	r24, r24
     104:	29 f0       	breq	.+10     	; 0x110 <USART0_Transmit_String+0x16>
     106:	21 96       	adiw	r28, 0x01	; 1
     108:	f4 df       	rcall	.-24     	; 0xf2 <USART0_Transmit>
     10a:	89 91       	ld	r24, Y+
     10c:	81 11       	cpse	r24, r1
     10e:	fc cf       	rjmp	.-8      	; 0x108 <USART0_Transmit_String+0xe>
}
     110:	df 91       	pop	r29
     112:	cf 91       	pop	r28
     114:	08 95       	ret

00000116 <USART0_Receive>:

char USART0_Receive(void){
	while(!(UCSR0A & (1<<RXC0))); // Wait for Receive Buffer is empty
     116:	5f 9b       	sbis	0x0b, 7	; 11
     118:	fe cf       	rjmp	.-4      	; 0x116 <USART0_Receive>
	return UDR0;
     11a:	8c b1       	in	r24, 0x0c	; 12
}
     11c:	08 95       	ret

0000011e <USART1_Init>:

void USART1_Init(unsigned int ubrr){ // Set USART0 Registers
	UBRR1H = (unsigned char)(ubrr >> 8); // UBRR's High bits
     11e:	90 93 98 00 	sts	0x0098, r25	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
	UBRR1L = (unsigned char)(ubrr);		 // UBRR;s Low bits -> UBRR : 103
     122:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
	UCSR1B = (1<<RXEN1) | (1<<TXEN1); // Receive Enable, Transmit Enable
     126:	88 e1       	ldi	r24, 0x18	; 24
     128:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
	UCSR1C = (1<<UCSZ10) | (1<<UCSZ11);			// Set Data bits to 8 bits
     12c:	86 e0       	ldi	r24, 0x06	; 6
     12e:	80 93 9d 00 	sts	0x009D, r24	; 0x80009d <__TEXT_REGION_LENGTH__+0x7e009d>
     132:	08 95       	ret

00000134 <USART1_Transmit>:
}

void USART1_Transmit(char data){
	while(!((UCSR1A)  & (1<<UDRE1))); // Wait for Data Register empty
     134:	eb e9       	ldi	r30, 0x9B	; 155
     136:	f0 e0       	ldi	r31, 0x00	; 0
     138:	90 81       	ld	r25, Z
     13a:	95 ff       	sbrs	r25, 5
     13c:	fd cf       	rjmp	.-6      	; 0x138 <USART1_Transmit+0x4>
	UDR1 = data;
     13e:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
     142:	08 95       	ret

00000144 <USART1_Transmit_String>:
}

void USART1_Transmit_String(char *str){
     144:	cf 93       	push	r28
     146:	df 93       	push	r29
     148:	ec 01       	movw	r28, r24
	while(*str != '\0') USART1_Transmit(*str++);
     14a:	88 81       	ld	r24, Y
     14c:	88 23       	and	r24, r24
     14e:	29 f0       	breq	.+10     	; 0x15a <USART1_Transmit_String+0x16>
     150:	21 96       	adiw	r28, 0x01	; 1
     152:	f0 df       	rcall	.-32     	; 0x134 <USART1_Transmit>
     154:	89 91       	ld	r24, Y+
     156:	81 11       	cpse	r24, r1
     158:	fc cf       	rjmp	.-8      	; 0x152 <USART1_Transmit_String+0xe>
}
     15a:	df 91       	pop	r29
     15c:	cf 91       	pop	r28
     15e:	08 95       	ret

00000160 <USART_Transmit_number>:

/*******************************************************************/
/*                          USER Functions                         */
/*******************************************************************/
void USART_Transmit_number(char USART_NUM,char num){
	if(num == 0){
     160:	61 11       	cpse	r22, r1
     162:	0d c0       	rjmp	.+26     	; 0x17e <USART_Transmit_number+0x1e>
		if(USART_NUM == 0) USART0_Transmit_String("00");
     164:	81 11       	cpse	r24, r1
     166:	04 c0       	rjmp	.+8      	; 0x170 <USART_Transmit_number+0x10>
     168:	80 e0       	ldi	r24, 0x00	; 0
     16a:	91 e0       	ldi	r25, 0x01	; 1
     16c:	c6 cf       	rjmp	.-116    	; 0xfa <USART0_Transmit_String>
     16e:	08 95       	ret
		else if(USART_NUM == 1) USART1_Transmit_String("00");
     170:	81 30       	cpi	r24, 0x01	; 1
     172:	09 f0       	breq	.+2      	; 0x176 <USART_Transmit_number+0x16>
     174:	b3 c0       	rjmp	.+358    	; 0x2dc <USART_Transmit_number+0x17c>
     176:	80 e0       	ldi	r24, 0x00	; 0
     178:	91 e0       	ldi	r25, 0x01	; 1
     17a:	e4 cf       	rjmp	.-56     	; 0x144 <USART1_Transmit_String>
     17c:	08 95       	ret
	}
	else if(num == 1){
     17e:	61 30       	cpi	r22, 0x01	; 1
     180:	69 f4       	brne	.+26     	; 0x19c <USART_Transmit_number+0x3c>
		if(USART_NUM == 0) USART0_Transmit_String("01");
     182:	81 11       	cpse	r24, r1
     184:	04 c0       	rjmp	.+8      	; 0x18e <USART_Transmit_number+0x2e>
     186:	83 e0       	ldi	r24, 0x03	; 3
     188:	91 e0       	ldi	r25, 0x01	; 1
     18a:	b7 cf       	rjmp	.-146    	; 0xfa <USART0_Transmit_String>
     18c:	08 95       	ret
		else if(USART_NUM == 1) USART1_Transmit_String("01");
     18e:	81 30       	cpi	r24, 0x01	; 1
     190:	09 f0       	breq	.+2      	; 0x194 <USART_Transmit_number+0x34>
     192:	a4 c0       	rjmp	.+328    	; 0x2dc <USART_Transmit_number+0x17c>
     194:	83 e0       	ldi	r24, 0x03	; 3
     196:	91 e0       	ldi	r25, 0x01	; 1
     198:	d5 cf       	rjmp	.-86     	; 0x144 <USART1_Transmit_String>
     19a:	08 95       	ret
	}
	else if(num == 2){
     19c:	62 30       	cpi	r22, 0x02	; 2
     19e:	69 f4       	brne	.+26     	; 0x1ba <USART_Transmit_number+0x5a>
		if(USART_NUM == 0) USART0_Transmit_String("02");
     1a0:	81 11       	cpse	r24, r1
     1a2:	04 c0       	rjmp	.+8      	; 0x1ac <USART_Transmit_number+0x4c>
     1a4:	86 e0       	ldi	r24, 0x06	; 6
     1a6:	91 e0       	ldi	r25, 0x01	; 1
     1a8:	a8 cf       	rjmp	.-176    	; 0xfa <USART0_Transmit_String>
     1aa:	08 95       	ret
		else if(USART_NUM == 1) USART1_Transmit_String("02");
     1ac:	81 30       	cpi	r24, 0x01	; 1
     1ae:	09 f0       	breq	.+2      	; 0x1b2 <USART_Transmit_number+0x52>
     1b0:	95 c0       	rjmp	.+298    	; 0x2dc <USART_Transmit_number+0x17c>
     1b2:	86 e0       	ldi	r24, 0x06	; 6
     1b4:	91 e0       	ldi	r25, 0x01	; 1
     1b6:	c6 cf       	rjmp	.-116    	; 0x144 <USART1_Transmit_String>
     1b8:	08 95       	ret
	}
	else if(num == 3){
     1ba:	63 30       	cpi	r22, 0x03	; 3
		if(USART_NUM == 0) USART0_Transmit_String("03");
     1bc:	69 f4       	brne	.+26     	; 0x1d8 <USART_Transmit_number+0x78>
     1be:	81 11       	cpse	r24, r1
     1c0:	04 c0       	rjmp	.+8      	; 0x1ca <USART_Transmit_number+0x6a>
     1c2:	89 e0       	ldi	r24, 0x09	; 9
     1c4:	91 e0       	ldi	r25, 0x01	; 1
     1c6:	99 cf       	rjmp	.-206    	; 0xfa <USART0_Transmit_String>
		else if(USART_NUM == 1) USART1_Transmit_String("03");
     1c8:	08 95       	ret
     1ca:	81 30       	cpi	r24, 0x01	; 1
     1cc:	09 f0       	breq	.+2      	; 0x1d0 <USART_Transmit_number+0x70>
     1ce:	86 c0       	rjmp	.+268    	; 0x2dc <USART_Transmit_number+0x17c>
     1d0:	89 e0       	ldi	r24, 0x09	; 9
     1d2:	91 e0       	ldi	r25, 0x01	; 1
     1d4:	b7 cf       	rjmp	.-146    	; 0x144 <USART1_Transmit_String>
	}
	else if(num == 4){
     1d6:	08 95       	ret
     1d8:	64 30       	cpi	r22, 0x04	; 4
		if(USART_NUM == 0) USART0_Transmit_String("04");
     1da:	69 f4       	brne	.+26     	; 0x1f6 <USART_Transmit_number+0x96>
     1dc:	81 11       	cpse	r24, r1
     1de:	04 c0       	rjmp	.+8      	; 0x1e8 <USART_Transmit_number+0x88>
     1e0:	8c e0       	ldi	r24, 0x0C	; 12
     1e2:	91 e0       	ldi	r25, 0x01	; 1
     1e4:	8a cf       	rjmp	.-236    	; 0xfa <USART0_Transmit_String>
		else if(USART_NUM == 1) USART1_Transmit_String("04");
     1e6:	08 95       	ret
     1e8:	81 30       	cpi	r24, 0x01	; 1
     1ea:	09 f0       	breq	.+2      	; 0x1ee <USART_Transmit_number+0x8e>
     1ec:	77 c0       	rjmp	.+238    	; 0x2dc <USART_Transmit_number+0x17c>
     1ee:	8c e0       	ldi	r24, 0x0C	; 12
     1f0:	91 e0       	ldi	r25, 0x01	; 1
     1f2:	a8 cf       	rjmp	.-176    	; 0x144 <USART1_Transmit_String>
	}
	else if(num == 5){
     1f4:	08 95       	ret
     1f6:	65 30       	cpi	r22, 0x05	; 5
		if(USART_NUM == 0) USART0_Transmit_String("05");
     1f8:	69 f4       	brne	.+26     	; 0x214 <USART_Transmit_number+0xb4>
     1fa:	81 11       	cpse	r24, r1
     1fc:	04 c0       	rjmp	.+8      	; 0x206 <USART_Transmit_number+0xa6>
     1fe:	8f e0       	ldi	r24, 0x0F	; 15
     200:	91 e0       	ldi	r25, 0x01	; 1
     202:	7b cf       	rjmp	.-266    	; 0xfa <USART0_Transmit_String>
		else if(USART_NUM == 1) USART1_Transmit_String("05");
     204:	08 95       	ret
     206:	81 30       	cpi	r24, 0x01	; 1
     208:	09 f0       	breq	.+2      	; 0x20c <USART_Transmit_number+0xac>
     20a:	68 c0       	rjmp	.+208    	; 0x2dc <USART_Transmit_number+0x17c>
     20c:	8f e0       	ldi	r24, 0x0F	; 15
     20e:	91 e0       	ldi	r25, 0x01	; 1
     210:	99 cf       	rjmp	.-206    	; 0x144 <USART1_Transmit_String>
	}
	else if(num == 6){
     212:	08 95       	ret
		if(USART_NUM == 0) USART0_Transmit_String("06");
     214:	66 30       	cpi	r22, 0x06	; 6
     216:	69 f4       	brne	.+26     	; 0x232 <USART_Transmit_number+0xd2>
     218:	81 11       	cpse	r24, r1
     21a:	04 c0       	rjmp	.+8      	; 0x224 <USART_Transmit_number+0xc4>
     21c:	82 e1       	ldi	r24, 0x12	; 18
     21e:	91 e0       	ldi	r25, 0x01	; 1
     220:	6c cf       	rjmp	.-296    	; 0xfa <USART0_Transmit_String>
		else if(USART_NUM == 1) USART1_Transmit_String("06");
     222:	08 95       	ret
     224:	81 30       	cpi	r24, 0x01	; 1
     226:	09 f0       	breq	.+2      	; 0x22a <USART_Transmit_number+0xca>
     228:	59 c0       	rjmp	.+178    	; 0x2dc <USART_Transmit_number+0x17c>
     22a:	82 e1       	ldi	r24, 0x12	; 18
     22c:	91 e0       	ldi	r25, 0x01	; 1
	}
	else if(num == 7){
     22e:	8a cf       	rjmp	.-236    	; 0x144 <USART1_Transmit_String>
     230:	08 95       	ret
		if(USART_NUM == 0) USART0_Transmit_String("07");
     232:	67 30       	cpi	r22, 0x07	; 7
     234:	69 f4       	brne	.+26     	; 0x250 <USART_Transmit_number+0xf0>
     236:	81 11       	cpse	r24, r1
     238:	04 c0       	rjmp	.+8      	; 0x242 <USART_Transmit_number+0xe2>
     23a:	85 e1       	ldi	r24, 0x15	; 21
     23c:	91 e0       	ldi	r25, 0x01	; 1
		else if(USART_NUM == 1) USART1_Transmit_String("07");
     23e:	5d cf       	rjmp	.-326    	; 0xfa <USART0_Transmit_String>
     240:	08 95       	ret
     242:	81 30       	cpi	r24, 0x01	; 1
     244:	09 f0       	breq	.+2      	; 0x248 <USART_Transmit_number+0xe8>
     246:	4a c0       	rjmp	.+148    	; 0x2dc <USART_Transmit_number+0x17c>
     248:	85 e1       	ldi	r24, 0x15	; 21
     24a:	91 e0       	ldi	r25, 0x01	; 1
	}
	else if(num == 8){
     24c:	7b cf       	rjmp	.-266    	; 0x144 <USART1_Transmit_String>
     24e:	08 95       	ret
		if(USART_NUM == 0) USART0_Transmit_String("08");
     250:	68 30       	cpi	r22, 0x08	; 8
     252:	69 f4       	brne	.+26     	; 0x26e <USART_Transmit_number+0x10e>
     254:	81 11       	cpse	r24, r1
     256:	04 c0       	rjmp	.+8      	; 0x260 <USART_Transmit_number+0x100>
     258:	88 e1       	ldi	r24, 0x18	; 24
     25a:	91 e0       	ldi	r25, 0x01	; 1
		else if(USART_NUM == 1) USART1_Transmit_String("08");
     25c:	4e cf       	rjmp	.-356    	; 0xfa <USART0_Transmit_String>
     25e:	08 95       	ret
     260:	81 30       	cpi	r24, 0x01	; 1
     262:	09 f0       	breq	.+2      	; 0x266 <USART_Transmit_number+0x106>
     264:	3b c0       	rjmp	.+118    	; 0x2dc <USART_Transmit_number+0x17c>
     266:	88 e1       	ldi	r24, 0x18	; 24
     268:	91 e0       	ldi	r25, 0x01	; 1
	}
	else if(num == 9){
     26a:	6c cf       	rjmp	.-296    	; 0x144 <USART1_Transmit_String>
     26c:	08 95       	ret
		if(USART_NUM == 0) USART0_Transmit_String("09");
     26e:	69 30       	cpi	r22, 0x09	; 9
     270:	61 f4       	brne	.+24     	; 0x28a <USART_Transmit_number+0x12a>
     272:	81 11       	cpse	r24, r1
     274:	04 c0       	rjmp	.+8      	; 0x27e <USART_Transmit_number+0x11e>
     276:	8b e1       	ldi	r24, 0x1B	; 27
		else if(USART_NUM == 1) USART1_Transmit_String("09");
     278:	91 e0       	ldi	r25, 0x01	; 1
     27a:	3f cf       	rjmp	.-386    	; 0xfa <USART0_Transmit_String>
     27c:	08 95       	ret
     27e:	81 30       	cpi	r24, 0x01	; 1
     280:	69 f5       	brne	.+90     	; 0x2dc <USART_Transmit_number+0x17c>
     282:	8b e1       	ldi	r24, 0x1B	; 27
     284:	91 e0       	ldi	r25, 0x01	; 1
	}
	else if(num == 10){
     286:	5e cf       	rjmp	.-324    	; 0x144 <USART1_Transmit_String>
		if(USART_NUM == 0) USART0_Transmit_String("10");
     288:	08 95       	ret
     28a:	6a 30       	cpi	r22, 0x0A	; 10
     28c:	61 f4       	brne	.+24     	; 0x2a6 <USART_Transmit_number+0x146>
     28e:	81 11       	cpse	r24, r1
     290:	04 c0       	rjmp	.+8      	; 0x29a <USART_Transmit_number+0x13a>
     292:	8e e1       	ldi	r24, 0x1E	; 30
		else if(USART_NUM == 1) USART1_Transmit_String("10");
     294:	91 e0       	ldi	r25, 0x01	; 1
     296:	31 cf       	rjmp	.-414    	; 0xfa <USART0_Transmit_String>
     298:	08 95       	ret
     29a:	81 30       	cpi	r24, 0x01	; 1
     29c:	f9 f4       	brne	.+62     	; 0x2dc <USART_Transmit_number+0x17c>
     29e:	8e e1       	ldi	r24, 0x1E	; 30
	}
	else if(num == 11){
     2a0:	91 e0       	ldi	r25, 0x01	; 1
     2a2:	50 cf       	rjmp	.-352    	; 0x144 <USART1_Transmit_String>
		if(USART_NUM == 0) USART0_Transmit_String("11");
     2a4:	08 95       	ret
     2a6:	6b 30       	cpi	r22, 0x0B	; 11
     2a8:	61 f4       	brne	.+24     	; 0x2c2 <USART_Transmit_number+0x162>
     2aa:	81 11       	cpse	r24, r1
     2ac:	04 c0       	rjmp	.+8      	; 0x2b6 <USART_Transmit_number+0x156>
     2ae:	81 e2       	ldi	r24, 0x21	; 33
		else if(USART_NUM == 1) USART1_Transmit_String("11");
     2b0:	91 e0       	ldi	r25, 0x01	; 1
     2b2:	23 cf       	rjmp	.-442    	; 0xfa <USART0_Transmit_String>
     2b4:	08 95       	ret
     2b6:	81 30       	cpi	r24, 0x01	; 1
     2b8:	89 f4       	brne	.+34     	; 0x2dc <USART_Transmit_number+0x17c>
     2ba:	81 e2       	ldi	r24, 0x21	; 33
     2bc:	91 e0       	ldi	r25, 0x01	; 1
	}
	else if(num == 12){
     2be:	42 cf       	rjmp	.-380    	; 0x144 <USART1_Transmit_String>
     2c0:	08 95       	ret
		if(USART_NUM == 0) USART0_Transmit_String("12");
     2c2:	6c 30       	cpi	r22, 0x0C	; 12
     2c4:	59 f4       	brne	.+22     	; 0x2dc <USART_Transmit_number+0x17c>
     2c6:	81 11       	cpse	r24, r1
     2c8:	04 c0       	rjmp	.+8      	; 0x2d2 <USART_Transmit_number+0x172>
     2ca:	84 e2       	ldi	r24, 0x24	; 36
     2cc:	91 e0       	ldi	r25, 0x01	; 1
     2ce:	15 cf       	rjmp	.-470    	; 0xfa <USART0_Transmit_String>
		else if(USART_NUM == 1) USART1_Transmit_String("12");
     2d0:	08 95       	ret
     2d2:	81 30       	cpi	r24, 0x01	; 1
     2d4:	19 f4       	brne	.+6      	; 0x2dc <USART_Transmit_number+0x17c>
     2d6:	84 e2       	ldi	r24, 0x24	; 36
     2d8:	91 e0       	ldi	r25, 0x01	; 1
     2da:	34 cf       	rjmp	.-408    	; 0x144 <USART1_Transmit_String>
     2dc:	08 95       	ret

000002de <showP1toP1>:
	}
}

void showP1toP1 (void){
     2de:	0f 93       	push	r16
     2e0:	1f 93       	push	r17
     2e2:	cf 93       	push	r28
     2e4:	df 93       	push	r29
	USART0_Transmit_String("P1 Deck :\r\n");
     2e6:	87 e2       	ldi	r24, 0x27	; 39
     2e8:	91 e0       	ldi	r25, 0x01	; 1
     2ea:	07 df       	rcall	.-498    	; 0xfa <USART0_Transmit_String>
	for(int jj=0; jj<p1_card_cnt;jj++){
     2ec:	80 91 86 04 	lds	r24, 0x0486	; 0x800486 <p1_card_cnt>
     2f0:	88 23       	and	r24, r24
     2f2:	99 f0       	breq	.+38     	; 0x31a <showP1toP1+0x3c>
     2f4:	c1 e0       	ldi	r28, 0x01	; 1
     2f6:	d0 e0       	ldi	r29, 0x00	; 0
		USART0_Transmit_String("   ");
     2f8:	83 e3       	ldi	r24, 0x33	; 51
     2fa:	91 e0       	ldi	r25, 0x01	; 1
     2fc:	fe de       	rcall	.-516    	; 0xfa <USART0_Transmit_String>
		USART_Transmit_number(0,(char)(jj+1));
     2fe:	6c 2f       	mov	r22, r28
     300:	80 e0       	ldi	r24, 0x00	; 0
     302:	2e df       	rcall	.-420    	; 0x160 <USART_Transmit_number>
		USART0_Transmit_String(" ");
     304:	85 e3       	ldi	r24, 0x35	; 53
     306:	91 e0       	ldi	r25, 0x01	; 1
     308:	f8 de       	rcall	.-528    	; 0xfa <USART0_Transmit_String>
     30a:	9e 01       	movw	r18, r28
	}
}

void showP1toP1 (void){
	USART0_Transmit_String("P1 Deck :\r\n");
	for(int jj=0; jj<p1_card_cnt;jj++){
     30c:	21 96       	adiw	r28, 0x01	; 1
     30e:	80 91 86 04 	lds	r24, 0x0486	; 0x800486 <p1_card_cnt>
     312:	90 e0       	ldi	r25, 0x00	; 0
     314:	28 17       	cp	r18, r24
     316:	39 07       	cpc	r19, r25
     318:	7c f3       	brlt	.-34     	; 0x2f8 <showP1toP1+0x1a>
		USART0_Transmit_String("   ");
		USART_Transmit_number(0,(char)(jj+1));
		USART0_Transmit_String(" ");
	}
	USART0_Transmit_String("\r\n");
     31a:	8b e7       	ldi	r24, 0x7B	; 123
     31c:	91 e0       	ldi	r25, 0x01	; 1
     31e:	ed de       	rcall	.-550    	; 0xfa <USART0_Transmit_String>
     320:	80 91 86 04 	lds	r24, 0x0486	; 0x800486 <p1_card_cnt>
	for(int jj=0; jj<p1_card_cnt;jj++) USART0_Transmit_String("|----|");
     324:	88 23       	and	r24, r24
     326:	61 f0       	breq	.+24     	; 0x340 <showP1toP1+0x62>
     328:	c0 e0       	ldi	r28, 0x00	; 0
     32a:	d0 e0       	ldi	r29, 0x00	; 0
     32c:	87 e3       	ldi	r24, 0x37	; 55
     32e:	91 e0       	ldi	r25, 0x01	; 1
     330:	e4 de       	rcall	.-568    	; 0xfa <USART0_Transmit_String>
     332:	21 96       	adiw	r28, 0x01	; 1
     334:	80 91 86 04 	lds	r24, 0x0486	; 0x800486 <p1_card_cnt>
     338:	90 e0       	ldi	r25, 0x00	; 0
     33a:	c8 17       	cp	r28, r24
     33c:	d9 07       	cpc	r29, r25
     33e:	b4 f3       	brlt	.-20     	; 0x32c <showP1toP1+0x4e>
	USART0_Transmit_String("\r\n");
     340:	8b e7       	ldi	r24, 0x7B	; 123
     342:	91 e0       	ldi	r25, 0x01	; 1
     344:	da de       	rcall	.-588    	; 0xfa <USART0_Transmit_String>
     346:	80 91 86 04 	lds	r24, 0x0486	; 0x800486 <p1_card_cnt>
	for(int jj=0; jj<p1_card_cnt;jj++){
     34a:	88 23       	and	r24, r24
     34c:	d9 f0       	breq	.+54     	; 0x384 <showP1toP1+0xa6>
     34e:	09 e8       	ldi	r16, 0x89	; 137
     350:	14 e0       	ldi	r17, 0x04	; 4
     352:	c0 e0       	ldi	r28, 0x00	; 0
     354:	d0 e0       	ldi	r29, 0x00	; 0
		USART0_Transmit_String("|  ");
     356:	8e e3       	ldi	r24, 0x3E	; 62
     358:	91 e0       	ldi	r25, 0x01	; 1
     35a:	cf de       	rcall	.-610    	; 0xfa <USART0_Transmit_String>
		if(p1_deck[jj].color == 0) USART0_Transmit_String("B |");
     35c:	f8 01       	movw	r30, r16
     35e:	80 81       	ld	r24, Z
     360:	81 11       	cpse	r24, r1
     362:	04 c0       	rjmp	.+8      	; 0x36c <showP1toP1+0x8e>
     364:	82 e4       	ldi	r24, 0x42	; 66
     366:	91 e0       	ldi	r25, 0x01	; 1
     368:	c8 de       	rcall	.-624    	; 0xfa <USART0_Transmit_String>
     36a:	03 c0       	rjmp	.+6      	; 0x372 <showP1toP1+0x94>
		else USART0_Transmit_String("W |");
     36c:	86 e4       	ldi	r24, 0x46	; 70
     36e:	91 e0       	ldi	r25, 0x01	; 1
     370:	c4 de       	rcall	.-632    	; 0xfa <USART0_Transmit_String>
     372:	21 96       	adiw	r28, 0x01	; 1
		USART0_Transmit_String(" ");
	}
	USART0_Transmit_String("\r\n");
	for(int jj=0; jj<p1_card_cnt;jj++) USART0_Transmit_String("|----|");
	USART0_Transmit_String("\r\n");
	for(int jj=0; jj<p1_card_cnt;jj++){
     374:	0c 5f       	subi	r16, 0xFC	; 252
     376:	1f 4f       	sbci	r17, 0xFF	; 255
     378:	80 91 86 04 	lds	r24, 0x0486	; 0x800486 <p1_card_cnt>
     37c:	90 e0       	ldi	r25, 0x00	; 0
     37e:	c8 17       	cp	r28, r24
     380:	d9 07       	cpc	r29, r25
     382:	4c f3       	brlt	.-46     	; 0x356 <showP1toP1+0x78>
		USART0_Transmit_String("|  ");
		if(p1_deck[jj].color == 0) USART0_Transmit_String("B |");
		else USART0_Transmit_String("W |");
	}
	USART0_Transmit_String("\r\n");
     384:	8b e7       	ldi	r24, 0x7B	; 123
     386:	91 e0       	ldi	r25, 0x01	; 1
     388:	b8 de       	rcall	.-656    	; 0xfa <USART0_Transmit_String>
	for(int jj=0; jj<p1_card_cnt;jj++){
     38a:	80 91 86 04 	lds	r24, 0x0486	; 0x800486 <p1_card_cnt>
     38e:	88 23       	and	r24, r24
     390:	b9 f0       	breq	.+46     	; 0x3c0 <showP1toP1+0xe2>
     392:	0a e8       	ldi	r16, 0x8A	; 138
     394:	14 e0       	ldi	r17, 0x04	; 4
		USART0_Transmit_String("| ");
     396:	c0 e0       	ldi	r28, 0x00	; 0
     398:	d0 e0       	ldi	r29, 0x00	; 0
     39a:	8a e4       	ldi	r24, 0x4A	; 74
     39c:	91 e0       	ldi	r25, 0x01	; 1
		USART_Transmit_number(0,p1_deck[jj].number);
     39e:	ad de       	rcall	.-678    	; 0xfa <USART0_Transmit_String>
     3a0:	f8 01       	movw	r30, r16
     3a2:	60 81       	ld	r22, Z
     3a4:	80 e0       	ldi	r24, 0x00	; 0
     3a6:	dc de       	rcall	.-584    	; 0x160 <USART_Transmit_number>
		USART0_Transmit_String(" |");
     3a8:	83 e4       	ldi	r24, 0x43	; 67
     3aa:	91 e0       	ldi	r25, 0x01	; 1
     3ac:	a6 de       	rcall	.-692    	; 0xfa <USART0_Transmit_String>
		USART0_Transmit_String("|  ");
		if(p1_deck[jj].color == 0) USART0_Transmit_String("B |");
		else USART0_Transmit_String("W |");
	}
	USART0_Transmit_String("\r\n");
	for(int jj=0; jj<p1_card_cnt;jj++){
     3ae:	21 96       	adiw	r28, 0x01	; 1
     3b0:	0c 5f       	subi	r16, 0xFC	; 252
     3b2:	1f 4f       	sbci	r17, 0xFF	; 255
     3b4:	80 91 86 04 	lds	r24, 0x0486	; 0x800486 <p1_card_cnt>
     3b8:	90 e0       	ldi	r25, 0x00	; 0
     3ba:	c8 17       	cp	r28, r24
     3bc:	d9 07       	cpc	r29, r25
		USART0_Transmit_String("| ");
		USART_Transmit_number(0,p1_deck[jj].number);
		USART0_Transmit_String(" |");
	}
	USART0_Transmit_String("\r\n");
     3be:	6c f3       	brlt	.-38     	; 0x39a <showP1toP1+0xbc>
     3c0:	8b e7       	ldi	r24, 0x7B	; 123
     3c2:	91 e0       	ldi	r25, 0x01	; 1
     3c4:	9a de       	rcall	.-716    	; 0xfa <USART0_Transmit_String>
	for(int jj=0; jj<p1_card_cnt;jj++){
     3c6:	80 91 86 04 	lds	r24, 0x0486	; 0x800486 <p1_card_cnt>
     3ca:	88 23       	and	r24, r24
     3cc:	d9 f0       	breq	.+54     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
     3ce:	0c e8       	ldi	r16, 0x8C	; 140
     3d0:	14 e0       	ldi	r17, 0x04	; 4
		USART0_Transmit_String("|  ");
     3d2:	c0 e0       	ldi	r28, 0x00	; 0
     3d4:	d0 e0       	ldi	r29, 0x00	; 0
     3d6:	8e e3       	ldi	r24, 0x3E	; 62
     3d8:	91 e0       	ldi	r25, 0x01	; 1
		if(p1_deck[jj].opened == 0) USART0_Transmit_String("O |");
     3da:	8f de       	rcall	.-738    	; 0xfa <USART0_Transmit_String>
     3dc:	f8 01       	movw	r30, r16
     3de:	80 81       	ld	r24, Z
     3e0:	81 11       	cpse	r24, r1
     3e2:	04 c0       	rjmp	.+8      	; 0x3ec <showP1toP1+0x10e>
     3e4:	8d e4       	ldi	r24, 0x4D	; 77
     3e6:	91 e0       	ldi	r25, 0x01	; 1
     3e8:	88 de       	rcall	.-752    	; 0xfa <USART0_Transmit_String>
		else USART0_Transmit_String("X |");
     3ea:	03 c0       	rjmp	.+6      	; 0x3f2 <showP1toP1+0x114>
     3ec:	81 e5       	ldi	r24, 0x51	; 81
     3ee:	91 e0       	ldi	r25, 0x01	; 1
     3f0:	84 de       	rcall	.-760    	; 0xfa <USART0_Transmit_String>
		USART0_Transmit_String("| ");
		USART_Transmit_number(0,p1_deck[jj].number);
		USART0_Transmit_String(" |");
	}
	USART0_Transmit_String("\r\n");
	for(int jj=0; jj<p1_card_cnt;jj++){
     3f2:	21 96       	adiw	r28, 0x01	; 1
     3f4:	0c 5f       	subi	r16, 0xFC	; 252
     3f6:	1f 4f       	sbci	r17, 0xFF	; 255
     3f8:	80 91 86 04 	lds	r24, 0x0486	; 0x800486 <p1_card_cnt>
     3fc:	90 e0       	ldi	r25, 0x00	; 0
     3fe:	c8 17       	cp	r28, r24
     400:	d9 07       	cpc	r29, r25
		USART0_Transmit_String("|  ");
		if(p1_deck[jj].opened == 0) USART0_Transmit_String("O |");
		else USART0_Transmit_String("X |");
	}
	USART0_Transmit_String("\r\n");
     402:	4c f3       	brlt	.-46     	; 0x3d6 <showP1toP1+0xf8>
     404:	8b e7       	ldi	r24, 0x7B	; 123
     406:	91 e0       	ldi	r25, 0x01	; 1
	for(int jj=0; jj<p1_card_cnt;jj++) USART0_Transmit_String("|----|");
     408:	78 de       	rcall	.-784    	; 0xfa <USART0_Transmit_String>
     40a:	80 91 86 04 	lds	r24, 0x0486	; 0x800486 <p1_card_cnt>
     40e:	88 23       	and	r24, r24
     410:	61 f0       	breq	.+24     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
     412:	c0 e0       	ldi	r28, 0x00	; 0
     414:	d0 e0       	ldi	r29, 0x00	; 0
     416:	87 e3       	ldi	r24, 0x37	; 55
     418:	91 e0       	ldi	r25, 0x01	; 1
     41a:	6f de       	rcall	.-802    	; 0xfa <USART0_Transmit_String>
     41c:	21 96       	adiw	r28, 0x01	; 1
     41e:	80 91 86 04 	lds	r24, 0x0486	; 0x800486 <p1_card_cnt>
     422:	90 e0       	ldi	r25, 0x00	; 0
     424:	c8 17       	cp	r28, r24
     426:	d9 07       	cpc	r29, r25
     428:	b4 f3       	brlt	.-20     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
	USART0_Transmit_String("\r\n");
     42a:	8b e7       	ldi	r24, 0x7B	; 123
     42c:	91 e0       	ldi	r25, 0x01	; 1
     42e:	65 de       	rcall	.-822    	; 0xfa <USART0_Transmit_String>
     430:	df 91       	pop	r29
}
     432:	cf 91       	pop	r28
     434:	1f 91       	pop	r17
     436:	0f 91       	pop	r16
     438:	08 95       	ret

0000043a <showP2toP1>:
     43a:	0f 93       	push	r16
	USART1_Transmit_String("\r\n");
	for(int jj=0; jj<p2_card_cnt;jj++) USART1_Transmit_String("|----|");
	USART1_Transmit_String("\r\n");
}

void showP2toP1 (void){
     43c:	1f 93       	push	r17
     43e:	cf 93       	push	r28
     440:	df 93       	push	r29
	USART0_Transmit_String("P2 Deck : \r\n"); // display P2 deck to P1
     442:	85 e5       	ldi	r24, 0x55	; 85
     444:	91 e0       	ldi	r25, 0x01	; 1
     446:	59 de       	rcall	.-846    	; 0xfa <USART0_Transmit_String>
	for(int jj=0; jj<p2_card_cnt;jj++){
     448:	80 91 85 04 	lds	r24, 0x0485	; 0x800485 <p2_card_cnt>
     44c:	88 23       	and	r24, r24
     44e:	99 f0       	breq	.+38     	; 0x476 <showP2toP1+0x3c>
     450:	c1 e0       	ldi	r28, 0x01	; 1
     452:	d0 e0       	ldi	r29, 0x00	; 0
		USART0_Transmit_String("   ");
     454:	83 e3       	ldi	r24, 0x33	; 51
     456:	91 e0       	ldi	r25, 0x01	; 1
     458:	50 de       	rcall	.-864    	; 0xfa <USART0_Transmit_String>
		USART_Transmit_number(0,(char)(jj+1));
     45a:	6c 2f       	mov	r22, r28
     45c:	80 e0       	ldi	r24, 0x00	; 0
     45e:	80 de       	rcall	.-768    	; 0x160 <USART_Transmit_number>
		USART0_Transmit_String(" ");
     460:	85 e3       	ldi	r24, 0x35	; 53
     462:	91 e0       	ldi	r25, 0x01	; 1
     464:	4a de       	rcall	.-876    	; 0xfa <USART0_Transmit_String>
     466:	9e 01       	movw	r18, r28
	USART1_Transmit_String("\r\n");
}

void showP2toP1 (void){
	USART0_Transmit_String("P2 Deck : \r\n"); // display P2 deck to P1
	for(int jj=0; jj<p2_card_cnt;jj++){
     468:	21 96       	adiw	r28, 0x01	; 1
     46a:	80 91 85 04 	lds	r24, 0x0485	; 0x800485 <p2_card_cnt>
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	28 17       	cp	r18, r24
     472:	39 07       	cpc	r19, r25
     474:	7c f3       	brlt	.-34     	; 0x454 <showP2toP1+0x1a>
		USART0_Transmit_String("   ");
		USART_Transmit_number(0,(char)(jj+1));
		USART0_Transmit_String(" ");
	}
	USART0_Transmit_String("\r\n");
     476:	8b e7       	ldi	r24, 0x7B	; 123
     478:	91 e0       	ldi	r25, 0x01	; 1
     47a:	3f de       	rcall	.-898    	; 0xfa <USART0_Transmit_String>
     47c:	80 91 85 04 	lds	r24, 0x0485	; 0x800485 <p2_card_cnt>
	for(int jj=0; jj<p2_card_cnt;jj++) USART0_Transmit_String("|----|");
     480:	88 23       	and	r24, r24
     482:	61 f0       	breq	.+24     	; 0x49c <showP2toP1+0x62>
     484:	c0 e0       	ldi	r28, 0x00	; 0
     486:	d0 e0       	ldi	r29, 0x00	; 0
     488:	87 e3       	ldi	r24, 0x37	; 55
     48a:	91 e0       	ldi	r25, 0x01	; 1
     48c:	36 de       	rcall	.-916    	; 0xfa <USART0_Transmit_String>
     48e:	21 96       	adiw	r28, 0x01	; 1
     490:	80 91 85 04 	lds	r24, 0x0485	; 0x800485 <p2_card_cnt>
     494:	90 e0       	ldi	r25, 0x00	; 0
     496:	c8 17       	cp	r28, r24
     498:	d9 07       	cpc	r29, r25
     49a:	b4 f3       	brlt	.-20     	; 0x488 <showP2toP1+0x4e>
	USART0_Transmit_String("\r\n");
     49c:	8b e7       	ldi	r24, 0x7B	; 123
     49e:	91 e0       	ldi	r25, 0x01	; 1
     4a0:	2c de       	rcall	.-936    	; 0xfa <USART0_Transmit_String>
     4a2:	80 91 85 04 	lds	r24, 0x0485	; 0x800485 <p2_card_cnt>
	for(int jj=0; jj<p2_card_cnt;jj++){
     4a6:	88 23       	and	r24, r24
     4a8:	d9 f0       	breq	.+54     	; 0x4e0 <showP2toP1+0xa6>
     4aa:	02 ec       	ldi	r16, 0xC2	; 194
     4ac:	14 e0       	ldi	r17, 0x04	; 4
     4ae:	c0 e0       	ldi	r28, 0x00	; 0
     4b0:	d0 e0       	ldi	r29, 0x00	; 0
		USART0_Transmit_String("|  ");
     4b2:	8e e3       	ldi	r24, 0x3E	; 62
     4b4:	91 e0       	ldi	r25, 0x01	; 1
     4b6:	21 de       	rcall	.-958    	; 0xfa <USART0_Transmit_String>
		if(p2_deck[jj].color == 0) USART0_Transmit_String("B |");
     4b8:	f8 01       	movw	r30, r16
     4ba:	80 81       	ld	r24, Z
     4bc:	81 11       	cpse	r24, r1
     4be:	04 c0       	rjmp	.+8      	; 0x4c8 <showP2toP1+0x8e>
     4c0:	82 e4       	ldi	r24, 0x42	; 66
     4c2:	91 e0       	ldi	r25, 0x01	; 1
     4c4:	1a de       	rcall	.-972    	; 0xfa <USART0_Transmit_String>
     4c6:	03 c0       	rjmp	.+6      	; 0x4ce <showP2toP1+0x94>
		else USART0_Transmit_String("W |");
     4c8:	86 e4       	ldi	r24, 0x46	; 70
     4ca:	91 e0       	ldi	r25, 0x01	; 1
     4cc:	16 de       	rcall	.-980    	; 0xfa <USART0_Transmit_String>
     4ce:	21 96       	adiw	r28, 0x01	; 1
		USART0_Transmit_String(" ");
	}
	USART0_Transmit_String("\r\n");
	for(int jj=0; jj<p2_card_cnt;jj++) USART0_Transmit_String("|----|");
	USART0_Transmit_String("\r\n");
	for(int jj=0; jj<p2_card_cnt;jj++){
     4d0:	0c 5f       	subi	r16, 0xFC	; 252
     4d2:	1f 4f       	sbci	r17, 0xFF	; 255
     4d4:	80 91 85 04 	lds	r24, 0x0485	; 0x800485 <p2_card_cnt>
     4d8:	90 e0       	ldi	r25, 0x00	; 0
     4da:	c8 17       	cp	r28, r24
     4dc:	d9 07       	cpc	r29, r25
     4de:	4c f3       	brlt	.-46     	; 0x4b2 <showP2toP1+0x78>
		USART0_Transmit_String("|  ");
		if(p2_deck[jj].color == 0) USART0_Transmit_String("B |");
		else USART0_Transmit_String("W |");
		
	}
	USART0_Transmit_String("\r\n");
     4e0:	8b e7       	ldi	r24, 0x7B	; 123
     4e2:	91 e0       	ldi	r25, 0x01	; 1
     4e4:	0a de       	rcall	.-1004   	; 0xfa <USART0_Transmit_String>
	for(int jj=0; jj<p2_card_cnt;jj++){
     4e6:	80 91 85 04 	lds	r24, 0x0485	; 0x800485 <p2_card_cnt>
     4ea:	88 23       	and	r24, r24
     4ec:	e9 f0       	breq	.+58     	; 0x528 <showP2toP1+0xee>
     4ee:	c3 ec       	ldi	r28, 0xC3	; 195
     4f0:	d4 e0       	ldi	r29, 0x04	; 4
     4f2:	00 e0       	ldi	r16, 0x00	; 0
		USART0_Transmit_String("| ");
     4f4:	10 e0       	ldi	r17, 0x00	; 0
     4f6:	8a e4       	ldi	r24, 0x4A	; 74
     4f8:	91 e0       	ldi	r25, 0x01	; 1
		if(p2_deck[jj].opened == 0) USART0_Transmit_String("XX");
     4fa:	ff dd       	rcall	.-1026   	; 0xfa <USART0_Transmit_String>
     4fc:	8a 81       	ldd	r24, Y+2	; 0x02
     4fe:	81 11       	cpse	r24, r1
     500:	04 c0       	rjmp	.+8      	; 0x50a <showP2toP1+0xd0>
     502:	82 e6       	ldi	r24, 0x62	; 98
     504:	91 e0       	ldi	r25, 0x01	; 1
     506:	f9 dd       	rcall	.-1038   	; 0xfa <USART0_Transmit_String>
		else USART_Transmit_number(0,p2_deck[jj].number);
     508:	03 c0       	rjmp	.+6      	; 0x510 <showP2toP1+0xd6>
     50a:	68 81       	ld	r22, Y
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	28 de       	rcall	.-944    	; 0x160 <USART_Transmit_number>
		USART0_Transmit_String(" |");
     510:	83 e4       	ldi	r24, 0x43	; 67
     512:	91 e0       	ldi	r25, 0x01	; 1
     514:	f2 dd       	rcall	.-1052   	; 0xfa <USART0_Transmit_String>
		if(p2_deck[jj].color == 0) USART0_Transmit_String("B |");
		else USART0_Transmit_String("W |");
		
	}
	USART0_Transmit_String("\r\n");
	for(int jj=0; jj<p2_card_cnt;jj++){
     516:	0f 5f       	subi	r16, 0xFF	; 255
     518:	1f 4f       	sbci	r17, 0xFF	; 255
     51a:	24 96       	adiw	r28, 0x04	; 4
     51c:	80 91 85 04 	lds	r24, 0x0485	; 0x800485 <p2_card_cnt>
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	08 17       	cp	r16, r24
     524:	19 07       	cpc	r17, r25
		if(p2_deck[jj].opened == 0) USART0_Transmit_String("XX");
		else USART_Transmit_number(0,p2_deck[jj].number);
		USART0_Transmit_String(" |");
		
	}
	USART0_Transmit_String("\r\n");
     526:	3c f3       	brlt	.-50     	; 0x4f6 <showP2toP1+0xbc>
     528:	8b e7       	ldi	r24, 0x7B	; 123
     52a:	91 e0       	ldi	r25, 0x01	; 1
     52c:	e6 dd       	rcall	.-1076   	; 0xfa <USART0_Transmit_String>
	for(int jj=0; jj<p2_card_cnt;jj++) USART0_Transmit_String("|----|");
     52e:	80 91 85 04 	lds	r24, 0x0485	; 0x800485 <p2_card_cnt>
     532:	88 23       	and	r24, r24
     534:	61 f0       	breq	.+24     	; 0x54e <showP2toP1+0x114>
     536:	c0 e0       	ldi	r28, 0x00	; 0
     538:	d0 e0       	ldi	r29, 0x00	; 0
     53a:	87 e3       	ldi	r24, 0x37	; 55
     53c:	91 e0       	ldi	r25, 0x01	; 1
     53e:	dd dd       	rcall	.-1094   	; 0xfa <USART0_Transmit_String>
     540:	21 96       	adiw	r28, 0x01	; 1
     542:	80 91 85 04 	lds	r24, 0x0485	; 0x800485 <p2_card_cnt>
     546:	90 e0       	ldi	r25, 0x00	; 0
     548:	c8 17       	cp	r28, r24
     54a:	d9 07       	cpc	r29, r25
     54c:	b4 f3       	brlt	.-20     	; 0x53a <showP2toP1+0x100>
	USART0_Transmit_String("\r\n");
     54e:	8b e7       	ldi	r24, 0x7B	; 123
     550:	91 e0       	ldi	r25, 0x01	; 1
     552:	d3 dd       	rcall	.-1114   	; 0xfa <USART0_Transmit_String>
     554:	df 91       	pop	r29
}
     556:	cf 91       	pop	r28
     558:	1f 91       	pop	r17
     55a:	0f 91       	pop	r16
     55c:	08 95       	ret

0000055e <showP2toP2>:
     55e:	0f 93       	push	r16
	USART0_Transmit_String("\r\n");
	for(int jj=0; jj<p1_card_cnt;jj++) USART0_Transmit_String("|----|");
	USART0_Transmit_String("\r\n");
}

void showP2toP2 (void){
     560:	1f 93       	push	r17
     562:	cf 93       	push	r28
     564:	df 93       	push	r29
	USART1_Transmit_String("P2 Deck :\r\n");
     566:	85 e6       	ldi	r24, 0x65	; 101
     568:	91 e0       	ldi	r25, 0x01	; 1
     56a:	ec dd       	rcall	.-1064   	; 0x144 <USART1_Transmit_String>
	for(int jj=0; jj<p2_card_cnt;jj++){
     56c:	80 91 85 04 	lds	r24, 0x0485	; 0x800485 <p2_card_cnt>
     570:	88 23       	and	r24, r24
     572:	99 f0       	breq	.+38     	; 0x59a <showP2toP2+0x3c>
     574:	c1 e0       	ldi	r28, 0x01	; 1
     576:	d0 e0       	ldi	r29, 0x00	; 0
		USART1_Transmit_String("   ");
     578:	83 e3       	ldi	r24, 0x33	; 51
     57a:	91 e0       	ldi	r25, 0x01	; 1
     57c:	e3 dd       	rcall	.-1082   	; 0x144 <USART1_Transmit_String>
		USART_Transmit_number(1,(char)(jj+1));
     57e:	6c 2f       	mov	r22, r28
     580:	81 e0       	ldi	r24, 0x01	; 1
     582:	ee dd       	rcall	.-1060   	; 0x160 <USART_Transmit_number>
		USART1_Transmit_String(" ");
     584:	85 e3       	ldi	r24, 0x35	; 53
     586:	91 e0       	ldi	r25, 0x01	; 1
     588:	dd dd       	rcall	.-1094   	; 0x144 <USART1_Transmit_String>
     58a:	9e 01       	movw	r18, r28
	USART0_Transmit_String("\r\n");
}

void showP2toP2 (void){
	USART1_Transmit_String("P2 Deck :\r\n");
	for(int jj=0; jj<p2_card_cnt;jj++){
     58c:	21 96       	adiw	r28, 0x01	; 1
     58e:	80 91 85 04 	lds	r24, 0x0485	; 0x800485 <p2_card_cnt>
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	28 17       	cp	r18, r24
     596:	39 07       	cpc	r19, r25
     598:	7c f3       	brlt	.-34     	; 0x578 <showP2toP2+0x1a>
		USART1_Transmit_String("   ");
		USART_Transmit_number(1,(char)(jj+1));
		USART1_Transmit_String(" ");
	}
	USART1_Transmit_String("\r\n");
     59a:	8b e7       	ldi	r24, 0x7B	; 123
     59c:	91 e0       	ldi	r25, 0x01	; 1
     59e:	d2 dd       	rcall	.-1116   	; 0x144 <USART1_Transmit_String>
     5a0:	80 91 85 04 	lds	r24, 0x0485	; 0x800485 <p2_card_cnt>
	for(int jj=0; jj<p2_card_cnt;jj++) USART1_Transmit_String("|----|");
     5a4:	88 23       	and	r24, r24
     5a6:	61 f0       	breq	.+24     	; 0x5c0 <showP2toP2+0x62>
     5a8:	c0 e0       	ldi	r28, 0x00	; 0
     5aa:	d0 e0       	ldi	r29, 0x00	; 0
     5ac:	87 e3       	ldi	r24, 0x37	; 55
     5ae:	91 e0       	ldi	r25, 0x01	; 1
     5b0:	c9 dd       	rcall	.-1134   	; 0x144 <USART1_Transmit_String>
     5b2:	21 96       	adiw	r28, 0x01	; 1
     5b4:	80 91 85 04 	lds	r24, 0x0485	; 0x800485 <p2_card_cnt>
     5b8:	90 e0       	ldi	r25, 0x00	; 0
     5ba:	c8 17       	cp	r28, r24
     5bc:	d9 07       	cpc	r29, r25
     5be:	b4 f3       	brlt	.-20     	; 0x5ac <showP2toP2+0x4e>
	USART1_Transmit_String("\r\n");
     5c0:	8b e7       	ldi	r24, 0x7B	; 123
     5c2:	91 e0       	ldi	r25, 0x01	; 1
     5c4:	bf dd       	rcall	.-1154   	; 0x144 <USART1_Transmit_String>
     5c6:	80 91 85 04 	lds	r24, 0x0485	; 0x800485 <p2_card_cnt>
	for(int jj=0; jj<p2_card_cnt;jj++){
     5ca:	88 23       	and	r24, r24
     5cc:	d9 f0       	breq	.+54     	; 0x604 <showP2toP2+0xa6>
     5ce:	02 ec       	ldi	r16, 0xC2	; 194
     5d0:	14 e0       	ldi	r17, 0x04	; 4
     5d2:	c0 e0       	ldi	r28, 0x00	; 0
     5d4:	d0 e0       	ldi	r29, 0x00	; 0
		USART1_Transmit_String("|  ");
     5d6:	8e e3       	ldi	r24, 0x3E	; 62
     5d8:	91 e0       	ldi	r25, 0x01	; 1
     5da:	b4 dd       	rcall	.-1176   	; 0x144 <USART1_Transmit_String>
		if(p2_deck[jj].color == 0) USART1_Transmit_String("B |");
     5dc:	f8 01       	movw	r30, r16
     5de:	80 81       	ld	r24, Z
     5e0:	81 11       	cpse	r24, r1
     5e2:	04 c0       	rjmp	.+8      	; 0x5ec <showP2toP2+0x8e>
     5e4:	82 e4       	ldi	r24, 0x42	; 66
     5e6:	91 e0       	ldi	r25, 0x01	; 1
     5e8:	ad dd       	rcall	.-1190   	; 0x144 <USART1_Transmit_String>
     5ea:	03 c0       	rjmp	.+6      	; 0x5f2 <showP2toP2+0x94>
		else USART1_Transmit_String("W |");
     5ec:	86 e4       	ldi	r24, 0x46	; 70
     5ee:	91 e0       	ldi	r25, 0x01	; 1
     5f0:	a9 dd       	rcall	.-1198   	; 0x144 <USART1_Transmit_String>
     5f2:	21 96       	adiw	r28, 0x01	; 1
		USART1_Transmit_String(" ");
	}
	USART1_Transmit_String("\r\n");
	for(int jj=0; jj<p2_card_cnt;jj++) USART1_Transmit_String("|----|");
	USART1_Transmit_String("\r\n");
	for(int jj=0; jj<p2_card_cnt;jj++){
     5f4:	0c 5f       	subi	r16, 0xFC	; 252
     5f6:	1f 4f       	sbci	r17, 0xFF	; 255
     5f8:	80 91 85 04 	lds	r24, 0x0485	; 0x800485 <p2_card_cnt>
     5fc:	90 e0       	ldi	r25, 0x00	; 0
     5fe:	c8 17       	cp	r28, r24
     600:	d9 07       	cpc	r29, r25
     602:	4c f3       	brlt	.-46     	; 0x5d6 <showP2toP2+0x78>
		USART1_Transmit_String("|  ");
		if(p2_deck[jj].color == 0) USART1_Transmit_String("B |");
		else USART1_Transmit_String("W |");
	}
	USART1_Transmit_String("\r\n");
     604:	8b e7       	ldi	r24, 0x7B	; 123
     606:	91 e0       	ldi	r25, 0x01	; 1
     608:	9d dd       	rcall	.-1222   	; 0x144 <USART1_Transmit_String>
	for(int jj=0; jj<p2_card_cnt;jj++){
     60a:	80 91 85 04 	lds	r24, 0x0485	; 0x800485 <p2_card_cnt>
     60e:	88 23       	and	r24, r24
     610:	b9 f0       	breq	.+46     	; 0x640 <showP2toP2+0xe2>
     612:	03 ec       	ldi	r16, 0xC3	; 195
     614:	14 e0       	ldi	r17, 0x04	; 4
		USART1_Transmit_String("| ");
     616:	c0 e0       	ldi	r28, 0x00	; 0
     618:	d0 e0       	ldi	r29, 0x00	; 0
     61a:	8a e4       	ldi	r24, 0x4A	; 74
     61c:	91 e0       	ldi	r25, 0x01	; 1
		USART_Transmit_number(1,p2_deck[jj].number);
     61e:	92 dd       	rcall	.-1244   	; 0x144 <USART1_Transmit_String>
     620:	f8 01       	movw	r30, r16
     622:	60 81       	ld	r22, Z
     624:	81 e0       	ldi	r24, 0x01	; 1
     626:	9c dd       	rcall	.-1224   	; 0x160 <USART_Transmit_number>
		USART1_Transmit_String(" |");
     628:	83 e4       	ldi	r24, 0x43	; 67
     62a:	91 e0       	ldi	r25, 0x01	; 1
     62c:	8b dd       	rcall	.-1258   	; 0x144 <USART1_Transmit_String>
		USART1_Transmit_String("|  ");
		if(p2_deck[jj].color == 0) USART1_Transmit_String("B |");
		else USART1_Transmit_String("W |");
	}
	USART1_Transmit_String("\r\n");
	for(int jj=0; jj<p2_card_cnt;jj++){
     62e:	21 96       	adiw	r28, 0x01	; 1
     630:	0c 5f       	subi	r16, 0xFC	; 252
     632:	1f 4f       	sbci	r17, 0xFF	; 255
     634:	80 91 85 04 	lds	r24, 0x0485	; 0x800485 <p2_card_cnt>
     638:	90 e0       	ldi	r25, 0x00	; 0
     63a:	c8 17       	cp	r28, r24
     63c:	d9 07       	cpc	r29, r25
		USART1_Transmit_String("| ");
		USART_Transmit_number(1,p2_deck[jj].number);
		USART1_Transmit_String(" |");
	}
	USART1_Transmit_String("\r\n");
     63e:	6c f3       	brlt	.-38     	; 0x61a <showP2toP2+0xbc>
     640:	8b e7       	ldi	r24, 0x7B	; 123
     642:	91 e0       	ldi	r25, 0x01	; 1
     644:	7f dd       	rcall	.-1282   	; 0x144 <USART1_Transmit_String>
	for(int jj=0; jj<p2_card_cnt;jj++){
     646:	80 91 85 04 	lds	r24, 0x0485	; 0x800485 <p2_card_cnt>
     64a:	88 23       	and	r24, r24
     64c:	d9 f0       	breq	.+54     	; 0x684 <showP2toP2+0x126>
     64e:	05 ec       	ldi	r16, 0xC5	; 197
     650:	14 e0       	ldi	r17, 0x04	; 4
		USART1_Transmit_String("|  ");
     652:	c0 e0       	ldi	r28, 0x00	; 0
     654:	d0 e0       	ldi	r29, 0x00	; 0
     656:	8e e3       	ldi	r24, 0x3E	; 62
     658:	91 e0       	ldi	r25, 0x01	; 1
		if(p2_deck[jj].opened == 0) USART1_Transmit_String("O |");
     65a:	74 dd       	rcall	.-1304   	; 0x144 <USART1_Transmit_String>
     65c:	f8 01       	movw	r30, r16
     65e:	80 81       	ld	r24, Z
     660:	81 11       	cpse	r24, r1
     662:	04 c0       	rjmp	.+8      	; 0x66c <showP2toP2+0x10e>
     664:	8d e4       	ldi	r24, 0x4D	; 77
     666:	91 e0       	ldi	r25, 0x01	; 1
     668:	6d dd       	rcall	.-1318   	; 0x144 <USART1_Transmit_String>
		else USART1_Transmit_String("X |");
     66a:	03 c0       	rjmp	.+6      	; 0x672 <showP2toP2+0x114>
     66c:	81 e5       	ldi	r24, 0x51	; 81
     66e:	91 e0       	ldi	r25, 0x01	; 1
     670:	69 dd       	rcall	.-1326   	; 0x144 <USART1_Transmit_String>
		USART1_Transmit_String("| ");
		USART_Transmit_number(1,p2_deck[jj].number);
		USART1_Transmit_String(" |");
	}
	USART1_Transmit_String("\r\n");
	for(int jj=0; jj<p2_card_cnt;jj++){
     672:	21 96       	adiw	r28, 0x01	; 1
     674:	0c 5f       	subi	r16, 0xFC	; 252
     676:	1f 4f       	sbci	r17, 0xFF	; 255
     678:	80 91 85 04 	lds	r24, 0x0485	; 0x800485 <p2_card_cnt>
     67c:	90 e0       	ldi	r25, 0x00	; 0
     67e:	c8 17       	cp	r28, r24
     680:	d9 07       	cpc	r29, r25
		USART1_Transmit_String("|  ");
		if(p2_deck[jj].opened == 0) USART1_Transmit_String("O |");
		else USART1_Transmit_String("X |");
	}
	USART1_Transmit_String("\r\n");
     682:	4c f3       	brlt	.-46     	; 0x656 <showP2toP2+0xf8>
     684:	8b e7       	ldi	r24, 0x7B	; 123
     686:	91 e0       	ldi	r25, 0x01	; 1
	for(int jj=0; jj<p2_card_cnt;jj++) USART1_Transmit_String("|----|");
     688:	5d dd       	rcall	.-1350   	; 0x144 <USART1_Transmit_String>
     68a:	80 91 85 04 	lds	r24, 0x0485	; 0x800485 <p2_card_cnt>
     68e:	88 23       	and	r24, r24
     690:	61 f0       	breq	.+24     	; 0x6aa <showP2toP2+0x14c>
     692:	c0 e0       	ldi	r28, 0x00	; 0
     694:	d0 e0       	ldi	r29, 0x00	; 0
     696:	87 e3       	ldi	r24, 0x37	; 55
     698:	91 e0       	ldi	r25, 0x01	; 1
     69a:	54 dd       	rcall	.-1368   	; 0x144 <USART1_Transmit_String>
     69c:	21 96       	adiw	r28, 0x01	; 1
     69e:	80 91 85 04 	lds	r24, 0x0485	; 0x800485 <p2_card_cnt>
     6a2:	90 e0       	ldi	r25, 0x00	; 0
     6a4:	c8 17       	cp	r28, r24
     6a6:	d9 07       	cpc	r29, r25
     6a8:	b4 f3       	brlt	.-20     	; 0x696 <showP2toP2+0x138>
	USART1_Transmit_String("\r\n");
     6aa:	8b e7       	ldi	r24, 0x7B	; 123
     6ac:	91 e0       	ldi	r25, 0x01	; 1
     6ae:	4a dd       	rcall	.-1388   	; 0x144 <USART1_Transmit_String>
     6b0:	df 91       	pop	r29
}
     6b2:	cf 91       	pop	r28
     6b4:	1f 91       	pop	r17
     6b6:	0f 91       	pop	r16
     6b8:	08 95       	ret

000006ba <showP1toP2>:
     6ba:	0f 93       	push	r16
	USART0_Transmit_String("\r\n");
	for(int jj=0; jj<p2_card_cnt;jj++) USART0_Transmit_String("|----|");
	USART0_Transmit_String("\r\n");
}

void showP1toP2 (void){
     6bc:	1f 93       	push	r17
     6be:	cf 93       	push	r28
     6c0:	df 93       	push	r29
	USART1_Transmit_String("P1 Deck : \r\n"); // display P2 deck to P1
     6c2:	81 e7       	ldi	r24, 0x71	; 113
     6c4:	91 e0       	ldi	r25, 0x01	; 1
     6c6:	3e dd       	rcall	.-1412   	; 0x144 <USART1_Transmit_String>
	for(int jj=0; jj<p1_card_cnt;jj++){
     6c8:	80 91 86 04 	lds	r24, 0x0486	; 0x800486 <p1_card_cnt>
     6cc:	88 23       	and	r24, r24
     6ce:	99 f0       	breq	.+38     	; 0x6f6 <showP1toP2+0x3c>
     6d0:	c1 e0       	ldi	r28, 0x01	; 1
     6d2:	d0 e0       	ldi	r29, 0x00	; 0
		USART1_Transmit_String("   ");
     6d4:	83 e3       	ldi	r24, 0x33	; 51
     6d6:	91 e0       	ldi	r25, 0x01	; 1
     6d8:	35 dd       	rcall	.-1430   	; 0x144 <USART1_Transmit_String>
		USART_Transmit_number(1,(char)(jj+1));
     6da:	6c 2f       	mov	r22, r28
     6dc:	81 e0       	ldi	r24, 0x01	; 1
     6de:	40 dd       	rcall	.-1408   	; 0x160 <USART_Transmit_number>
		USART1_Transmit_String(" ");
     6e0:	85 e3       	ldi	r24, 0x35	; 53
     6e2:	91 e0       	ldi	r25, 0x01	; 1
     6e4:	2f dd       	rcall	.-1442   	; 0x144 <USART1_Transmit_String>
     6e6:	9e 01       	movw	r18, r28
	USART0_Transmit_String("\r\n");
}

void showP1toP2 (void){
	USART1_Transmit_String("P1 Deck : \r\n"); // display P2 deck to P1
	for(int jj=0; jj<p1_card_cnt;jj++){
     6e8:	21 96       	adiw	r28, 0x01	; 1
     6ea:	80 91 86 04 	lds	r24, 0x0486	; 0x800486 <p1_card_cnt>
     6ee:	90 e0       	ldi	r25, 0x00	; 0
     6f0:	28 17       	cp	r18, r24
     6f2:	39 07       	cpc	r19, r25
     6f4:	7c f3       	brlt	.-34     	; 0x6d4 <showP1toP2+0x1a>
		USART1_Transmit_String("   ");
		USART_Transmit_number(1,(char)(jj+1));
		USART1_Transmit_String(" ");
	}
	USART1_Transmit_String("\r\n");
     6f6:	8b e7       	ldi	r24, 0x7B	; 123
     6f8:	91 e0       	ldi	r25, 0x01	; 1
     6fa:	24 dd       	rcall	.-1464   	; 0x144 <USART1_Transmit_String>
     6fc:	80 91 86 04 	lds	r24, 0x0486	; 0x800486 <p1_card_cnt>
	for(int jj=0; jj<p1_card_cnt;jj++) USART1_Transmit_String("|----|");
     700:	88 23       	and	r24, r24
     702:	61 f0       	breq	.+24     	; 0x71c <showP1toP2+0x62>
     704:	c0 e0       	ldi	r28, 0x00	; 0
     706:	d0 e0       	ldi	r29, 0x00	; 0
     708:	87 e3       	ldi	r24, 0x37	; 55
     70a:	91 e0       	ldi	r25, 0x01	; 1
     70c:	1b dd       	rcall	.-1482   	; 0x144 <USART1_Transmit_String>
     70e:	21 96       	adiw	r28, 0x01	; 1
     710:	80 91 86 04 	lds	r24, 0x0486	; 0x800486 <p1_card_cnt>
     714:	90 e0       	ldi	r25, 0x00	; 0
     716:	c8 17       	cp	r28, r24
     718:	d9 07       	cpc	r29, r25
     71a:	b4 f3       	brlt	.-20     	; 0x708 <showP1toP2+0x4e>
	USART1_Transmit_String("\r\n");
     71c:	8b e7       	ldi	r24, 0x7B	; 123
     71e:	91 e0       	ldi	r25, 0x01	; 1
     720:	11 dd       	rcall	.-1502   	; 0x144 <USART1_Transmit_String>
     722:	80 91 86 04 	lds	r24, 0x0486	; 0x800486 <p1_card_cnt>
	for(int jj=0; jj<p1_card_cnt;jj++){
     726:	88 23       	and	r24, r24
     728:	d9 f0       	breq	.+54     	; 0x760 <showP1toP2+0xa6>
     72a:	09 e8       	ldi	r16, 0x89	; 137
     72c:	14 e0       	ldi	r17, 0x04	; 4
     72e:	c0 e0       	ldi	r28, 0x00	; 0
     730:	d0 e0       	ldi	r29, 0x00	; 0
		USART1_Transmit_String("|  ");
     732:	8e e3       	ldi	r24, 0x3E	; 62
     734:	91 e0       	ldi	r25, 0x01	; 1
     736:	06 dd       	rcall	.-1524   	; 0x144 <USART1_Transmit_String>
		if(p1_deck[jj].color == 0) USART1_Transmit_String("B |");
     738:	f8 01       	movw	r30, r16
     73a:	80 81       	ld	r24, Z
     73c:	81 11       	cpse	r24, r1
     73e:	04 c0       	rjmp	.+8      	; 0x748 <showP1toP2+0x8e>
     740:	82 e4       	ldi	r24, 0x42	; 66
     742:	91 e0       	ldi	r25, 0x01	; 1
     744:	ff dc       	rcall	.-1538   	; 0x144 <USART1_Transmit_String>
     746:	03 c0       	rjmp	.+6      	; 0x74e <showP1toP2+0x94>
		else USART1_Transmit_String("W |");
     748:	86 e4       	ldi	r24, 0x46	; 70
     74a:	91 e0       	ldi	r25, 0x01	; 1
     74c:	fb dc       	rcall	.-1546   	; 0x144 <USART1_Transmit_String>
     74e:	21 96       	adiw	r28, 0x01	; 1
		USART1_Transmit_String(" ");
	}
	USART1_Transmit_String("\r\n");
	for(int jj=0; jj<p1_card_cnt;jj++) USART1_Transmit_String("|----|");
	USART1_Transmit_String("\r\n");
	for(int jj=0; jj<p1_card_cnt;jj++){
     750:	0c 5f       	subi	r16, 0xFC	; 252
     752:	1f 4f       	sbci	r17, 0xFF	; 255
     754:	80 91 86 04 	lds	r24, 0x0486	; 0x800486 <p1_card_cnt>
     758:	90 e0       	ldi	r25, 0x00	; 0
     75a:	c8 17       	cp	r28, r24
     75c:	d9 07       	cpc	r29, r25
     75e:	4c f3       	brlt	.-46     	; 0x732 <showP1toP2+0x78>
		USART1_Transmit_String("|  ");
		if(p1_deck[jj].color == 0) USART1_Transmit_String("B |");
		else USART1_Transmit_String("W |");
	}
	USART1_Transmit_String("\r\n");
     760:	8b e7       	ldi	r24, 0x7B	; 123
     762:	91 e0       	ldi	r25, 0x01	; 1
     764:	ef dc       	rcall	.-1570   	; 0x144 <USART1_Transmit_String>
	for(int jj=0; jj<p1_card_cnt;jj++){
     766:	80 91 86 04 	lds	r24, 0x0486	; 0x800486 <p1_card_cnt>
     76a:	88 23       	and	r24, r24
     76c:	e9 f0       	breq	.+58     	; 0x7a8 <showP1toP2+0xee>
     76e:	ca e8       	ldi	r28, 0x8A	; 138
     770:	d4 e0       	ldi	r29, 0x04	; 4
     772:	00 e0       	ldi	r16, 0x00	; 0
		USART1_Transmit_String("| ");
     774:	10 e0       	ldi	r17, 0x00	; 0
     776:	8a e4       	ldi	r24, 0x4A	; 74
     778:	91 e0       	ldi	r25, 0x01	; 1
		if(p1_deck[jj].opened == 0) USART1_Transmit_String("XX");
     77a:	e4 dc       	rcall	.-1592   	; 0x144 <USART1_Transmit_String>
     77c:	8a 81       	ldd	r24, Y+2	; 0x02
     77e:	81 11       	cpse	r24, r1
     780:	04 c0       	rjmp	.+8      	; 0x78a <showP1toP2+0xd0>
     782:	82 e6       	ldi	r24, 0x62	; 98
     784:	91 e0       	ldi	r25, 0x01	; 1
     786:	de dc       	rcall	.-1604   	; 0x144 <USART1_Transmit_String>
		else USART_Transmit_number(1,p1_deck[jj].number);
     788:	03 c0       	rjmp	.+6      	; 0x790 <showP1toP2+0xd6>
     78a:	68 81       	ld	r22, Y
     78c:	81 e0       	ldi	r24, 0x01	; 1
     78e:	e8 dc       	rcall	.-1584   	; 0x160 <USART_Transmit_number>
		USART1_Transmit_String(" |");
     790:	83 e4       	ldi	r24, 0x43	; 67
     792:	91 e0       	ldi	r25, 0x01	; 1
     794:	d7 dc       	rcall	.-1618   	; 0x144 <USART1_Transmit_String>
		USART1_Transmit_String("|  ");
		if(p1_deck[jj].color == 0) USART1_Transmit_String("B |");
		else USART1_Transmit_String("W |");
	}
	USART1_Transmit_String("\r\n");
	for(int jj=0; jj<p1_card_cnt;jj++){
     796:	0f 5f       	subi	r16, 0xFF	; 255
     798:	1f 4f       	sbci	r17, 0xFF	; 255
     79a:	24 96       	adiw	r28, 0x04	; 4
     79c:	80 91 86 04 	lds	r24, 0x0486	; 0x800486 <p1_card_cnt>
     7a0:	90 e0       	ldi	r25, 0x00	; 0
     7a2:	08 17       	cp	r16, r24
     7a4:	19 07       	cpc	r17, r25
		if(p1_deck[jj].opened == 0) USART1_Transmit_String("XX");
		else USART_Transmit_number(1,p1_deck[jj].number);
		USART1_Transmit_String(" |");
		
	}
	USART1_Transmit_String("\r\n");
     7a6:	3c f3       	brlt	.-50     	; 0x776 <showP1toP2+0xbc>
     7a8:	8b e7       	ldi	r24, 0x7B	; 123
     7aa:	91 e0       	ldi	r25, 0x01	; 1
     7ac:	cb dc       	rcall	.-1642   	; 0x144 <USART1_Transmit_String>
	for(int jj=0; jj<p1_card_cnt;jj++) USART1_Transmit_String("|----|");
     7ae:	80 91 86 04 	lds	r24, 0x0486	; 0x800486 <p1_card_cnt>
     7b2:	88 23       	and	r24, r24
     7b4:	61 f0       	breq	.+24     	; 0x7ce <showP1toP2+0x114>
     7b6:	c0 e0       	ldi	r28, 0x00	; 0
     7b8:	d0 e0       	ldi	r29, 0x00	; 0
     7ba:	87 e3       	ldi	r24, 0x37	; 55
     7bc:	91 e0       	ldi	r25, 0x01	; 1
     7be:	c2 dc       	rcall	.-1660   	; 0x144 <USART1_Transmit_String>
     7c0:	21 96       	adiw	r28, 0x01	; 1
     7c2:	80 91 86 04 	lds	r24, 0x0486	; 0x800486 <p1_card_cnt>
     7c6:	90 e0       	ldi	r25, 0x00	; 0
     7c8:	c8 17       	cp	r28, r24
     7ca:	d9 07       	cpc	r29, r25
     7cc:	b4 f3       	brlt	.-20     	; 0x7ba <showP1toP2+0x100>
	USART1_Transmit_String("\r\n");
     7ce:	8b e7       	ldi	r24, 0x7B	; 123
     7d0:	91 e0       	ldi	r25, 0x01	; 1
     7d2:	b8 dc       	rcall	.-1680   	; 0x144 <USART1_Transmit_String>
     7d4:	df 91       	pop	r29
}
     7d6:	cf 91       	pop	r28
     7d8:	1f 91       	pop	r17
     7da:	0f 91       	pop	r16
     7dc:	08 95       	ret

000007de <USART1_Receive>:
     7de:	eb e9       	ldi	r30, 0x9B	; 155
void USART1_Transmit_String(char *str){
	while(*str != '\0') USART1_Transmit(*str++);
}

char USART1_Receive(void){
	while(!(UCSR1A & (1<<RXC1))); // Wait for Receive Buffer is empty
     7e0:	f0 e0       	ldi	r31, 0x00	; 0
     7e2:	80 81       	ld	r24, Z
     7e4:	88 23       	and	r24, r24
     7e6:	ec f7       	brge	.-6      	; 0x7e2 <USART1_Receive+0x4>
	return UDR1;
     7e8:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
}
     7ec:	08 95       	ret

000007ee <main>:
struct card_deck deck[NUM_CARD];
struct card_deck p1_deck[NUM_CARD/2];
struct card_deck p2_deck[NUM_CARD/2];

int main(void)
{
     7ee:	2f 92       	push	r2
     7f0:	3f 92       	push	r3
     7f2:	4f 92       	push	r4
     7f4:	5f 92       	push	r5
     7f6:	6f 92       	push	r6
     7f8:	7f 92       	push	r7
     7fa:	8f 92       	push	r8
     7fc:	9f 92       	push	r9
     7fe:	af 92       	push	r10
     800:	bf 92       	push	r11
     802:	cf 92       	push	r12
     804:	df 92       	push	r13
     806:	ef 92       	push	r14
     808:	ff 92       	push	r15
     80a:	0f 93       	push	r16
     80c:	1f 93       	push	r17
     80e:	cf 93       	push	r28
     810:	df 93       	push	r29
     812:	1f 92       	push	r1
     814:	cd b7       	in	r28, 0x3d	; 61
     816:	de b7       	in	r29, 0x3e	; 62
	USART0_Init(103);
     818:	87 e6       	ldi	r24, 0x67	; 103
     81a:	90 e0       	ldi	r25, 0x00	; 0
     81c:	61 dc       	rcall	.-1854   	; 0xe0 <USART0_Init>
	USART1_Init(103);
     81e:	87 e6       	ldi	r24, 0x67	; 103
     820:	90 e0       	ldi	r25, 0x00	; 0
	Timer_Init();
     822:	7d dc       	rcall	.-1798   	; 0x11e <USART1_Init>
     824:	52 dc       	rcall	.-1884   	; 0xca <Timer_Init>
     826:	02 ef       	ldi	r16, 0xF2	; 242
     828:	14 e0       	ldi	r17, 0x04	; 4
     82a:	f8 01       	movw	r30, r16
	
	for(int i=0;i<NUM_CARD;i++){				// 카드 덱 초기화
     82c:	80 e0       	ldi	r24, 0x00	; 0
     82e:	90 e0       	ldi	r25, 0x00	; 0
		if(i%2 == 0){
			deck[i].color = 0;
			deck[i].number = i/2;
		}
		else if(i%2 == 1){
			deck[i].color = 1;
     830:	41 e0       	ldi	r20, 0x01	; 1
	USART0_Init(103);
	USART1_Init(103);
	Timer_Init();
	
	for(int i=0;i<NUM_CARD;i++){				// 카드 덱 초기화
		if(i%2 == 0){
     832:	80 fd       	sbrc	r24, 0
     834:	0c c0       	rjmp	.+24     	; 0x84e <main+0x60>
     836:	df 01       	movw	r26, r30
			deck[i].color = 0;
     838:	10 82       	st	Z, r1
			deck[i].number = i/2;
     83a:	9c 01       	movw	r18, r24
     83c:	99 23       	and	r25, r25
     83e:	14 f4       	brge	.+4      	; 0x844 <main+0x56>
     840:	2f 5f       	subi	r18, 0xFF	; 255
     842:	3f 4f       	sbci	r19, 0xFF	; 255
     844:	35 95       	asr	r19
     846:	27 95       	ror	r18
     848:	11 96       	adiw	r26, 0x01	; 1
     84a:	2c 93       	st	X, r18
     84c:	19 c0       	rjmp	.+50     	; 0x880 <main+0x92>
		}
		else if(i%2 == 1){
     84e:	9c 01       	movw	r18, r24
     850:	21 70       	andi	r18, 0x01	; 1
     852:	30 78       	andi	r19, 0x80	; 128
     854:	33 23       	and	r19, r19
     856:	34 f4       	brge	.+12     	; 0x864 <main+0x76>
     858:	21 50       	subi	r18, 0x01	; 1
     85a:	31 09       	sbc	r19, r1
     85c:	2e 6f       	ori	r18, 0xFE	; 254
     85e:	3f 6f       	ori	r19, 0xFF	; 255
     860:	2f 5f       	subi	r18, 0xFF	; 255
     862:	3f 4f       	sbci	r19, 0xFF	; 255
     864:	21 30       	cpi	r18, 0x01	; 1
     866:	31 05       	cpc	r19, r1
     868:	59 f4       	brne	.+22     	; 0x880 <main+0x92>
     86a:	df 01       	movw	r26, r30
			deck[i].color = 1;
     86c:	40 83       	st	Z, r20
			deck[i].number = i/2;
     86e:	9c 01       	movw	r18, r24
     870:	99 23       	and	r25, r25
     872:	14 f4       	brge	.+4      	; 0x878 <main+0x8a>
     874:	2f 5f       	subi	r18, 0xFF	; 255
     876:	3f 4f       	sbci	r19, 0xFF	; 255
     878:	35 95       	asr	r19
     87a:	27 95       	ror	r18
     87c:	11 96       	adiw	r26, 0x01	; 1
     87e:	2c 93       	st	X, r18
		}
		deck[i].owner = 0;
     880:	12 82       	std	Z+2, r1	; 0x02
		deck[i].opened = 0;
     882:	13 82       	std	Z+3, r1	; 0x03
{
	USART0_Init(103);
	USART1_Init(103);
	Timer_Init();
	
	for(int i=0;i<NUM_CARD;i++){				// 카드 덱 초기화
     884:	01 96       	adiw	r24, 0x01	; 1
     886:	34 96       	adiw	r30, 0x04	; 4
     888:	88 31       	cpi	r24, 0x18	; 24
     88a:	91 05       	cpc	r25, r1
     88c:	91 f6       	brne	.-92     	; 0x832 <main+0x44>
     88e:	e9 e8       	ldi	r30, 0x89	; 137
     890:	f4 e0       	ldi	r31, 0x04	; 4
     892:	8f ef       	ldi	r24, 0xFF	; 255
     894:	84 83       	std	Z+4, r24	; 0x04
     896:	85 83       	std	Z+5, r24	; 0x05
     898:	91 e0       	ldi	r25, 0x01	; 1
     89a:	96 83       	std	Z+6, r25	; 0x06
     89c:	17 82       	std	Z+7, r1	; 0x07
     89e:	e2 ec       	ldi	r30, 0xC2	; 194
     8a0:	f4 e0       	ldi	r31, 0x04	; 4
     8a2:	84 83       	std	Z+4, r24	; 0x04
     8a4:	85 83       	std	Z+5, r24	; 0x05
     8a6:	82 e0       	ldi	r24, 0x02	; 2
     8a8:	86 83       	std	Z+6, r24	; 0x06
     8aa:	17 82       	std	Z+7, r1	; 0x07
    {
		if(state == 0){ // state 0 : checking player 1 connected
			USART0_Transmit_String("Press 0 to start\r\n");
			USART1_Transmit_String("Waiting for Player 1\r\n");
			rx = USART0_Receive();
			if(rx == '0') state = 1;
     8ac:	cc 24       	eor	r12, r12
     8ae:	c3 94       	inc	r12
     8b0:	d1 2c       	mov	r13, r1
			USART0_Transmit_String("--------------------------------------------------------------------\r\n");
			USART1_Transmit_String("--------------------------------------------------------------------\r\n");
		} // state 1 end
		if(state == 2){ // state 2 : give card to players
			while(p1_card_cnt < 4){	// give Player 1 Cards
				random_value = (TCNT0*TCNT2)%NUM_CARD;
     8b2:	0f 2e       	mov	r0, r31
     8b4:	f8 e1       	ldi	r31, 0x18	; 24
     8b6:	6f 2e       	mov	r6, r31
     8b8:	f0 2d       	mov	r31, r0
     8ba:	71 2c       	mov	r7, r1
     8bc:	69 82       	std	Y+1, r6	; 0x01
     8be:	a7 2c       	mov	r10, r7
				if(deck[random_value].owner == 0){
					deck[random_value].owner = 1;
     8c0:	55 24       	eor	r5, r5
     8c2:	53 94       	inc	r5
				}
			}
			while(p2_card_cnt < 4){	// give Player 2 Cards
				random_value = (TCNT0*TCNT2)%NUM_CARD;
				if(deck[random_value].owner == 0){
					deck[random_value].owner = 2;
     8c4:	68 94       	set
     8c6:	44 24       	eor	r4, r4
     8c8:	41 f8       	bld	r4, 1
			}
			showP2toP2();
			USART1_Transmit_String("\r\n");
			showP2toP1();
			showP1toP2();
			state = 10;
     8ca:	0f 2e       	mov	r0, r31
     8cc:	fa e0       	ldi	r31, 0x0A	; 10
     8ce:	ef 2e       	mov	r14, r31
     8d0:	f1 2c       	mov	r15, r1
     8d2:	f0 2d       	mov	r31, r0
		} // state 1 end
		if(state == 2){ // state 2 : give card to players
			while(p1_card_cnt < 4){	// give Player 1 Cards
				random_value = (TCNT0*TCNT2)%NUM_CARD;
				if(deck[random_value].owner == 0){
					deck[random_value].owner = 1;
     8d4:	b5 2c       	mov	r11, r5
			USART0_Transmit_String("--------------------------------------------------------------------\r\n");
			USART1_Transmit_String("--------------------------------------------------------------------\r\n");
			USART0_Transmit_String("Press 0 to start your turn\r\n");
			USART1_Transmit_String("Player 1's turn\r\n");
			rx = USART0_Receive();
			if(rx == '0') state = 11;
     8d6:	0f 2e       	mov	r0, r31
     8d8:	fb e0       	ldi	r31, 0x0B	; 11
     8da:	2f 2e       	mov	r2, r31
     8dc:	31 2c       	mov	r3, r1
     8de:	f0 2d       	mov	r31, r0
		p2_deck[1].owner = 2;
		p2_deck[1].opened = 0;
	}
    while (1) 
    {
		if(state == 0){ // state 0 : checking player 1 connected
     8e0:	80 91 87 04 	lds	r24, 0x0487	; 0x800487 <state>
     8e4:	90 91 88 04 	lds	r25, 0x0488	; 0x800488 <state+0x1>
     8e8:	89 2b       	or	r24, r25
			USART0_Transmit_String("Press 0 to start\r\n");
     8ea:	81 f4       	brne	.+32     	; 0x90c <main+0x11e>
     8ec:	8e e7       	ldi	r24, 0x7E	; 126
     8ee:	91 e0       	ldi	r25, 0x01	; 1
			USART1_Transmit_String("Waiting for Player 1\r\n");
     8f0:	04 dc       	rcall	.-2040   	; 0xfa <USART0_Transmit_String>
     8f2:	81 e9       	ldi	r24, 0x91	; 145
     8f4:	91 e0       	ldi	r25, 0x01	; 1
     8f6:	26 dc       	rcall	.-1972   	; 0x144 <USART1_Transmit_String>
			rx = USART0_Receive();
     8f8:	0e dc       	rcall	.-2020   	; 0x116 <USART0_Receive>
     8fa:	80 93 b9 04 	sts	0x04B9, r24	; 0x8004b9 <rx>
     8fe:	80 33       	cpi	r24, 0x30	; 48
			if(rx == '0') state = 1;
     900:	29 f4       	brne	.+10     	; 0x90c <main+0x11e>
     902:	d0 92 88 04 	sts	0x0488, r13	; 0x800488 <state+0x1>
     906:	c0 92 87 04 	sts	0x0487, r12	; 0x800487 <state>
     90a:	06 c0       	rjmp	.+12     	; 0x918 <main+0x12a>
     90c:	80 91 87 04 	lds	r24, 0x0487	; 0x800487 <state>
		} // state 0 end
		if(state == 1){ // state 1 : checking player 2 connected
     910:	90 91 88 04 	lds	r25, 0x0488	; 0x800488 <state+0x1>
     914:	01 97       	sbiw	r24, 0x01	; 1
     916:	b9 f4       	brne	.+46     	; 0x946 <main+0x158>
			USART0_Transmit_String("Waiting for Player 2\r\n");
     918:	88 ea       	ldi	r24, 0xA8	; 168
     91a:	91 e0       	ldi	r25, 0x01	; 1
     91c:	ee db       	rcall	.-2084   	; 0xfa <USART0_Transmit_String>
			USART1_Transmit_String("Press 0 to start\r\n");
     91e:	8e e7       	ldi	r24, 0x7E	; 126
     920:	91 e0       	ldi	r25, 0x01	; 1
     922:	10 dc       	rcall	.-2016   	; 0x144 <USART1_Transmit_String>
     924:	5c df       	rcall	.-328    	; 0x7de <USART1_Receive>
			rx = USART1_Receive();
     926:	80 93 b9 04 	sts	0x04B9, r24	; 0x8004b9 <rx>
     92a:	80 33       	cpi	r24, 0x30	; 48
     92c:	31 f4       	brne	.+12     	; 0x93a <main+0x14c>
			if(rx == '0') state = 2;
     92e:	82 e0       	ldi	r24, 0x02	; 2
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	90 93 88 04 	sts	0x0488, r25	; 0x800488 <state+0x1>
     936:	80 93 87 04 	sts	0x0487, r24	; 0x800487 <state>
			USART0_Transmit_String("--------------------------------------------------------------------\r\n");
     93a:	8f eb       	ldi	r24, 0xBF	; 191
     93c:	91 e0       	ldi	r25, 0x01	; 1
     93e:	dd db       	rcall	.-2118   	; 0xfa <USART0_Transmit_String>
     940:	8f eb       	ldi	r24, 0xBF	; 191
			USART1_Transmit_String("--------------------------------------------------------------------\r\n");
     942:	91 e0       	ldi	r25, 0x01	; 1
     944:	ff db       	rcall	.-2050   	; 0x144 <USART1_Transmit_String>
     946:	80 91 87 04 	lds	r24, 0x0487	; 0x800487 <state>
		} // state 1 end
		if(state == 2){ // state 2 : give card to players
     94a:	90 91 88 04 	lds	r25, 0x0488	; 0x800488 <state+0x1>
     94e:	82 30       	cpi	r24, 0x02	; 2
     950:	91 05       	cpc	r25, r1
     952:	09 f0       	breq	.+2      	; 0x956 <main+0x168>
     954:	9b c0       	rjmp	.+310    	; 0xa8c <main+0x29e>
     956:	20 c0       	rjmp	.+64     	; 0x998 <main+0x1aa>
     958:	82 b7       	in	r24, 0x32	; 50
			while(p1_card_cnt < 4){	// give Player 1 Cards
				random_value = (TCNT0*TCNT2)%NUM_CARD;
     95a:	94 b5       	in	r25, 0x24	; 36
     95c:	89 9f       	mul	r24, r25
     95e:	c0 01       	movw	r24, r0
     960:	11 24       	eor	r1, r1
     962:	66 2d       	mov	r22, r6
     964:	77 2d       	mov	r23, r7
     966:	bc d4       	rcall	.+2424   	; 0x12e0 <__divmodhi4>
     968:	80 93 c1 04 	sts	0x04C1, r24	; 0x8004c1 <random_value>
     96c:	99 27       	eor	r25, r25
     96e:	fc 01       	movw	r30, r24
     970:	ee 0f       	add	r30, r30
				if(deck[random_value].owner == 0){
     972:	ff 1f       	adc	r31, r31
     974:	ee 0f       	add	r30, r30
     976:	ff 1f       	adc	r31, r31
     978:	ee 50       	subi	r30, 0x0E	; 14
     97a:	fb 4f       	sbci	r31, 0xFB	; 251
     97c:	32 81       	ldd	r19, Z+2	; 0x02
     97e:	31 11       	cpse	r19, r1
     980:	0d c0       	rjmp	.+26     	; 0x99c <main+0x1ae>
     982:	88 0f       	add	r24, r24
     984:	99 1f       	adc	r25, r25
					deck[random_value].owner = 1;
     986:	88 0f       	add	r24, r24
     988:	99 1f       	adc	r25, r25
     98a:	fc 01       	movw	r30, r24
     98c:	ee 50       	subi	r30, 0x0E	; 14
     98e:	fb 4f       	sbci	r31, 0xFB	; 251
     990:	52 82       	std	Z+2, r5	; 0x02
     992:	2f 5f       	subi	r18, 0xFF	; 255
     994:	20 93 86 04 	sts	0x0486, r18	; 0x800486 <p1_card_cnt>
					p1_card_cnt++;
     998:	20 91 86 04 	lds	r18, 0x0486	; 0x800486 <p1_card_cnt>
			if(rx == '0') state = 2;
			USART0_Transmit_String("--------------------------------------------------------------------\r\n");
			USART1_Transmit_String("--------------------------------------------------------------------\r\n");
		} // state 1 end
		if(state == 2){ // state 2 : give card to players
			while(p1_card_cnt < 4){	// give Player 1 Cards
     99c:	24 30       	cpi	r18, 0x04	; 4
     99e:	e0 f2       	brcs	.-72     	; 0x958 <main+0x16a>
     9a0:	20 c0       	rjmp	.+64     	; 0x9e2 <main+0x1f4>
     9a2:	82 b7       	in	r24, 0x32	; 50
					deck[random_value].owner = 1;
					p1_card_cnt++;
				}
			}
			while(p2_card_cnt < 4){	// give Player 2 Cards
				random_value = (TCNT0*TCNT2)%NUM_CARD;
     9a4:	94 b5       	in	r25, 0x24	; 36
     9a6:	89 9f       	mul	r24, r25
     9a8:	c0 01       	movw	r24, r0
     9aa:	11 24       	eor	r1, r1
     9ac:	66 2d       	mov	r22, r6
     9ae:	77 2d       	mov	r23, r7
     9b0:	97 d4       	rcall	.+2350   	; 0x12e0 <__divmodhi4>
     9b2:	80 93 c1 04 	sts	0x04C1, r24	; 0x8004c1 <random_value>
     9b6:	99 27       	eor	r25, r25
     9b8:	fc 01       	movw	r30, r24
     9ba:	ee 0f       	add	r30, r30
				if(deck[random_value].owner == 0){
     9bc:	ff 1f       	adc	r31, r31
     9be:	ee 0f       	add	r30, r30
     9c0:	ff 1f       	adc	r31, r31
     9c2:	ee 50       	subi	r30, 0x0E	; 14
     9c4:	fb 4f       	sbci	r31, 0xFB	; 251
     9c6:	32 81       	ldd	r19, Z+2	; 0x02
     9c8:	31 11       	cpse	r19, r1
     9ca:	0d c0       	rjmp	.+26     	; 0x9e6 <main+0x1f8>
     9cc:	88 0f       	add	r24, r24
     9ce:	99 1f       	adc	r25, r25
					deck[random_value].owner = 2;
     9d0:	88 0f       	add	r24, r24
     9d2:	99 1f       	adc	r25, r25
     9d4:	fc 01       	movw	r30, r24
     9d6:	ee 50       	subi	r30, 0x0E	; 14
     9d8:	fb 4f       	sbci	r31, 0xFB	; 251
     9da:	42 82       	std	Z+2, r4	; 0x02
     9dc:	2f 5f       	subi	r18, 0xFF	; 255
     9de:	20 93 85 04 	sts	0x0485, r18	; 0x800485 <p2_card_cnt>
					p2_card_cnt++;
     9e2:	20 91 85 04 	lds	r18, 0x0485	; 0x800485 <p2_card_cnt>
				if(deck[random_value].owner == 0){
					deck[random_value].owner = 1;
					p1_card_cnt++;
				}
			}
			while(p2_card_cnt < 4){	// give Player 2 Cards
     9e6:	24 30       	cpi	r18, 0x04	; 4
     9e8:	e0 f2       	brcs	.-72     	; 0x9a2 <main+0x1b4>
     9ea:	10 92 84 04 	sts	0x0484, r1	; 0x800484 <temp>
				if(deck[random_value].owner == 0){
					deck[random_value].owner = 2;
					p2_card_cnt++;
				}
			}
			temp = 0;
     9ee:	f8 01       	movw	r30, r16
     9f0:	82 81       	ldd	r24, Z+2	; 0x02
     9f2:	81 30       	cpi	r24, 0x01	; 1
			for(int i=0; i<NUM_CARD; i++){
				if(deck[i].owner == 1){
     9f4:	b1 f4       	brne	.+44     	; 0xa22 <main+0x234>
     9f6:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <temp>
					p1_deck[temp] = deck[i];
     9fa:	a8 2f       	mov	r26, r24
     9fc:	b0 e0       	ldi	r27, 0x00	; 0
     9fe:	aa 0f       	add	r26, r26
     a00:	bb 1f       	adc	r27, r27
     a02:	aa 0f       	add	r26, r26
     a04:	bb 1f       	adc	r27, r27
     a06:	a7 57       	subi	r26, 0x77	; 119
     a08:	bb 4f       	sbci	r27, 0xFB	; 251
     a0a:	40 81       	ld	r20, Z
     a0c:	51 81       	ldd	r21, Z+1	; 0x01
     a0e:	62 81       	ldd	r22, Z+2	; 0x02
     a10:	73 81       	ldd	r23, Z+3	; 0x03
     a12:	4d 93       	st	X+, r20
     a14:	5d 93       	st	X+, r21
     a16:	6d 93       	st	X+, r22
     a18:	7c 93       	st	X, r23
     a1a:	13 97       	sbiw	r26, 0x03	; 3
					temp++;
     a1c:	8f 5f       	subi	r24, 0xFF	; 255
     a1e:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <temp>
     a22:	34 96       	adiw	r30, 0x04	; 4
					deck[random_value].owner = 2;
					p2_card_cnt++;
				}
			}
			temp = 0;
			for(int i=0; i<NUM_CARD; i++){
     a24:	95 e0       	ldi	r25, 0x05	; 5
     a26:	e2 35       	cpi	r30, 0x52	; 82
     a28:	f9 07       	cpc	r31, r25
     a2a:	11 f7       	brne	.-60     	; 0x9f0 <main+0x202>
				if(deck[i].owner == 1){
					p1_deck[temp] = deck[i];
					temp++;
				}
			}
			showP1toP1();
     a2c:	58 dc       	rcall	.-1872   	; 0x2de <showP1toP1>
     a2e:	8b e7       	ldi	r24, 0x7B	; 123
			USART0_Transmit_String("\r\n");
     a30:	91 e0       	ldi	r25, 0x01	; 1
     a32:	63 db       	rcall	.-2362   	; 0xfa <USART0_Transmit_String>
     a34:	10 92 84 04 	sts	0x0484, r1	; 0x800484 <temp>
			temp = 0;
     a38:	f8 01       	movw	r30, r16
     a3a:	82 81       	ldd	r24, Z+2	; 0x02
     a3c:	82 30       	cpi	r24, 0x02	; 2
			for(int i=0; i<NUM_CARD; i++){
				if(deck[i].owner == 2){
     a3e:	b1 f4       	brne	.+44     	; 0xa6c <main+0x27e>
     a40:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <temp>
					p2_deck[temp] = deck[i];
     a44:	a8 2f       	mov	r26, r24
     a46:	b0 e0       	ldi	r27, 0x00	; 0
     a48:	aa 0f       	add	r26, r26
     a4a:	bb 1f       	adc	r27, r27
     a4c:	aa 0f       	add	r26, r26
     a4e:	bb 1f       	adc	r27, r27
     a50:	ae 53       	subi	r26, 0x3E	; 62
     a52:	bb 4f       	sbci	r27, 0xFB	; 251
     a54:	40 81       	ld	r20, Z
     a56:	51 81       	ldd	r21, Z+1	; 0x01
     a58:	62 81       	ldd	r22, Z+2	; 0x02
     a5a:	73 81       	ldd	r23, Z+3	; 0x03
     a5c:	4d 93       	st	X+, r20
     a5e:	5d 93       	st	X+, r21
     a60:	6d 93       	st	X+, r22
     a62:	7c 93       	st	X, r23
					temp++;
     a64:	13 97       	sbiw	r26, 0x03	; 3
     a66:	8f 5f       	subi	r24, 0xFF	; 255
     a68:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <temp>
				}
			}
			showP1toP1();
			USART0_Transmit_String("\r\n");
			temp = 0;
			for(int i=0; i<NUM_CARD; i++){
     a6c:	34 96       	adiw	r30, 0x04	; 4
     a6e:	a5 e0       	ldi	r26, 0x05	; 5
     a70:	e2 35       	cpi	r30, 0x52	; 82
     a72:	fa 07       	cpc	r31, r26
				if(deck[i].owner == 2){
					p2_deck[temp] = deck[i];
					temp++;
				}
			}
			showP2toP2();
     a74:	11 f7       	brne	.-60     	; 0xa3a <main+0x24c>
			USART1_Transmit_String("\r\n");
     a76:	73 dd       	rcall	.-1306   	; 0x55e <showP2toP2>
     a78:	8b e7       	ldi	r24, 0x7B	; 123
     a7a:	91 e0       	ldi	r25, 0x01	; 1
			showP2toP1();
     a7c:	63 db       	rcall	.-2362   	; 0x144 <USART1_Transmit_String>
			showP1toP2();
     a7e:	dd dc       	rcall	.-1606   	; 0x43a <showP2toP1>
			state = 10;
     a80:	1c de       	rcall	.-968    	; 0x6ba <showP1toP2>
     a82:	f0 92 88 04 	sts	0x0488, r15	; 0x800488 <state+0x1>
     a86:	e0 92 87 04 	sts	0x0487, r14	; 0x800487 <state>
		} // state 2 end
		if(state == 10){
     a8a:	02 c0       	rjmp	.+4      	; 0xa90 <main+0x2a2>
			USART0_Transmit_String("--------------------------------------------------------------------\r\n");
     a8c:	0a 97       	sbiw	r24, 0x0a	; 10
     a8e:	c9 f4       	brne	.+50     	; 0xac2 <main+0x2d4>
     a90:	8f eb       	ldi	r24, 0xBF	; 191
     a92:	91 e0       	ldi	r25, 0x01	; 1
			USART1_Transmit_String("--------------------------------------------------------------------\r\n");
     a94:	32 db       	rcall	.-2460   	; 0xfa <USART0_Transmit_String>
     a96:	8f eb       	ldi	r24, 0xBF	; 191
     a98:	91 e0       	ldi	r25, 0x01	; 1
     a9a:	54 db       	rcall	.-2392   	; 0x144 <USART1_Transmit_String>
			USART0_Transmit_String("Press 0 to start your turn\r\n");
     a9c:	86 e0       	ldi	r24, 0x06	; 6
     a9e:	92 e0       	ldi	r25, 0x02	; 2
     aa0:	2c db       	rcall	.-2472   	; 0xfa <USART0_Transmit_String>
     aa2:	83 e2       	ldi	r24, 0x23	; 35
			USART1_Transmit_String("Player 1's turn\r\n");
     aa4:	92 e0       	ldi	r25, 0x02	; 2
     aa6:	4e db       	rcall	.-2404   	; 0x144 <USART1_Transmit_String>
     aa8:	36 db       	rcall	.-2452   	; 0x116 <USART0_Receive>
     aaa:	80 93 b9 04 	sts	0x04B9, r24	; 0x8004b9 <rx>
			rx = USART0_Receive();
     aae:	80 33       	cpi	r24, 0x30	; 48
     ab0:	21 f4       	brne	.+8      	; 0xaba <main+0x2cc>
     ab2:	30 92 88 04 	sts	0x0488, r3	; 0x800488 <state+0x1>
			if(rx == '0') state = 11;
     ab6:	20 92 87 04 	sts	0x0487, r2	; 0x800487 <state>
     aba:	10 92 83 04 	sts	0x0483, r1	; 0x800483 <p1_corr_flag>
     abe:	10 92 82 04 	sts	0x0482, r1	; 0x800482 <__data_end>
			p1_corr_flag = 0;
     ac2:	80 91 87 04 	lds	r24, 0x0487	; 0x800487 <state>
			p2_corr_flag = 0;
     ac6:	90 91 88 04 	lds	r25, 0x0488	; 0x800488 <state+0x1>
		}
		if(state == 11){ // state : give 1 card to player 1
     aca:	8b 30       	cpi	r24, 0x0B	; 11
     acc:	91 05       	cpc	r25, r1
     ace:	09 f0       	breq	.+2      	; 0xad2 <main+0x2e4>
     ad0:	92 c0       	rjmp	.+292    	; 0xbf6 <main+0x408>
     ad2:	e4 ef       	ldi	r30, 0xF4	; 244
     ad4:	f4 e0       	ldi	r31, 0x04	; 4
     ad6:	24 e5       	ldi	r18, 0x54	; 84
     ad8:	35 e0       	ldi	r19, 0x05	; 5
     ada:	90 e0       	ldi	r25, 0x00	; 0
     adc:	80 81       	ld	r24, Z
     ade:	81 11       	cpse	r24, r1
     ae0:	01 c0       	rjmp	.+2      	; 0xae4 <main+0x2f6>
			temp = 0;
			for(int i=0;i<NUM_CARD;i++){
				if(deck[i].owner == 0) temp++;
     ae2:	9f 5f       	subi	r25, 0xFF	; 255
     ae4:	34 96       	adiw	r30, 0x04	; 4
     ae6:	e2 17       	cp	r30, r18
     ae8:	f3 07       	cpc	r31, r19
			p1_corr_flag = 0;
			p2_corr_flag = 0;
		}
		if(state == 11){ // state : give 1 card to player 1
			temp = 0;
			for(int i=0;i<NUM_CARD;i++){
     aea:	c1 f7       	brne	.-16     	; 0xadc <main+0x2ee>
     aec:	90 93 84 04 	sts	0x0484, r25	; 0x800484 <temp>
     af0:	99 23       	and	r25, r25
     af2:	09 f4       	brne	.+2      	; 0xaf6 <main+0x308>
				if(deck[i].owner == 0) temp++;
			}
			if(temp != 0){
     af4:	53 c0       	rjmp	.+166    	; 0xb9c <main+0x3ae>
     af6:	80 91 86 04 	lds	r24, 0x0486	; 0x800486 <p1_card_cnt>
				temp = p1_card_cnt + 1;
     afa:	8f 5f       	subi	r24, 0xFF	; 255
     afc:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <temp>
     b00:	45 c0       	rjmp	.+138    	; 0xb8c <main+0x39e>
     b02:	82 b7       	in	r24, 0x32	; 50
				while(p1_card_cnt < temp){
     b04:	94 b5       	in	r25, 0x24	; 36
					random_value = (TCNT0*TCNT2)%NUM_CARD;
     b06:	89 9f       	mul	r24, r25
     b08:	c0 01       	movw	r24, r0
     b0a:	11 24       	eor	r1, r1
     b0c:	66 2d       	mov	r22, r6
     b0e:	77 2d       	mov	r23, r7
     b10:	e7 d3       	rcall	.+1998   	; 0x12e0 <__divmodhi4>
     b12:	80 93 c1 04 	sts	0x04C1, r24	; 0x8004c1 <random_value>
     b16:	99 27       	eor	r25, r25
     b18:	fc 01       	movw	r30, r24
     b1a:	ee 0f       	add	r30, r30
					if(deck[random_value].owner == 0){
     b1c:	ff 1f       	adc	r31, r31
     b1e:	ee 0f       	add	r30, r30
     b20:	ff 1f       	adc	r31, r31
     b22:	ee 50       	subi	r30, 0x0E	; 14
     b24:	fb 4f       	sbci	r31, 0xFB	; 251
     b26:	42 81       	ldd	r20, Z+2	; 0x02
     b28:	41 11       	cpse	r20, r1
     b2a:	34 c0       	rjmp	.+104    	; 0xb94 <main+0x3a6>
     b2c:	88 0f       	add	r24, r24
     b2e:	99 1f       	adc	r25, r25
						deck[random_value].owner = 1;
     b30:	88 0f       	add	r24, r24
     b32:	99 1f       	adc	r25, r25
     b34:	fc 01       	movw	r30, r24
     b36:	ee 50       	subi	r30, 0x0E	; 14
     b38:	fb 4f       	sbci	r31, 0xFB	; 251
     b3a:	52 82       	std	Z+2, r5	; 0x02
     b3c:	2f 5f       	subi	r18, 0xFF	; 255
						p1_card_cnt++;
     b3e:	20 93 86 04 	sts	0x0486, r18	; 0x800486 <p1_card_cnt>
     b42:	85 e3       	ldi	r24, 0x35	; 53
						USART0_Transmit_String("You get ");
     b44:	92 e0       	ldi	r25, 0x02	; 2
     b46:	d9 da       	rcall	.-2638   	; 0xfa <USART0_Transmit_String>
     b48:	e0 91 c1 04 	lds	r30, 0x04C1	; 0x8004c1 <random_value>
						if(deck[random_value].color == 0) USART0_Transmit_String("Black ");
     b4c:	f0 e0       	ldi	r31, 0x00	; 0
     b4e:	ee 0f       	add	r30, r30
     b50:	ff 1f       	adc	r31, r31
     b52:	ee 0f       	add	r30, r30
     b54:	ff 1f       	adc	r31, r31
     b56:	ee 50       	subi	r30, 0x0E	; 14
     b58:	fb 4f       	sbci	r31, 0xFB	; 251
     b5a:	80 81       	ld	r24, Z
     b5c:	81 11       	cpse	r24, r1
     b5e:	04 c0       	rjmp	.+8      	; 0xb68 <main+0x37a>
     b60:	8e e3       	ldi	r24, 0x3E	; 62
     b62:	92 e0       	ldi	r25, 0x02	; 2
     b64:	ca da       	rcall	.-2668   	; 0xfa <USART0_Transmit_String>
     b66:	03 c0       	rjmp	.+6      	; 0xb6e <main+0x380>
     b68:	85 e4       	ldi	r24, 0x45	; 69
						else USART0_Transmit_String("White ");
     b6a:	92 e0       	ldi	r25, 0x02	; 2
     b6c:	c6 da       	rcall	.-2676   	; 0xfa <USART0_Transmit_String>
     b6e:	e0 91 c1 04 	lds	r30, 0x04C1	; 0x8004c1 <random_value>
						USART_Transmit_number(0,deck[random_value].number);
     b72:	f0 e0       	ldi	r31, 0x00	; 0
     b74:	ee 0f       	add	r30, r30
     b76:	ff 1f       	adc	r31, r31
     b78:	ee 0f       	add	r30, r30
     b7a:	ff 1f       	adc	r31, r31
     b7c:	ee 50       	subi	r30, 0x0E	; 14
     b7e:	fb 4f       	sbci	r31, 0xFB	; 251
     b80:	61 81       	ldd	r22, Z+1	; 0x01
     b82:	80 e0       	ldi	r24, 0x00	; 0
     b84:	ed da       	rcall	.-2598   	; 0x160 <USART_Transmit_number>
     b86:	8b e7       	ldi	r24, 0x7B	; 123
     b88:	91 e0       	ldi	r25, 0x01	; 1
						USART0_Transmit_String("\r\n");
     b8a:	b7 da       	rcall	.-2706   	; 0xfa <USART0_Transmit_String>
     b8c:	20 91 86 04 	lds	r18, 0x0486	; 0x800486 <p1_card_cnt>
     b90:	30 91 84 04 	lds	r19, 0x0484	; 0x800484 <temp>
			for(int i=0;i<NUM_CARD;i++){
				if(deck[i].owner == 0) temp++;
			}
			if(temp != 0){
				temp = p1_card_cnt + 1;
				while(p1_card_cnt < temp){
     b94:	23 17       	cp	r18, r19
     b96:	08 f4       	brcc	.+2      	; 0xb9a <main+0x3ac>
     b98:	b4 cf       	rjmp	.-152    	; 0xb02 <main+0x314>
     b9a:	03 c0       	rjmp	.+6      	; 0xba2 <main+0x3b4>
     b9c:	8c e4       	ldi	r24, 0x4C	; 76
     b9e:	92 e0       	ldi	r25, 0x02	; 2
     ba0:	ac da       	rcall	.-2728   	; 0xfa <USART0_Transmit_String>
						USART_Transmit_number(0,deck[random_value].number);
						USART0_Transmit_String("\r\n");
					}
				}
			}
			else USART0_Transmit_String("There is no card on field\r\n");
     ba2:	10 92 84 04 	sts	0x0484, r1	; 0x800484 <temp>
     ba6:	f8 01       	movw	r30, r16
     ba8:	82 81       	ldd	r24, Z+2	; 0x02
			temp = 0;
     baa:	81 30       	cpi	r24, 0x01	; 1
     bac:	b1 f4       	brne	.+44     	; 0xbda <main+0x3ec>
			for(int i=0; i<NUM_CARD; i++){
				if(deck[i].owner == 1){
     bae:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <temp>
					p1_deck[temp] = deck[i];
     bb2:	a8 2f       	mov	r26, r24
     bb4:	b0 e0       	ldi	r27, 0x00	; 0
     bb6:	aa 0f       	add	r26, r26
     bb8:	bb 1f       	adc	r27, r27
     bba:	aa 0f       	add	r26, r26
     bbc:	bb 1f       	adc	r27, r27
     bbe:	a7 57       	subi	r26, 0x77	; 119
     bc0:	bb 4f       	sbci	r27, 0xFB	; 251
     bc2:	40 81       	ld	r20, Z
     bc4:	51 81       	ldd	r21, Z+1	; 0x01
     bc6:	62 81       	ldd	r22, Z+2	; 0x02
     bc8:	73 81       	ldd	r23, Z+3	; 0x03
     bca:	4d 93       	st	X+, r20
     bcc:	5d 93       	st	X+, r21
     bce:	6d 93       	st	X+, r22
     bd0:	7c 93       	st	X, r23
     bd2:	13 97       	sbiw	r26, 0x03	; 3
     bd4:	8f 5f       	subi	r24, 0xFF	; 255
					temp++;
     bd6:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <temp>
     bda:	34 96       	adiw	r30, 0x04	; 4
					}
				}
			}
			else USART0_Transmit_String("There is no card on field\r\n");
			temp = 0;
			for(int i=0; i<NUM_CARD; i++){
     bdc:	b5 e0       	ldi	r27, 0x05	; 5
     bde:	e2 35       	cpi	r30, 0x52	; 82
				if(deck[i].owner == 1){
					p1_deck[temp] = deck[i];
					temp++;
				}
			}
			showP1toP1();
     be0:	fb 07       	cpc	r31, r27
			showP2toP1();
     be2:	11 f7       	brne	.-60     	; 0xba8 <main+0x3ba>
     be4:	7c db       	rcall	.-2312   	; 0x2de <showP1toP1>
			state = 12;
     be6:	29 dc       	rcall	.-1966   	; 0x43a <showP2toP1>
     be8:	8c e0       	ldi	r24, 0x0C	; 12
     bea:	90 e0       	ldi	r25, 0x00	; 0
     bec:	90 93 88 04 	sts	0x0488, r25	; 0x800488 <state+0x1>
     bf0:	80 93 87 04 	sts	0x0487, r24	; 0x800487 <state>
		}
		if(state == 12){ // state 5
     bf4:	03 c0       	rjmp	.+6      	; 0xbfc <main+0x40e>
     bf6:	0c 97       	sbiw	r24, 0x0c	; 12
     bf8:	09 f0       	breq	.+2      	; 0xbfc <main+0x40e>
			//_delay_ms(1);
			if(p1_corr_flag == 0) USART0_Transmit_String("Choose card to open : ");
     bfa:	3d c0       	rjmp	.+122    	; 0xc76 <main+0x488>
     bfc:	80 91 83 04 	lds	r24, 0x0483	; 0x800483 <p1_corr_flag>
     c00:	81 11       	cpse	r24, r1
     c02:	04 c0       	rjmp	.+8      	; 0xc0c <main+0x41e>
     c04:	88 e6       	ldi	r24, 0x68	; 104
     c06:	92 e0       	ldi	r25, 0x02	; 2
     c08:	78 da       	rcall	.-2832   	; 0xfa <USART0_Transmit_String>
     c0a:	05 c0       	rjmp	.+10     	; 0xc16 <main+0x428>
			else if(p1_corr_flag == 1) USART0_Transmit_String("Choose card to open, Press p to pass : "); // 몇 번째에 있는 카드 선택인지
     c0c:	81 30       	cpi	r24, 0x01	; 1
     c0e:	19 f4       	brne	.+6      	; 0xc16 <main+0x428>
     c10:	8f e7       	ldi	r24, 0x7F	; 127
     c12:	92 e0       	ldi	r25, 0x02	; 2
     c14:	72 da       	rcall	.-2844   	; 0xfa <USART0_Transmit_String>
			USART1_Transmit_String("Player 1 is checking your card...\r\n");
     c16:	87 ea       	ldi	r24, 0xA7	; 167
     c18:	92 e0       	ldi	r25, 0x02	; 2
     c1a:	94 da       	rcall	.-2776   	; 0x144 <USART1_Transmit_String>
			rx = USART0_Receive();
     c1c:	7c da       	rcall	.-2824   	; 0x116 <USART0_Receive>
     c1e:	80 93 b9 04 	sts	0x04B9, r24	; 0x8004b9 <rx>
			USART0_Transmit(rx);
     c22:	67 da       	rcall	.-2866   	; 0xf2 <USART0_Transmit>
     c24:	90 91 b9 04 	lds	r25, 0x04B9	; 0x8004b9 <rx>
			if((rx >= '0')&&(rx <= '9')){
     c28:	80 ed       	ldi	r24, 0xD0	; 208
     c2a:	89 0f       	add	r24, r25
     c2c:	8a 30       	cpi	r24, 0x0A	; 10
     c2e:	68 f4       	brcc	.+26     	; 0xc4a <main+0x45c>
     c30:	80 93 ba 04 	sts	0x04BA, r24	; 0x8004ba <get_number_1>
				get_number_1[0] = rx-48;
     c34:	2d e0       	ldi	r18, 0x0D	; 13
				state = 13;
     c36:	30 e0       	ldi	r19, 0x00	; 0
     c38:	30 93 88 04 	sts	0x0488, r19	; 0x800488 <state+0x1>
     c3c:	20 93 87 04 	sts	0x0487, r18	; 0x800487 <state>
			}
			if(p1_corr_flag == 1 && rx == 'p'){
     c40:	80 91 83 04 	lds	r24, 0x0483	; 0x800483 <p1_corr_flag>
     c44:	81 30       	cpi	r24, 0x01	; 1
     c46:	e9 f4       	brne	.+58     	; 0xc82 <main+0x494>
     c48:	31 c3       	rjmp	.+1634   	; 0x12ac <__stack+0x1ad>
     c4a:	80 91 83 04 	lds	r24, 0x0483	; 0x800483 <p1_corr_flag>
     c4e:	81 30       	cpi	r24, 0x01	; 1
     c50:	91 f4       	brne	.+36     	; 0xc76 <main+0x488>
				USART0_Transmit_String("\r\n");
     c52:	90 37       	cpi	r25, 0x70	; 112
     c54:	81 f4       	brne	.+32     	; 0xc76 <main+0x488>
     c56:	8b e7       	ldi	r24, 0x7B	; 123
     c58:	91 e0       	ldi	r25, 0x01	; 1
				USART0_Transmit_String("Passed\r\n");
     c5a:	4f da       	rcall	.-2914   	; 0xfa <USART0_Transmit_String>
     c5c:	8b ec       	ldi	r24, 0xCB	; 203
     c5e:	92 e0       	ldi	r25, 0x02	; 2
     c60:	4c da       	rcall	.-2920   	; 0xfa <USART0_Transmit_String>
				USART1_Transmit_String("Player 1 passed, It's your turn\r\n");
     c62:	84 ed       	ldi	r24, 0xD4	; 212
     c64:	92 e0       	ldi	r25, 0x02	; 2
     c66:	6e da       	rcall	.-2852   	; 0x144 <USART1_Transmit_String>
     c68:	84 e1       	ldi	r24, 0x14	; 20
				state = 20;
     c6a:	90 e0       	ldi	r25, 0x00	; 0
     c6c:	90 93 88 04 	sts	0x0488, r25	; 0x800488 <state+0x1>
     c70:	80 93 87 04 	sts	0x0487, r24	; 0x800487 <state>
     c74:	42 c0       	rjmp	.+132    	; 0xcfa <main+0x50c>
     c76:	80 91 87 04 	lds	r24, 0x0487	; 0x800487 <state>
			}
		} // state 3 end
		if(state == 13){ // state 4
     c7a:	90 91 88 04 	lds	r25, 0x0488	; 0x800488 <state+0x1>
     c7e:	0d 97       	sbiw	r24, 0x0d	; 13
     c80:	09 f5       	brne	.+66     	; 0xcc4 <main+0x4d6>
     c82:	10 92 83 04 	sts	0x0483, r1	; 0x800483 <p1_corr_flag>
			p1_corr_flag = 0;
			rx = USART0_Receive();
     c86:	47 da       	rcall	.-2930   	; 0x116 <USART0_Receive>
     c88:	80 93 b9 04 	sts	0x04B9, r24	; 0x8004b9 <rx>
			USART0_Transmit(rx);
     c8c:	32 da       	rcall	.-2972   	; 0xf2 <USART0_Transmit>
     c8e:	8b e7       	ldi	r24, 0x7B	; 123
			USART0_Transmit_String("\r\n");
     c90:	91 e0       	ldi	r25, 0x01	; 1
     c92:	33 da       	rcall	.-2970   	; 0xfa <USART0_Transmit_String>
     c94:	80 91 b9 04 	lds	r24, 0x04B9	; 0x8004b9 <rx>
			if((rx >= '0')&&(rx <= '9')){
     c98:	80 53       	subi	r24, 0x30	; 48
     c9a:	8a 30       	cpi	r24, 0x0A	; 10
     c9c:	98 f4       	brcc	.+38     	; 0xcc4 <main+0x4d6>
     c9e:	ea eb       	ldi	r30, 0xBA	; 186
     ca0:	f4 e0       	ldi	r31, 0x04	; 4
				get_number_1[1] = rx-48;
     ca2:	81 83       	std	Z+1, r24	; 0x01
     ca4:	90 81       	ld	r25, Z
     ca6:	99 0f       	add	r25, r25
				get_number_1[2] = get_number_1[0]*10 + get_number_1[1] - 1;
     ca8:	29 2f       	mov	r18, r25
     caa:	22 0f       	add	r18, r18
     cac:	22 0f       	add	r18, r18
     cae:	92 0f       	add	r25, r18
     cb0:	89 0f       	add	r24, r25
     cb2:	81 50       	subi	r24, 0x01	; 1
     cb4:	82 83       	std	Z+2, r24	; 0x02
     cb6:	8e e0       	ldi	r24, 0x0E	; 14
				//_delay_ms(1);
				state = 14;
     cb8:	90 e0       	ldi	r25, 0x00	; 0
     cba:	90 93 88 04 	sts	0x0488, r25	; 0x800488 <state+0x1>
     cbe:	80 93 87 04 	sts	0x0487, r24	; 0x800487 <state>
     cc2:	06 c0       	rjmp	.+12     	; 0xcd0 <main+0x4e2>
			}
		} // state 4 end
		if(state == 14){ // state 5
     cc4:	80 91 87 04 	lds	r24, 0x0487	; 0x800487 <state>
     cc8:	90 91 88 04 	lds	r25, 0x0488	; 0x800488 <state+0x1>
     ccc:	0e 97       	sbiw	r24, 0x0e	; 14
     cce:	a9 f4       	brne	.+42     	; 0xcfa <main+0x50c>
			USART0_Transmit_String("Number? : "); // 카드가 무엇인지
     cd0:	86 ef       	ldi	r24, 0xF6	; 246
     cd2:	92 e0       	ldi	r25, 0x02	; 2
     cd4:	12 da       	rcall	.-3036   	; 0xfa <USART0_Transmit_String>
     cd6:	1f da       	rcall	.-3010   	; 0x116 <USART0_Receive>
			rx = USART0_Receive();
     cd8:	80 93 b9 04 	sts	0x04B9, r24	; 0x8004b9 <rx>
     cdc:	0a da       	rcall	.-3052   	; 0xf2 <USART0_Transmit>
     cde:	80 91 b9 04 	lds	r24, 0x04B9	; 0x8004b9 <rx>
			USART0_Transmit(rx);
     ce2:	80 53       	subi	r24, 0x30	; 48
			if((rx >= '0')&&(rx <= '9')){
     ce4:	8a 30       	cpi	r24, 0x0A	; 10
     ce6:	48 f4       	brcc	.+18     	; 0xcfa <main+0x50c>
     ce8:	80 93 bd 04 	sts	0x04BD, r24	; 0x8004bd <get_number_2>
     cec:	8f e0       	ldi	r24, 0x0F	; 15
				get_number_2[0] = rx-48;
     cee:	90 e0       	ldi	r25, 0x00	; 0
     cf0:	90 93 88 04 	sts	0x0488, r25	; 0x800488 <state+0x1>
				state = 15;
     cf4:	80 93 87 04 	sts	0x0487, r24	; 0x800487 <state>
     cf8:	06 c0       	rjmp	.+12     	; 0xd06 <main+0x518>
     cfa:	80 91 87 04 	lds	r24, 0x0487	; 0x800487 <state>
     cfe:	90 91 88 04 	lds	r25, 0x0488	; 0x800488 <state+0x1>
			}
		} // state 5 end
		if(state == 15){ // state 15
     d02:	0f 97       	sbiw	r24, 0x0f	; 15
     d04:	f1 f4       	brne	.+60     	; 0xd42 <main+0x554>
     d06:	07 da       	rcall	.-3058   	; 0x116 <USART0_Receive>
     d08:	80 93 b9 04 	sts	0x04B9, r24	; 0x8004b9 <rx>
			rx = USART0_Receive();
     d0c:	f2 d9       	rcall	.-3100   	; 0xf2 <USART0_Transmit>
     d0e:	8b e7       	ldi	r24, 0x7B	; 123
     d10:	91 e0       	ldi	r25, 0x01	; 1
     d12:	f3 d9       	rcall	.-3098   	; 0xfa <USART0_Transmit_String>
			USART0_Transmit(rx);
     d14:	80 91 b9 04 	lds	r24, 0x04B9	; 0x8004b9 <rx>
			USART0_Transmit_String("\r\n");
     d18:	80 53       	subi	r24, 0x30	; 48
     d1a:	8a 30       	cpi	r24, 0x0A	; 10
     d1c:	90 f4       	brcc	.+36     	; 0xd42 <main+0x554>
			if((rx >= '0')&&(rx <= '9')){
     d1e:	ed eb       	ldi	r30, 0xBD	; 189
     d20:	f4 e0       	ldi	r31, 0x04	; 4
     d22:	81 83       	std	Z+1, r24	; 0x01
     d24:	90 81       	ld	r25, Z
				get_number_2[1] = rx-48;
     d26:	99 0f       	add	r25, r25
     d28:	29 2f       	mov	r18, r25
     d2a:	22 0f       	add	r18, r18
				get_number_2[2] = get_number_2[0]*10 + get_number_2[1];
     d2c:	22 0f       	add	r18, r18
     d2e:	92 0f       	add	r25, r18
     d30:	89 0f       	add	r24, r25
     d32:	82 83       	std	Z+2, r24	; 0x02
     d34:	80 e1       	ldi	r24, 0x10	; 16
     d36:	90 e0       	ldi	r25, 0x00	; 0
     d38:	90 93 88 04 	sts	0x0488, r25	; 0x800488 <state+0x1>
				state = 16;
     d3c:	80 93 87 04 	sts	0x0487, r24	; 0x800487 <state>
     d40:	07 c0       	rjmp	.+14     	; 0xd50 <main+0x562>
     d42:	80 91 87 04 	lds	r24, 0x0487	; 0x800487 <state>
			}
		} // state 15 end
		if(state == 16){ // state 16
     d46:	90 91 88 04 	lds	r25, 0x0488	; 0x800488 <state+0x1>
     d4a:	40 97       	sbiw	r24, 0x10	; 16
     d4c:	09 f0       	breq	.+2      	; 0xd50 <main+0x562>
     d4e:	92 c0       	rjmp	.+292    	; 0xe74 <main+0x686>
     d50:	e0 91 bc 04 	lds	r30, 0x04BC	; 0x8004bc <get_number_1+0x2>
			temp = p2_deck[(int)get_number_1[2]].number;
     d54:	f0 e0       	ldi	r31, 0x00	; 0
     d56:	ee 0f       	add	r30, r30
     d58:	ff 1f       	adc	r31, r31
     d5a:	ee 0f       	add	r30, r30
     d5c:	ff 1f       	adc	r31, r31
     d5e:	ee 53       	subi	r30, 0x3E	; 62
     d60:	fb 4f       	sbci	r31, 0xFB	; 251
     d62:	81 81       	ldd	r24, Z+1	; 0x01
     d64:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <temp>
     d68:	90 91 bf 04 	lds	r25, 0x04BF	; 0x8004bf <get_number_2+0x2>
			if(temp == get_number_2[2]){
     d6c:	89 13       	cpse	r24, r25
     d6e:	75 c0       	rjmp	.+234    	; 0xe5a <main+0x66c>
				USART0_Transmit_String("Correct\r\n");
     d70:	81 e0       	ldi	r24, 0x01	; 1
     d72:	93 e0       	ldi	r25, 0x03	; 3
     d74:	c2 d9       	rcall	.-3196   	; 0xfa <USART0_Transmit_String>
     d76:	8b e0       	ldi	r24, 0x0B	; 11
				USART1_Transmit_String("Player 1 get your ");
     d78:	93 e0       	ldi	r25, 0x03	; 3
     d7a:	e4 d9       	rcall	.-3128   	; 0x144 <USART1_Transmit_String>
     d7c:	e0 91 bc 04 	lds	r30, 0x04BC	; 0x8004bc <get_number_1+0x2>
				if(p2_deck[(int)get_number_1[2]].color == 0) USART1_Transmit_String("Black ");
     d80:	f0 e0       	ldi	r31, 0x00	; 0
     d82:	ee 0f       	add	r30, r30
     d84:	ff 1f       	adc	r31, r31
     d86:	ee 0f       	add	r30, r30
     d88:	ff 1f       	adc	r31, r31
     d8a:	ee 53       	subi	r30, 0x3E	; 62
     d8c:	fb 4f       	sbci	r31, 0xFB	; 251
     d8e:	80 81       	ld	r24, Z
     d90:	81 11       	cpse	r24, r1
     d92:	04 c0       	rjmp	.+8      	; 0xd9c <main+0x5ae>
     d94:	8e e3       	ldi	r24, 0x3E	; 62
     d96:	92 e0       	ldi	r25, 0x02	; 2
     d98:	d5 d9       	rcall	.-3158   	; 0x144 <USART1_Transmit_String>
     d9a:	03 c0       	rjmp	.+6      	; 0xda2 <main+0x5b4>
     d9c:	85 e4       	ldi	r24, 0x45	; 69
     d9e:	92 e0       	ldi	r25, 0x02	; 2
     da0:	d1 d9       	rcall	.-3166   	; 0x144 <USART1_Transmit_String>
				else USART1_Transmit_String("White ");
     da2:	0f 2e       	mov	r0, r31
     da4:	fa eb       	ldi	r31, 0xBA	; 186
     da6:	8f 2e       	mov	r8, r31
     da8:	f4 e0       	ldi	r31, 0x04	; 4
				USART_Transmit_number(1,p2_deck[(int)get_number_1[2]].number);
     daa:	9f 2e       	mov	r9, r31
     dac:	f0 2d       	mov	r31, r0
     dae:	d4 01       	movw	r26, r8
     db0:	12 96       	adiw	r26, 0x02	; 2
     db2:	ec 91       	ld	r30, X
     db4:	f0 e0       	ldi	r31, 0x00	; 0
     db6:	ee 0f       	add	r30, r30
     db8:	ff 1f       	adc	r31, r31
     dba:	ee 0f       	add	r30, r30
     dbc:	ff 1f       	adc	r31, r31
     dbe:	ee 53       	subi	r30, 0x3E	; 62
     dc0:	fb 4f       	sbci	r31, 0xFB	; 251
     dc2:	61 81       	ldd	r22, Z+1	; 0x01
     dc4:	85 2d       	mov	r24, r5
     dc6:	cc d9       	rcall	.-3176   	; 0x160 <USART_Transmit_number>
     dc8:	8b e7       	ldi	r24, 0x7B	; 123
     dca:	91 e0       	ldi	r25, 0x01	; 1
     dcc:	bb d9       	rcall	.-3210   	; 0x144 <USART1_Transmit_String>
     dce:	f4 01       	movw	r30, r8
     dd0:	22 81       	ldd	r18, Z+2	; 0x02
				USART1_Transmit_String("\r\n");
     dd2:	30 e0       	ldi	r19, 0x00	; 0
     dd4:	f9 01       	movw	r30, r18
     dd6:	ee 0f       	add	r30, r30
     dd8:	ff 1f       	adc	r31, r31
				p2_deck[(int)get_number_1[2]].opened = 1;
     dda:	ee 0f       	add	r30, r30
     ddc:	ff 1f       	adc	r31, r31
     dde:	ee 53       	subi	r30, 0x3E	; 62
     de0:	fb 4f       	sbci	r31, 0xFB	; 251
     de2:	53 82       	std	Z+3, r5	; 0x03
     de4:	91 81       	ldd	r25, Z+1	; 0x01
     de6:	f8 01       	movw	r30, r16
     de8:	22 0f       	add	r18, r18
     dea:	33 1f       	adc	r19, r19
     dec:	22 0f       	add	r18, r18
     dee:	33 1f       	adc	r19, r19
				for(int i=0;i<NUM_CARD;i++){
					if(deck[i].number == p2_deck[(int)get_number_1[2]].number){
     df0:	2e 53       	subi	r18, 0x3E	; 62
						if(deck[i].color == p2_deck[(int)get_number_1[2]].color){
     df2:	3b 4f       	sbci	r19, 0xFB	; 251
     df4:	81 81       	ldd	r24, Z+1	; 0x01
     df6:	89 13       	cpse	r24, r25
     df8:	06 c0       	rjmp	.+12     	; 0xe06 <main+0x618>
     dfa:	40 81       	ld	r20, Z
				else USART1_Transmit_String("White ");
				USART_Transmit_number(1,p2_deck[(int)get_number_1[2]].number);
				USART1_Transmit_String("\r\n");
				p2_deck[(int)get_number_1[2]].opened = 1;
				for(int i=0;i<NUM_CARD;i++){
					if(deck[i].number == p2_deck[(int)get_number_1[2]].number){
     dfc:	d9 01       	movw	r26, r18
     dfe:	8c 91       	ld	r24, X
						if(deck[i].color == p2_deck[(int)get_number_1[2]].color){
     e00:	48 13       	cpse	r20, r24
     e02:	01 c0       	rjmp	.+2      	; 0xe06 <main+0x618>
     e04:	53 82       	std	Z+3, r5	; 0x03
     e06:	34 96       	adiw	r30, 0x04	; 4
     e08:	b5 e0       	ldi	r27, 0x05	; 5
							deck[i].opened = 1;
     e0a:	e2 35       	cpi	r30, 0x52	; 82
     e0c:	fb 07       	cpc	r31, r27
				if(p2_deck[(int)get_number_1[2]].color == 0) USART1_Transmit_String("Black ");
				else USART1_Transmit_String("White ");
				USART_Transmit_number(1,p2_deck[(int)get_number_1[2]].number);
				USART1_Transmit_String("\r\n");
				p2_deck[(int)get_number_1[2]].opened = 1;
				for(int i=0;i<NUM_CARD;i++){
     e0e:	91 f7       	brne	.-28     	; 0xdf4 <main+0x606>
     e10:	b0 92 83 04 	sts	0x0483, r11	; 0x800483 <p1_corr_flag>
     e14:	e5 ec       	ldi	r30, 0xC5	; 197
						if(deck[i].color == p2_deck[(int)get_number_1[2]].color){
							deck[i].opened = 1;
						}
					}
				}
				p1_corr_flag = 1;
     e16:	f4 e0       	ldi	r31, 0x04	; 4
     e18:	25 ef       	ldi	r18, 0xF5	; 245
     e1a:	34 e0       	ldi	r19, 0x04	; 4
     e1c:	90 e0       	ldi	r25, 0x00	; 0
     e1e:	80 81       	ld	r24, Z
     e20:	81 30       	cpi	r24, 0x01	; 1
				temp = 0;
				for(int i=0;i<NUM_CARD/2;i++) if(p2_deck[i].opened == 1) temp++;
     e22:	09 f4       	brne	.+2      	; 0xe26 <main+0x638>
     e24:	9f 5f       	subi	r25, 0xFF	; 255
     e26:	34 96       	adiw	r30, 0x04	; 4
     e28:	e2 17       	cp	r30, r18
     e2a:	f3 07       	cpc	r31, r19
     e2c:	c1 f7       	brne	.-16     	; 0xe1e <main+0x630>
     e2e:	90 93 84 04 	sts	0x0484, r25	; 0x800484 <temp>
				if(p2_card_cnt == temp) state = 17; // win
     e32:	80 91 85 04 	lds	r24, 0x0485	; 0x800485 <p2_card_cnt>
     e36:	98 13       	cpse	r25, r24
     e38:	07 c0       	rjmp	.+14     	; 0xe48 <main+0x65a>
     e3a:	81 e1       	ldi	r24, 0x11	; 17
     e3c:	90 e0       	ldi	r25, 0x00	; 0
     e3e:	90 93 88 04 	sts	0x0488, r25	; 0x800488 <state+0x1>
				else{
					state = 12;
     e42:	80 93 87 04 	sts	0x0487, r24	; 0x800487 <state>
     e46:	1d c0       	rjmp	.+58     	; 0xe82 <main+0x694>
     e48:	8c e0       	ldi	r24, 0x0C	; 12
     e4a:	90 e0       	ldi	r25, 0x00	; 0
					showP1toP1();
     e4c:	90 93 88 04 	sts	0x0488, r25	; 0x800488 <state+0x1>
					showP2toP1();
     e50:	80 93 87 04 	sts	0x0487, r24	; 0x800487 <state>
     e54:	44 da       	rcall	.-2936   	; 0x2de <showP1toP1>
				}
			}
			else{
				USART0_Transmit_String("Wrong\r\n");
     e56:	f1 da       	rcall	.-2590   	; 0x43a <showP2toP1>
     e58:	0d c0       	rjmp	.+26     	; 0xe74 <main+0x686>
     e5a:	8e e1       	ldi	r24, 0x1E	; 30
     e5c:	93 e0       	ldi	r25, 0x03	; 3
				USART1_Transmit_String("Player 1 get wrong card, It's your turn\r\n");
     e5e:	4d d9       	rcall	.-3430   	; 0xfa <USART0_Transmit_String>
     e60:	86 e2       	ldi	r24, 0x26	; 38
     e62:	93 e0       	ldi	r25, 0x03	; 3
     e64:	6f d9       	rcall	.-3362   	; 0x144 <USART1_Transmit_String>
				state = 20;
     e66:	84 e1       	ldi	r24, 0x14	; 20
     e68:	90 e0       	ldi	r25, 0x00	; 0
     e6a:	90 93 88 04 	sts	0x0488, r25	; 0x800488 <state+0x1>
     e6e:	80 93 87 04 	sts	0x0487, r24	; 0x800487 <state>
     e72:	16 c0       	rjmp	.+44     	; 0xea0 <main+0x6b2>
			}
		}
		if(state == 17){
     e74:	80 91 87 04 	lds	r24, 0x0487	; 0x800487 <state>
     e78:	90 91 88 04 	lds	r25, 0x0488	; 0x800488 <state+0x1>
     e7c:	81 31       	cpi	r24, 0x11	; 17
     e7e:	91 05       	cpc	r25, r1
     e80:	69 f4       	brne	.+26     	; 0xe9c <main+0x6ae>
			USART0_Transmit_String("--------------------------------------------------------------------\r\n");
     e82:	8f eb       	ldi	r24, 0xBF	; 191
     e84:	91 e0       	ldi	r25, 0x01	; 1
     e86:	39 d9       	rcall	.-3470   	; 0xfa <USART0_Transmit_String>
     e88:	8f eb       	ldi	r24, 0xBF	; 191
			USART1_Transmit_String("--------------------------------------------------------------------\r\n");
     e8a:	91 e0       	ldi	r25, 0x01	; 1
     e8c:	5b d9       	rcall	.-3402   	; 0x144 <USART1_Transmit_String>
     e8e:	80 e5       	ldi	r24, 0x50	; 80
     e90:	93 e0       	ldi	r25, 0x03	; 3
			USART0_Transmit_String("************** P1 Win **************\r\n************** P2 Lose **************\r\n");
     e92:	33 d9       	rcall	.-3482   	; 0xfa <USART0_Transmit_String>
     e94:	80 e5       	ldi	r24, 0x50	; 80
     e96:	93 e0       	ldi	r25, 0x03	; 3
     e98:	55 d9       	rcall	.-3414   	; 0x144 <USART1_Transmit_String>
			USART1_Transmit_String("************** P1 Win **************\r\n************** P2 Lose **************\r\n");
     e9a:	0c c2       	rjmp	.+1048   	; 0x12b4 <__stack+0x1b5>
     e9c:	44 97       	sbiw	r24, 0x14	; 20
     e9e:	d9 f4       	brne	.+54     	; 0xed6 <main+0x6e8>
     ea0:	8f eb       	ldi	r24, 0xBF	; 191
			break;
     ea2:	91 e0       	ldi	r25, 0x01	; 1
		}
		if(state == 20){
     ea4:	2a d9       	rcall	.-3500   	; 0xfa <USART0_Transmit_String>
     ea6:	8f eb       	ldi	r24, 0xBF	; 191
			USART0_Transmit_String("--------------------------------------------------------------------\r\n");
     ea8:	91 e0       	ldi	r25, 0x01	; 1
     eaa:	4c d9       	rcall	.-3432   	; 0x144 <USART1_Transmit_String>
     eac:	86 e0       	ldi	r24, 0x06	; 6
			USART1_Transmit_String("--------------------------------------------------------------------\r\n");
     eae:	92 e0       	ldi	r25, 0x02	; 2
     eb0:	49 d9       	rcall	.-3438   	; 0x144 <USART1_Transmit_String>
     eb2:	8e e9       	ldi	r24, 0x9E	; 158
     eb4:	93 e0       	ldi	r25, 0x03	; 3
			USART1_Transmit_String("Press 0 to start your turn\r\n");
     eb6:	21 d9       	rcall	.-3518   	; 0xfa <USART0_Transmit_String>
     eb8:	92 dc       	rcall	.-1756   	; 0x7de <USART1_Receive>
     eba:	80 93 b9 04 	sts	0x04B9, r24	; 0x8004b9 <rx>
			USART0_Transmit_String("Player 2's turn\r\n");
     ebe:	80 33       	cpi	r24, 0x30	; 48
     ec0:	31 f4       	brne	.+12     	; 0xece <main+0x6e0>
     ec2:	e5 e1       	ldi	r30, 0x15	; 21
     ec4:	f0 e0       	ldi	r31, 0x00	; 0
			rx = USART1_Receive();
     ec6:	f0 93 88 04 	sts	0x0488, r31	; 0x800488 <state+0x1>
     eca:	e0 93 87 04 	sts	0x0487, r30	; 0x800487 <state>
			if(rx == '0') state = 21;
     ece:	10 92 83 04 	sts	0x0483, r1	; 0x800483 <p1_corr_flag>
     ed2:	10 92 82 04 	sts	0x0482, r1	; 0x800482 <__data_end>
     ed6:	80 91 87 04 	lds	r24, 0x0487	; 0x800487 <state>
     eda:	90 91 88 04 	lds	r25, 0x0488	; 0x800488 <state+0x1>
			p1_corr_flag = 0;
     ede:	85 31       	cpi	r24, 0x15	; 21
			p2_corr_flag = 0;
     ee0:	91 05       	cpc	r25, r1
     ee2:	09 f0       	breq	.+2      	; 0xee6 <main+0x6f8>
		}
		
		if(state == 21){ // state : give 1 card to player 2
     ee4:	92 c0       	rjmp	.+292    	; 0x100a <main+0x81c>
     ee6:	e4 ef       	ldi	r30, 0xF4	; 244
     ee8:	f4 e0       	ldi	r31, 0x04	; 4
     eea:	24 e5       	ldi	r18, 0x54	; 84
     eec:	35 e0       	ldi	r19, 0x05	; 5
     eee:	90 e0       	ldi	r25, 0x00	; 0
     ef0:	80 81       	ld	r24, Z
     ef2:	81 11       	cpse	r24, r1
     ef4:	01 c0       	rjmp	.+2      	; 0xef8 <main+0x70a>
     ef6:	9f 5f       	subi	r25, 0xFF	; 255
     ef8:	34 96       	adiw	r30, 0x04	; 4
     efa:	e2 17       	cp	r30, r18
			temp = 0;
			for(int i=0;i<NUM_CARD;i++){
				if(deck[i].owner == 0) temp++;
     efc:	f3 07       	cpc	r31, r19
     efe:	c1 f7       	brne	.-16     	; 0xef0 <main+0x702>
     f00:	90 93 84 04 	sts	0x0484, r25	; 0x800484 <temp>
			p2_corr_flag = 0;
		}
		
		if(state == 21){ // state : give 1 card to player 2
			temp = 0;
			for(int i=0;i<NUM_CARD;i++){
     f04:	99 23       	and	r25, r25
     f06:	09 f4       	brne	.+2      	; 0xf0a <main+0x71c>
     f08:	53 c0       	rjmp	.+166    	; 0xfb0 <main+0x7c2>
     f0a:	80 91 85 04 	lds	r24, 0x0485	; 0x800485 <p2_card_cnt>
				if(deck[i].owner == 0) temp++;
			}
			if(temp != 0){
     f0e:	8f 5f       	subi	r24, 0xFF	; 255
     f10:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <temp>
				temp = p2_card_cnt + 1;
     f14:	45 c0       	rjmp	.+138    	; 0xfa0 <main+0x7b2>
     f16:	82 b7       	in	r24, 0x32	; 50
     f18:	94 b5       	in	r25, 0x24	; 36
     f1a:	89 9f       	mul	r24, r25
				while(p2_card_cnt < temp){
					random_value = (TCNT0*TCNT2)%NUM_CARD;
     f1c:	c0 01       	movw	r24, r0
     f1e:	11 24       	eor	r1, r1
     f20:	66 2d       	mov	r22, r6
     f22:	77 2d       	mov	r23, r7
     f24:	dd d1       	rcall	.+954    	; 0x12e0 <__divmodhi4>
     f26:	80 93 c1 04 	sts	0x04C1, r24	; 0x8004c1 <random_value>
     f2a:	99 27       	eor	r25, r25
     f2c:	fc 01       	movw	r30, r24
     f2e:	ee 0f       	add	r30, r30
     f30:	ff 1f       	adc	r31, r31
					if(deck[random_value].owner == 0){
     f32:	ee 0f       	add	r30, r30
     f34:	ff 1f       	adc	r31, r31
     f36:	ee 50       	subi	r30, 0x0E	; 14
     f38:	fb 4f       	sbci	r31, 0xFB	; 251
     f3a:	42 81       	ldd	r20, Z+2	; 0x02
     f3c:	41 11       	cpse	r20, r1
     f3e:	34 c0       	rjmp	.+104    	; 0xfa8 <main+0x7ba>
     f40:	88 0f       	add	r24, r24
     f42:	99 1f       	adc	r25, r25
     f44:	88 0f       	add	r24, r24
						deck[random_value].owner = 2;
     f46:	99 1f       	adc	r25, r25
     f48:	fc 01       	movw	r30, r24
     f4a:	ee 50       	subi	r30, 0x0E	; 14
     f4c:	fb 4f       	sbci	r31, 0xFB	; 251
     f4e:	42 82       	std	Z+2, r4	; 0x02
     f50:	2f 5f       	subi	r18, 0xFF	; 255
     f52:	20 93 85 04 	sts	0x0485, r18	; 0x800485 <p2_card_cnt>
						p2_card_cnt++;
     f56:	85 e3       	ldi	r24, 0x35	; 53
     f58:	92 e0       	ldi	r25, 0x02	; 2
     f5a:	f4 d8       	rcall	.-3608   	; 0x144 <USART1_Transmit_String>
						USART1_Transmit_String("You get ");
     f5c:	e0 91 c1 04 	lds	r30, 0x04C1	; 0x8004c1 <random_value>
     f60:	f0 e0       	ldi	r31, 0x00	; 0
     f62:	ee 0f       	add	r30, r30
						if(deck[random_value].color == 0) USART1_Transmit_String("Black ");
     f64:	ff 1f       	adc	r31, r31
     f66:	ee 0f       	add	r30, r30
     f68:	ff 1f       	adc	r31, r31
     f6a:	ee 50       	subi	r30, 0x0E	; 14
     f6c:	fb 4f       	sbci	r31, 0xFB	; 251
     f6e:	80 81       	ld	r24, Z
     f70:	81 11       	cpse	r24, r1
     f72:	04 c0       	rjmp	.+8      	; 0xf7c <main+0x78e>
     f74:	8e e3       	ldi	r24, 0x3E	; 62
     f76:	92 e0       	ldi	r25, 0x02	; 2
     f78:	e5 d8       	rcall	.-3638   	; 0x144 <USART1_Transmit_String>
     f7a:	03 c0       	rjmp	.+6      	; 0xf82 <main+0x794>
     f7c:	85 e4       	ldi	r24, 0x45	; 69
     f7e:	92 e0       	ldi	r25, 0x02	; 2
     f80:	e1 d8       	rcall	.-3646   	; 0x144 <USART1_Transmit_String>
						else USART1_Transmit_String("White ");
     f82:	e0 91 c1 04 	lds	r30, 0x04C1	; 0x8004c1 <random_value>
     f86:	f0 e0       	ldi	r31, 0x00	; 0
     f88:	ee 0f       	add	r30, r30
						USART_Transmit_number(1,deck[random_value].number);
     f8a:	ff 1f       	adc	r31, r31
     f8c:	ee 0f       	add	r30, r30
     f8e:	ff 1f       	adc	r31, r31
     f90:	ee 50       	subi	r30, 0x0E	; 14
     f92:	fb 4f       	sbci	r31, 0xFB	; 251
     f94:	61 81       	ldd	r22, Z+1	; 0x01
     f96:	85 2d       	mov	r24, r5
     f98:	e3 d8       	rcall	.-3642   	; 0x160 <USART_Transmit_number>
     f9a:	8b e7       	ldi	r24, 0x7B	; 123
     f9c:	91 e0       	ldi	r25, 0x01	; 1
     f9e:	d2 d8       	rcall	.-3676   	; 0x144 <USART1_Transmit_String>
						USART1_Transmit_String("\r\n");
     fa0:	20 91 85 04 	lds	r18, 0x0485	; 0x800485 <p2_card_cnt>
			for(int i=0;i<NUM_CARD;i++){
				if(deck[i].owner == 0) temp++;
			}
			if(temp != 0){
				temp = p2_card_cnt + 1;
				while(p2_card_cnt < temp){
     fa4:	30 91 84 04 	lds	r19, 0x0484	; 0x800484 <temp>
     fa8:	23 17       	cp	r18, r19
     faa:	08 f4       	brcc	.+2      	; 0xfae <main+0x7c0>
     fac:	b4 cf       	rjmp	.-152    	; 0xf16 <main+0x728>
     fae:	03 c0       	rjmp	.+6      	; 0xfb6 <main+0x7c8>
     fb0:	8c e4       	ldi	r24, 0x4C	; 76
						USART1_Transmit_String("\r\n");
						
					}
				}
			}
			else USART1_Transmit_String("There is no card on field\r\n");
     fb2:	92 e0       	ldi	r25, 0x02	; 2
     fb4:	c7 d8       	rcall	.-3698   	; 0x144 <USART1_Transmit_String>
     fb6:	10 92 84 04 	sts	0x0484, r1	; 0x800484 <temp>
			temp = 0;
     fba:	f8 01       	movw	r30, r16
     fbc:	82 81       	ldd	r24, Z+2	; 0x02
     fbe:	82 30       	cpi	r24, 0x02	; 2
			for(int i=0; i<NUM_CARD; i++){
				if(deck[i].owner == 2){
     fc0:	b1 f4       	brne	.+44     	; 0xfee <main+0x800>
     fc2:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <temp>
					p2_deck[temp] = deck[i];
     fc6:	a8 2f       	mov	r26, r24
     fc8:	b0 e0       	ldi	r27, 0x00	; 0
     fca:	aa 0f       	add	r26, r26
     fcc:	bb 1f       	adc	r27, r27
     fce:	aa 0f       	add	r26, r26
     fd0:	bb 1f       	adc	r27, r27
     fd2:	ae 53       	subi	r26, 0x3E	; 62
     fd4:	bb 4f       	sbci	r27, 0xFB	; 251
     fd6:	40 81       	ld	r20, Z
     fd8:	51 81       	ldd	r21, Z+1	; 0x01
     fda:	62 81       	ldd	r22, Z+2	; 0x02
     fdc:	73 81       	ldd	r23, Z+3	; 0x03
     fde:	4d 93       	st	X+, r20
     fe0:	5d 93       	st	X+, r21
     fe2:	6d 93       	st	X+, r22
     fe4:	7c 93       	st	X, r23
					temp++;
     fe6:	13 97       	sbiw	r26, 0x03	; 3
     fe8:	8f 5f       	subi	r24, 0xFF	; 255
     fea:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <temp>
					}
				}
			}
			else USART1_Transmit_String("There is no card on field\r\n");
			temp = 0;
			for(int i=0; i<NUM_CARD; i++){
     fee:	34 96       	adiw	r30, 0x04	; 4
     ff0:	85 e0       	ldi	r24, 0x05	; 5
     ff2:	e2 35       	cpi	r30, 0x52	; 82
     ff4:	f8 07       	cpc	r31, r24
					p2_deck[temp] = deck[i];
					temp++;
				}
			}
			showP2toP2();
			showP1toP2();
     ff6:	11 f7       	brne	.-60     	; 0xfbc <main+0x7ce>
			state = 22;
     ff8:	b2 da       	rcall	.-2716   	; 0x55e <showP2toP2>
     ffa:	5f db       	rcall	.-2370   	; 0x6ba <showP1toP2>
     ffc:	86 e1       	ldi	r24, 0x16	; 22
     ffe:	90 e0       	ldi	r25, 0x00	; 0
    1000:	90 93 88 04 	sts	0x0488, r25	; 0x800488 <state+0x1>
    1004:	80 93 87 04 	sts	0x0487, r24	; 0x800487 <state>
		}
		if(state == 22){ // state 22
    1008:	03 c0       	rjmp	.+6      	; 0x1010 <main+0x822>
    100a:	46 97       	sbiw	r24, 0x16	; 22
			//_delay_ms(1);
			if(p2_corr_flag == 0) USART1_Transmit_String("Choose card to open : ");
    100c:	09 f0       	breq	.+2      	; 0x1010 <main+0x822>
    100e:	37 c0       	rjmp	.+110    	; 0x107e <main+0x890>
    1010:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <__data_end>
    1014:	81 11       	cpse	r24, r1
    1016:	04 c0       	rjmp	.+8      	; 0x1020 <main+0x832>
    1018:	88 e6       	ldi	r24, 0x68	; 104
    101a:	92 e0       	ldi	r25, 0x02	; 2
    101c:	93 d8       	rcall	.-3802   	; 0x144 <USART1_Transmit_String>
			else if(p2_corr_flag == 1) USART1_Transmit_String("Choose card to open, Press p to pass : "); // 몇 번째에 있는 카드 선택인지
    101e:	05 c0       	rjmp	.+10     	; 0x102a <main+0x83c>
    1020:	81 30       	cpi	r24, 0x01	; 1
    1022:	19 f4       	brne	.+6      	; 0x102a <main+0x83c>
    1024:	8f e7       	ldi	r24, 0x7F	; 127
    1026:	92 e0       	ldi	r25, 0x02	; 2
    1028:	8d d8       	rcall	.-3814   	; 0x144 <USART1_Transmit_String>
			USART0_Transmit_String("Player 2 is checking your card...\r\n");
    102a:	80 eb       	ldi	r24, 0xB0	; 176
    102c:	93 e0       	ldi	r25, 0x03	; 3
    102e:	65 d8       	rcall	.-3894   	; 0xfa <USART0_Transmit_String>
    1030:	d6 db       	rcall	.-2132   	; 0x7de <USART1_Receive>
			rx = USART1_Receive();
    1032:	80 93 b9 04 	sts	0x04B9, r24	; 0x8004b9 <rx>
    1036:	7e d8       	rcall	.-3844   	; 0x134 <USART1_Transmit>
			USART1_Transmit(rx);
    1038:	90 91 b9 04 	lds	r25, 0x04B9	; 0x8004b9 <rx>
			if((rx >= '0')&&(rx <= '9')){
    103c:	80 ed       	ldi	r24, 0xD0	; 208
    103e:	89 0f       	add	r24, r25
    1040:	8a 30       	cpi	r24, 0x0A	; 10
    1042:	40 f4       	brcc	.+16     	; 0x1054 <main+0x866>
				get_number_1[0] = rx-48;
    1044:	80 93 ba 04 	sts	0x04BA, r24	; 0x8004ba <get_number_1>
				state = 23;
    1048:	27 e1       	ldi	r18, 0x17	; 23
    104a:	30 e0       	ldi	r19, 0x00	; 0
    104c:	30 93 88 04 	sts	0x0488, r19	; 0x800488 <state+0x1>
    1050:	20 93 87 04 	sts	0x0487, r18	; 0x800487 <state>
			}
			if(p2_corr_flag == 1 && rx == 'p'){
    1054:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <__data_end>
    1058:	81 30       	cpi	r24, 0x01	; 1
    105a:	79 f4       	brne	.+30     	; 0x107a <main+0x88c>
    105c:	90 37       	cpi	r25, 0x70	; 112
    105e:	69 f4       	brne	.+26     	; 0x107a <main+0x88c>
				USART1_Transmit_String("\r\n");
    1060:	8b e7       	ldi	r24, 0x7B	; 123
    1062:	91 e0       	ldi	r25, 0x01	; 1
    1064:	6f d8       	rcall	.-3874   	; 0x144 <USART1_Transmit_String>
    1066:	8b ec       	ldi	r24, 0xCB	; 203
				USART1_Transmit_String("Passed\r\n");
    1068:	92 e0       	ldi	r25, 0x02	; 2
    106a:	6c d8       	rcall	.-3880   	; 0x144 <USART1_Transmit_String>
    106c:	84 ed       	ldi	r24, 0xD4	; 212
				USART0_Transmit_String("Player 2 passed, It's your turn\r\n");
    106e:	93 e0       	ldi	r25, 0x03	; 3
    1070:	44 d8       	rcall	.-3960   	; 0xfa <USART0_Transmit_String>
    1072:	f0 92 88 04 	sts	0x0488, r15	; 0x800488 <state+0x1>
				state = 10;
    1076:	e0 92 87 04 	sts	0x0487, r14	; 0x800487 <state>
    107a:	10 92 82 04 	sts	0x0482, r1	; 0x800482 <__data_end>
			}
			p2_corr_flag = 0;
    107e:	80 91 87 04 	lds	r24, 0x0487	; 0x800487 <state>
		} // state 22 end
		if(state == 23){ // state 23
    1082:	90 91 88 04 	lds	r25, 0x0488	; 0x800488 <state+0x1>
    1086:	47 97       	sbiw	r24, 0x17	; 23
    1088:	f1 f4       	brne	.+60     	; 0x10c6 <main+0x8d8>
    108a:	a9 db       	rcall	.-2222   	; 0x7de <USART1_Receive>
			rx = USART1_Receive();
    108c:	80 93 b9 04 	sts	0x04B9, r24	; 0x8004b9 <rx>
    1090:	51 d8       	rcall	.-3934   	; 0x134 <USART1_Transmit>
    1092:	8b e7       	ldi	r24, 0x7B	; 123
			USART1_Transmit(rx);
    1094:	91 e0       	ldi	r25, 0x01	; 1
    1096:	56 d8       	rcall	.-3924   	; 0x144 <USART1_Transmit_String>
			USART1_Transmit_String("\r\n");
    1098:	80 91 b9 04 	lds	r24, 0x04B9	; 0x8004b9 <rx>
    109c:	80 53       	subi	r24, 0x30	; 48
    109e:	8a 30       	cpi	r24, 0x0A	; 10
			if((rx >= '0')&&(rx <= '9')){
    10a0:	90 f4       	brcc	.+36     	; 0x10c6 <main+0x8d8>
    10a2:	ea eb       	ldi	r30, 0xBA	; 186
    10a4:	f4 e0       	ldi	r31, 0x04	; 4
    10a6:	81 83       	std	Z+1, r24	; 0x01
    10a8:	90 81       	ld	r25, Z
				get_number_1[1] = rx-48;
    10aa:	99 0f       	add	r25, r25
    10ac:	29 2f       	mov	r18, r25
    10ae:	22 0f       	add	r18, r18
				get_number_1[2] = get_number_1[0]*10 + get_number_1[1] - 1;
    10b0:	22 0f       	add	r18, r18
    10b2:	92 0f       	add	r25, r18
    10b4:	89 0f       	add	r24, r25
    10b6:	81 50       	subi	r24, 0x01	; 1
    10b8:	82 83       	std	Z+2, r24	; 0x02
    10ba:	99 81       	ldd	r25, Y+1	; 0x01
    10bc:	90 93 87 04 	sts	0x0487, r25	; 0x800487 <state>
    10c0:	a0 92 88 04 	sts	0x0488, r10	; 0x800488 <state+0x1>
				//_delay_ms(1);
				state = 24;
    10c4:	06 c0       	rjmp	.+12     	; 0x10d2 <main+0x8e4>
    10c6:	80 91 87 04 	lds	r24, 0x0487	; 0x800487 <state>
    10ca:	90 91 88 04 	lds	r25, 0x0488	; 0x800488 <state+0x1>
			}
		} // state 23 end
		if(state == 24){ // state 24
    10ce:	48 97       	sbiw	r24, 0x18	; 24
    10d0:	a9 f4       	brne	.+42     	; 0x10fc <main+0x90e>
    10d2:	86 ef       	ldi	r24, 0xF6	; 246
    10d4:	92 e0       	ldi	r25, 0x02	; 2
    10d6:	36 d8       	rcall	.-3988   	; 0x144 <USART1_Transmit_String>
    10d8:	82 db       	rcall	.-2300   	; 0x7de <USART1_Receive>
			USART1_Transmit_String("Number? : "); // 카드가 무엇인지
    10da:	80 93 b9 04 	sts	0x04B9, r24	; 0x8004b9 <rx>
    10de:	2a d8       	rcall	.-4012   	; 0x134 <USART1_Transmit>
    10e0:	80 91 b9 04 	lds	r24, 0x04B9	; 0x8004b9 <rx>
			rx = USART1_Receive();
    10e4:	80 53       	subi	r24, 0x30	; 48
    10e6:	8a 30       	cpi	r24, 0x0A	; 10
    10e8:	48 f4       	brcc	.+18     	; 0x10fc <main+0x90e>
			USART1_Transmit(rx);
    10ea:	80 93 bd 04 	sts	0x04BD, r24	; 0x8004bd <get_number_2>
			if((rx >= '0')&&(rx <= '9')){
    10ee:	89 e1       	ldi	r24, 0x19	; 25
    10f0:	90 e0       	ldi	r25, 0x00	; 0
    10f2:	90 93 88 04 	sts	0x0488, r25	; 0x800488 <state+0x1>
    10f6:	80 93 87 04 	sts	0x0487, r24	; 0x800487 <state>
				get_number_2[0] = rx-48;
    10fa:	06 c0       	rjmp	.+12     	; 0x1108 <__stack+0x9>
				state = 25;
    10fc:	80 91 87 04 	lds	r24, 0x0487	; 0x800487 <state>
    1100:	90 91 88 04 	lds	r25, 0x0488	; 0x800488 <state+0x1>
    1104:	49 97       	sbiw	r24, 0x19	; 25
    1106:	f1 f4       	brne	.+60     	; 0x1144 <__stack+0x45>
    1108:	6a db       	rcall	.-2348   	; 0x7de <USART1_Receive>
			}
		} // state 24 end
		if(state == 25){ // state 25
    110a:	80 93 b9 04 	sts	0x04B9, r24	; 0x8004b9 <rx>
    110e:	12 d8       	rcall	.-4060   	; 0x134 <USART1_Transmit>
    1110:	8b e7       	ldi	r24, 0x7B	; 123
    1112:	91 e0       	ldi	r25, 0x01	; 1
    1114:	17 d8       	rcall	.-4050   	; 0x144 <USART1_Transmit_String>
			rx = USART1_Receive();
    1116:	80 91 b9 04 	lds	r24, 0x04B9	; 0x8004b9 <rx>
    111a:	80 53       	subi	r24, 0x30	; 48
    111c:	8a 30       	cpi	r24, 0x0A	; 10
			USART1_Transmit(rx);
    111e:	90 f4       	brcc	.+36     	; 0x1144 <__stack+0x45>
    1120:	ed eb       	ldi	r30, 0xBD	; 189
			USART1_Transmit_String("\r\n");
    1122:	f4 e0       	ldi	r31, 0x04	; 4
    1124:	81 83       	std	Z+1, r24	; 0x01
    1126:	90 81       	ld	r25, Z
    1128:	99 0f       	add	r25, r25
			if((rx >= '0')&&(rx <= '9')){
    112a:	29 2f       	mov	r18, r25
    112c:	22 0f       	add	r18, r18
    112e:	22 0f       	add	r18, r18
    1130:	92 0f       	add	r25, r18
    1132:	89 0f       	add	r24, r25
				get_number_2[1] = rx-48;
    1134:	82 83       	std	Z+2, r24	; 0x02
    1136:	8a e1       	ldi	r24, 0x1A	; 26
    1138:	90 e0       	ldi	r25, 0x00	; 0
				get_number_2[2] = get_number_2[0]*10 + get_number_2[1];
    113a:	90 93 88 04 	sts	0x0488, r25	; 0x800488 <state+0x1>
    113e:	80 93 87 04 	sts	0x0487, r24	; 0x800487 <state>
    1142:	08 c0       	rjmp	.+16     	; 0x1154 <__stack+0x55>
    1144:	80 91 87 04 	lds	r24, 0x0487	; 0x800487 <state>
    1148:	90 91 88 04 	lds	r25, 0x0488	; 0x800488 <state+0x1>
				state = 26;
    114c:	8a 31       	cpi	r24, 0x1A	; 26
    114e:	91 05       	cpc	r25, r1
    1150:	09 f0       	breq	.+2      	; 0x1154 <__stack+0x55>
    1152:	98 c0       	rjmp	.+304    	; 0x1284 <__stack+0x185>
    1154:	e0 91 bc 04 	lds	r30, 0x04BC	; 0x8004bc <get_number_1+0x2>
			}
		} // state 25 end
		if(state == 26){ // state 14
    1158:	f0 e0       	ldi	r31, 0x00	; 0
    115a:	ee 0f       	add	r30, r30
    115c:	ff 1f       	adc	r31, r31
    115e:	ee 0f       	add	r30, r30
    1160:	ff 1f       	adc	r31, r31
    1162:	e7 57       	subi	r30, 0x77	; 119
    1164:	fb 4f       	sbci	r31, 0xFB	; 251
    1166:	81 81       	ldd	r24, Z+1	; 0x01
			temp = p1_deck[(int)get_number_1[2]].number;
    1168:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <temp>
    116c:	90 91 bf 04 	lds	r25, 0x04BF	; 0x8004bf <get_number_2+0x2>
    1170:	89 13       	cpse	r24, r25
    1172:	7b c0       	rjmp	.+246    	; 0x126a <__stack+0x16b>
    1174:	81 e0       	ldi	r24, 0x01	; 1
    1176:	93 e0       	ldi	r25, 0x03	; 3
    1178:	0e 94 a2 00 	call	0x144	; 0x144 <USART1_Transmit_String>
    117c:	86 ef       	ldi	r24, 0xF6	; 246
    117e:	93 e0       	ldi	r25, 0x03	; 3
			if(temp == get_number_2[2]){
    1180:	0e 94 7d 00 	call	0xfa	; 0xfa <USART0_Transmit_String>
    1184:	e0 91 bc 04 	lds	r30, 0x04BC	; 0x8004bc <get_number_1+0x2>
				USART1_Transmit_String("Correct\r\n");
    1188:	f0 e0       	ldi	r31, 0x00	; 0
    118a:	ee 0f       	add	r30, r30
    118c:	ff 1f       	adc	r31, r31
    118e:	ee 0f       	add	r30, r30
				USART0_Transmit_String("Player 2 get your ");
    1190:	ff 1f       	adc	r31, r31
    1192:	e7 57       	subi	r30, 0x77	; 119
    1194:	fb 4f       	sbci	r31, 0xFB	; 251
    1196:	80 81       	ld	r24, Z
				if(p1_deck[(int)get_number_1[2]].color == 0) USART0_Transmit_String("Black ");
    1198:	81 11       	cpse	r24, r1
    119a:	05 c0       	rjmp	.+10     	; 0x11a6 <__stack+0xa7>
    119c:	8e e3       	ldi	r24, 0x3E	; 62
    119e:	92 e0       	ldi	r25, 0x02	; 2
    11a0:	0e 94 7d 00 	call	0xfa	; 0xfa <USART0_Transmit_String>
    11a4:	04 c0       	rjmp	.+8      	; 0x11ae <__stack+0xaf>
    11a6:	85 e4       	ldi	r24, 0x45	; 69
    11a8:	92 e0       	ldi	r25, 0x02	; 2
    11aa:	0e 94 7d 00 	call	0xfa	; 0xfa <USART0_Transmit_String>
    11ae:	0f 2e       	mov	r0, r31
    11b0:	fa eb       	ldi	r31, 0xBA	; 186
    11b2:	8f 2e       	mov	r8, r31
    11b4:	f4 e0       	ldi	r31, 0x04	; 4
    11b6:	9f 2e       	mov	r9, r31
    11b8:	f0 2d       	mov	r31, r0
				else USART0_Transmit_String("White ");
    11ba:	d4 01       	movw	r26, r8
    11bc:	12 96       	adiw	r26, 0x02	; 2
    11be:	ec 91       	ld	r30, X
				USART_Transmit_number(0,p1_deck[(int)get_number_1[2]].number);
    11c0:	f0 e0       	ldi	r31, 0x00	; 0
    11c2:	ee 0f       	add	r30, r30
    11c4:	ff 1f       	adc	r31, r31
    11c6:	ee 0f       	add	r30, r30
    11c8:	ff 1f       	adc	r31, r31
    11ca:	e7 57       	subi	r30, 0x77	; 119
    11cc:	fb 4f       	sbci	r31, 0xFB	; 251
    11ce:	61 81       	ldd	r22, Z+1	; 0x01
    11d0:	80 e0       	ldi	r24, 0x00	; 0
    11d2:	0e 94 b0 00 	call	0x160	; 0x160 <USART_Transmit_number>
    11d6:	8b e7       	ldi	r24, 0x7B	; 123
    11d8:	91 e0       	ldi	r25, 0x01	; 1
    11da:	0e 94 7d 00 	call	0xfa	; 0xfa <USART0_Transmit_String>
    11de:	f4 01       	movw	r30, r8
    11e0:	22 81       	ldd	r18, Z+2	; 0x02
    11e2:	30 e0       	ldi	r19, 0x00	; 0
    11e4:	f9 01       	movw	r30, r18
				USART0_Transmit_String("\r\n");
    11e6:	ee 0f       	add	r30, r30
    11e8:	ff 1f       	adc	r31, r31
    11ea:	ee 0f       	add	r30, r30
    11ec:	ff 1f       	adc	r31, r31
				p1_deck[(int)get_number_1[2]].opened = 1;
    11ee:	e7 57       	subi	r30, 0x77	; 119
    11f0:	fb 4f       	sbci	r31, 0xFB	; 251
    11f2:	53 82       	std	Z+3, r5	; 0x03
    11f4:	91 81       	ldd	r25, Z+1	; 0x01
    11f6:	f8 01       	movw	r30, r16
    11f8:	22 0f       	add	r18, r18
    11fa:	33 1f       	adc	r19, r19
    11fc:	22 0f       	add	r18, r18
    11fe:	33 1f       	adc	r19, r19
    1200:	27 57       	subi	r18, 0x77	; 119
    1202:	3b 4f       	sbci	r19, 0xFB	; 251
				for(int i=0;i<NUM_CARD;i++){
					if(deck[i].number == p1_deck[(int)get_number_1[2]].number){
    1204:	81 81       	ldd	r24, Z+1	; 0x01
    1206:	89 13       	cpse	r24, r25
						if(deck[i].color == p1_deck[(int)get_number_1[2]].color){
    1208:	06 c0       	rjmp	.+12     	; 0x1216 <__stack+0x117>
    120a:	40 81       	ld	r20, Z
    120c:	d9 01       	movw	r26, r18
    120e:	8c 91       	ld	r24, X
    1210:	48 13       	cpse	r20, r24
    1212:	01 c0       	rjmp	.+2      	; 0x1216 <__stack+0x117>
				else USART0_Transmit_String("White ");
				USART_Transmit_number(0,p1_deck[(int)get_number_1[2]].number);
				USART0_Transmit_String("\r\n");
				p1_deck[(int)get_number_1[2]].opened = 1;
				for(int i=0;i<NUM_CARD;i++){
					if(deck[i].number == p1_deck[(int)get_number_1[2]].number){
    1214:	53 82       	std	Z+3, r5	; 0x03
    1216:	34 96       	adiw	r30, 0x04	; 4
    1218:	b5 e0       	ldi	r27, 0x05	; 5
						if(deck[i].color == p1_deck[(int)get_number_1[2]].color){
    121a:	e2 35       	cpi	r30, 0x52	; 82
    121c:	fb 07       	cpc	r31, r27
    121e:	91 f7       	brne	.-28     	; 0x1204 <__stack+0x105>
    1220:	b0 92 82 04 	sts	0x0482, r11	; 0x800482 <__data_end>
							deck[i].opened = 1;
    1224:	ec e8       	ldi	r30, 0x8C	; 140
    1226:	f4 e0       	ldi	r31, 0x04	; 4
				if(p1_deck[(int)get_number_1[2]].color == 0) USART0_Transmit_String("Black ");
				else USART0_Transmit_String("White ");
				USART_Transmit_number(0,p1_deck[(int)get_number_1[2]].number);
				USART0_Transmit_String("\r\n");
				p1_deck[(int)get_number_1[2]].opened = 1;
				for(int i=0;i<NUM_CARD;i++){
    1228:	2c eb       	ldi	r18, 0xBC	; 188
    122a:	34 e0       	ldi	r19, 0x04	; 4
    122c:	90 e0       	ldi	r25, 0x00	; 0
    122e:	80 81       	ld	r24, Z
						if(deck[i].color == p1_deck[(int)get_number_1[2]].color){
							deck[i].opened = 1;
						}
					}
				}
				p2_corr_flag = 1;
    1230:	81 30       	cpi	r24, 0x01	; 1
    1232:	09 f4       	brne	.+2      	; 0x1236 <__stack+0x137>
    1234:	9f 5f       	subi	r25, 0xFF	; 255
    1236:	34 96       	adiw	r30, 0x04	; 4
    1238:	e2 17       	cp	r30, r18
    123a:	f3 07       	cpc	r31, r19
    123c:	c1 f7       	brne	.-16     	; 0x122e <__stack+0x12f>
				temp = 0;
				for(int i=0;i<NUM_CARD/2;i++) if(p1_deck[i].opened == 1) temp++;
    123e:	90 93 84 04 	sts	0x0484, r25	; 0x800484 <temp>
    1242:	80 91 86 04 	lds	r24, 0x0486	; 0x800486 <p1_card_cnt>
    1246:	98 13       	cpse	r25, r24
    1248:	07 c0       	rjmp	.+14     	; 0x1258 <__stack+0x159>
    124a:	8b e1       	ldi	r24, 0x1B	; 27
    124c:	90 e0       	ldi	r25, 0x00	; 0
    124e:	90 93 88 04 	sts	0x0488, r25	; 0x800488 <state+0x1>
				if(p1_card_cnt == temp) state = 27;
    1252:	80 93 87 04 	sts	0x0487, r24	; 0x800487 <state>
    1256:	19 c0       	rjmp	.+50     	; 0x128a <__stack+0x18b>
    1258:	82 d9       	rcall	.-3324   	; 0x55e <showP2toP2>
    125a:	2f da       	rcall	.-2978   	; 0x6ba <showP1toP2>
    125c:	86 e1       	ldi	r24, 0x16	; 22
    125e:	90 e0       	ldi	r25, 0x00	; 0
    1260:	90 93 88 04 	sts	0x0488, r25	; 0x800488 <state+0x1>
    1264:	80 93 87 04 	sts	0x0487, r24	; 0x800487 <state>
				else{
					showP2toP2();
    1268:	3b cb       	rjmp	.-2442   	; 0x8e0 <main+0xf2>
    126a:	8e e1       	ldi	r24, 0x1E	; 30
					showP1toP2();
    126c:	93 e0       	ldi	r25, 0x03	; 3
    126e:	0e 94 a2 00 	call	0x144	; 0x144 <USART1_Transmit_String>
					state = 22;
    1272:	89 e0       	ldi	r24, 0x09	; 9
    1274:	94 e0       	ldi	r25, 0x04	; 4
    1276:	0e 94 7d 00 	call	0xfa	; 0xfa <USART0_Transmit_String>
    127a:	f0 92 88 04 	sts	0x0488, r15	; 0x800488 <state+0x1>
				}
			}
			else{
				USART1_Transmit_String("Wrong\r\n");
    127e:	e0 92 87 04 	sts	0x0487, r14	; 0x800487 <state>
    1282:	2e cb       	rjmp	.-2468   	; 0x8e0 <main+0xf2>
    1284:	4b 97       	sbiw	r24, 0x1b	; 27
				USART0_Transmit_String("Player 2 get wrong card, It's your turn\r\n");
    1286:	09 f0       	breq	.+2      	; 0x128a <__stack+0x18b>
    1288:	2b cb       	rjmp	.-2474   	; 0x8e0 <main+0xf2>
    128a:	8f eb       	ldi	r24, 0xBF	; 191
    128c:	91 e0       	ldi	r25, 0x01	; 1
				state = 10;
    128e:	0e 94 7d 00 	call	0xfa	; 0xfa <USART0_Transmit_String>
    1292:	8f eb       	ldi	r24, 0xBF	; 191
    1294:	91 e0       	ldi	r25, 0x01	; 1
    1296:	0e 94 a2 00 	call	0x144	; 0x144 <USART1_Transmit_String>
			}
			
		}
		if(state == 27){
    129a:	83 e3       	ldi	r24, 0x33	; 51
    129c:	94 e0       	ldi	r25, 0x04	; 4
			USART0_Transmit_String("--------------------------------------------------------------------\r\n");
    129e:	0e 94 7d 00 	call	0xfa	; 0xfa <USART0_Transmit_String>
    12a2:	83 e3       	ldi	r24, 0x33	; 51
    12a4:	94 e0       	ldi	r25, 0x04	; 4
			USART1_Transmit_String("--------------------------------------------------------------------\r\n");
    12a6:	0e 94 a2 00 	call	0x144	; 0x144 <USART1_Transmit_String>
    12aa:	04 c0       	rjmp	.+8      	; 0x12b4 <__stack+0x1b5>
    12ac:	90 37       	cpi	r25, 0x70	; 112
			USART0_Transmit_String("************** P2 Win **************\r\n************** P1 Lose **************\r\n");
    12ae:	09 f0       	breq	.+2      	; 0x12b2 <__stack+0x1b3>
    12b0:	e8 cc       	rjmp	.-1584   	; 0xc82 <main+0x494>
    12b2:	d1 cc       	rjmp	.-1630   	; 0xc56 <main+0x468>
    12b4:	80 e0       	ldi	r24, 0x00	; 0
			USART1_Transmit_String("************** P2 Win **************\r\n************** P1 Lose **************\r\n");
    12b6:	90 e0       	ldi	r25, 0x00	; 0
    12b8:	0f 90       	pop	r0
    12ba:	df 91       	pop	r29
    12bc:	cf 91       	pop	r28
    12be:	1f 91       	pop	r17
			USART0_Transmit(rx);
			if((rx >= '0')&&(rx <= '9')){
				get_number_1[0] = rx-48;
				state = 13;
			}
			if(p1_corr_flag == 1 && rx == 'p'){
    12c0:	0f 91       	pop	r16
    12c2:	ff 90       	pop	r15
    12c4:	ef 90       	pop	r14
    12c6:	df 90       	pop	r13
			USART0_Transmit_String("************** P2 Win **************\r\n************** P1 Lose **************\r\n");
			USART1_Transmit_String("************** P2 Win **************\r\n************** P1 Lose **************\r\n");
			break;
		}
    } // while end
} // main end
    12c8:	cf 90       	pop	r12
    12ca:	bf 90       	pop	r11
    12cc:	af 90       	pop	r10
    12ce:	9f 90       	pop	r9
    12d0:	8f 90       	pop	r8
    12d2:	7f 90       	pop	r7
    12d4:	6f 90       	pop	r6
    12d6:	5f 90       	pop	r5
    12d8:	4f 90       	pop	r4
    12da:	3f 90       	pop	r3
    12dc:	2f 90       	pop	r2
    12de:	08 95       	ret

000012e0 <__divmodhi4>:
    12e0:	97 fb       	bst	r25, 7
    12e2:	07 2e       	mov	r0, r23
    12e4:	16 f4       	brtc	.+4      	; 0x12ea <__divmodhi4+0xa>
    12e6:	00 94       	com	r0
    12e8:	06 d0       	rcall	.+12     	; 0x12f6 <__divmodhi4_neg1>
    12ea:	77 fd       	sbrc	r23, 7
    12ec:	08 d0       	rcall	.+16     	; 0x12fe <__divmodhi4_neg2>
    12ee:	0b d0       	rcall	.+22     	; 0x1306 <__udivmodhi4>
    12f0:	07 fc       	sbrc	r0, 7
    12f2:	05 d0       	rcall	.+10     	; 0x12fe <__divmodhi4_neg2>
    12f4:	3e f4       	brtc	.+14     	; 0x1304 <__divmodhi4_exit>

000012f6 <__divmodhi4_neg1>:
    12f6:	90 95       	com	r25
    12f8:	81 95       	neg	r24
    12fa:	9f 4f       	sbci	r25, 0xFF	; 255
    12fc:	08 95       	ret

000012fe <__divmodhi4_neg2>:
    12fe:	70 95       	com	r23
    1300:	61 95       	neg	r22
    1302:	7f 4f       	sbci	r23, 0xFF	; 255

00001304 <__divmodhi4_exit>:
    1304:	08 95       	ret

00001306 <__udivmodhi4>:
    1306:	aa 1b       	sub	r26, r26
    1308:	bb 1b       	sub	r27, r27
    130a:	51 e1       	ldi	r21, 0x11	; 17
    130c:	07 c0       	rjmp	.+14     	; 0x131c <__udivmodhi4_ep>

0000130e <__udivmodhi4_loop>:
    130e:	aa 1f       	adc	r26, r26
    1310:	bb 1f       	adc	r27, r27
    1312:	a6 17       	cp	r26, r22
    1314:	b7 07       	cpc	r27, r23
    1316:	10 f0       	brcs	.+4      	; 0x131c <__udivmodhi4_ep>
    1318:	a6 1b       	sub	r26, r22
    131a:	b7 0b       	sbc	r27, r23

0000131c <__udivmodhi4_ep>:
    131c:	88 1f       	adc	r24, r24
    131e:	99 1f       	adc	r25, r25
    1320:	5a 95       	dec	r21
    1322:	a9 f7       	brne	.-22     	; 0x130e <__udivmodhi4_loop>
    1324:	80 95       	com	r24
    1326:	90 95       	com	r25
    1328:	bc 01       	movw	r22, r24
    132a:	cd 01       	movw	r24, r26
    132c:	08 95       	ret

0000132e <_exit>:
    132e:	f8 94       	cli

00001330 <__stop_program>:
    1330:	ff cf       	rjmp	.-2      	; 0x1330 <__stop_program>
